<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>新時代中國特色社會主義思想 相關</title>
    <url>/next-nest/2022/01/03/Socialism-with-Chinese-Characteristics-in-the-New-Era/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>八個明確與十四個堅持</p>
<span id="more"></span>
<p><img src="/next-nest/2022/01/03/Socialism-with-Chinese-Characteristics-in-the-New-Era/outline.jpeg" alt></p>
<h2 id="header2-8-clarifications">八個明確</h2>

<ol>
<li>明確堅持和發展中國特色社會主義，總任務是實現社會主義現代化和中華民族偉大復興，在全面建成小康社會的基礎上，分兩步走在本世紀中葉建成富強民主文明和諧美麗的社會主義現代化強國;</li>
<li>明確新時代我國社會主要矛盾是人民日益增長的美好生活需要和不平衡不充分的發展之間的矛盾，必須堅持以人民為中心的發展思想，不斷促進人的全面發展、全體人民共同富裕;</li>
<li>明確中國特色社會主義事業總體佈局是“五位一體”、戰略佈局是“四個全面”，強調堅定道路自信、理論自信、制度自信、文化自信;</li>
<li>明確全面深化改革總目標是完善和發展中國特色社會主義制度、推進國家治理體系和治理能力現代化;</li>
<li>明確全面推進依法治國總目標是建設中國特色社會主義法治體系、建設社會主義法治國家;</li>
<li>明確黨在新時代的強軍目標是建設一支聽黨指揮、能打勝仗、作風優良的人民軍隊，把人民軍隊建設成為世界一流軍隊;</li>
<li>明確中國特色大國外交要推動構建新型國際關係，推動構建人類命運共同體;</li>
<li>明確中國特色社會主義最本質的特徵是中國共產黨領導，中國特色社會主義制度的最大優勢是中國共產黨領導，黨是最高政治領導力量，提出新時代黨的建設總要求，突出政治建設在黨的建設中的重要地位;</li>
</ol>
<h2 id="header2-14-persistences">十四個堅持</h2>

<p><img src="/next-nest/2022/01/03/Socialism-with-Chinese-Characteristics-in-the-New-Era/14-persistences.jpeg" alt></p>
<ol>
<li>堅持黨對一切工作的領導;</li>
<li>堅持以人民為中心;</li>
<li>堅持全面深化改革;</li>
<li>堅持新發展理念;</li>
<li>堅持人民當家作主;</li>
<li>堅持全面依法治國;</li>
<li>堅持社會主義核心價值體系;</li>
<li>堅持在發展中保障和改善民生;</li>
<li>堅持人與自然和諧共生;</li>
<li>堅持總體國家安全觀;</li>
<li>堅持黨對人民軍隊的絕對領導;</li>
<li>堅持“一國兩制”和推進祖國統一;</li>
<li>堅持推動構建人類命運共同體;</li>
<li>堅持全面從嚴治黨;</li>
</ol>
]]></content>
      <tags>
        <tag>考試</tag>
      </tags>
  </entry>
  <entry>
    <title>「阿良良木健】告白·三部神曲</title>
    <url>/next-nest/2021/12/08/atunemic-love3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p><a href="https://zh.moegirl.org.cn/末日DISCO"><strong>末日Disco</strong></a>是<em>世界最後的狂歡</em>，亦是<em>末日最後的頌歌</em>；<br><a href="https://zh.moegirl.org.cn/明日DISCO"><strong>明日Disco</strong></a>是<em>世界最初的重生</em>，亦是<em>明日最初的頌歌</em>；<br>如若<em>在下定了決心以後，在一切都太晚以前，我還能夠</em>説出<a href="https://zh.moegirl.org.cn/I_LOVE_U"><strong>I LOVE U</strong></a>，<br>那麽在<a href="https://zh.moegirl.org.cn/心加心"><strong>心加心</strong></a>的旋律中，就請<em>讓我們，走向幸福的結局</em>。</p>
<span id="more"></span>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>Vocaloid CHINA 創作結社 Atunemic 的告白·三部神曲是由<code>世界DISCO</code>(2012)、<code>I LOVE U</code>(2013)、<code>Hear the Heart</code>(<strong>心加心</strong>, 2016)三部分(及各部分包含的衍生曲目)所組成的Vocaloid中文原創系列曲目。其中第一部<code>世界DISCO</code>為雙生曲目，包含作品<code>末日DISCO</code>與<code>明日DISCO</code>，第二部<code>I LOVE U</code>包含兩首衍生曲目(<code>二人三角</code>與<code>依存症</code>)。</p>
<p>整個系列皆爲同一支由<code>阿良良木健</code>、<code>蒼十三</code>、<code>歷歷路路</code>組成的主創團隊的作品，並一直使用 洛天依V3<sup><a href="#fn_1" id="reffn_1">1</a></sup> 作爲Vocaloid音源。</p>
<p>從最初的末日DISCO發佈起，這些曲目便在bilibili上激發彈幕告白的風潮，因而<strong>阿良良木健</strong>從此被稱爲<code>告白P</code>。</p>
<h2 id="Staff"><a href="#Staff" class="headerlink" title="Staff"></a>Staff</h2><ul>
<li>Music: 阿良良木健<sup><a href="#fn_2" id="reffn_2">2</a></sup></li>
<li>Lyrics: 蒼十三</li>
<li>Tuning: 阿良良木健</li>
<li>Illustration: 歷歷路路<sup><a href="#fn_3" id="reffn_3">3</a></sup></li>
<li>PV: 阿良良木健</li>
<li>Vocal: <strong><em>洛 天依 (Vocaloid3)</em></strong></li>
</ul>
<h2 id="Sekai-DISCO"><a href="#Sekai-DISCO" class="headerlink" title="Sekai DISCO"></a>Sekai DISCO</h2><p>告白·三部神曲之一，世界DISCO。<br>包含<code>末日DISCO</code>與<code>明日DISCO</code>，兩首互爲雙生曲目。</p>
<h3 id="header3-destruct-disco">末日DISCO</h3>

<blockquote>
<p>世界最後的狂歡　末日最後的頌歌</p>
<pre><code>如果沒有明天 該怎麼告別
怎麼跟過去的我 說一句再見
就讓我靠近 你冰冷的臉
看這世界 在一瞬間毀滅
</code></pre></blockquote>
<p><strong><em>末日DISCO<sup><a href="#fn_4" id="reffn_4">4</a></sup></em></strong> 是<strong>阿良良木健</strong>於2012年12月14日、15日分別投稿至bilibili和YouTube的VOCALOID中文原創歌曲，由<strong>洛天依</strong>演唱，為 <strong><em>明日DISCO</em></strong> 的雙生歌曲與告白三部曲的首作。殿堂曲，截至筆者編輯時間<code>(2021年12月09日01時)</code>已有<code>35.03</code>万次觀看，<code>1.43</code>万人收藏。</p>
<blockquote>
<p>當明日消失，末日到來，世界至此開始毀滅倒數。如果下一秒就是世界末日，你，該怎麼做？</p>
</blockquote>
<ul>
<li><p>Origin Work</p>
  
    <div id="aplayer-zeQYqanc" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="28830335" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p>  <a href="https://www.bilibili.com/video/av415362/?p=1">Bilibili: <code>av415362</code></a></p>
</li>
<li><p>Lyrics</p>
  <figure class="highlight plaintext"><figcaption><span>末日DISCO 歌詞</span><a href="https://zh.moegirl.org.cn/末日DISCO#歌词">萌娘百科詞條 末日DISCO 歌詞</a></figcaption><table><tr><td class="code"><pre><span class="line">天地搖擺　雙眼布滿塵埃</span><br><span class="line">人群往來　碾碎菸灰捲起陰霾</span><br><span class="line">霓虹燈彩　映著臉頰蒼白</span><br><span class="line">染上了這一刻的色彩</span><br><span class="line"></span><br><span class="line">舞廳狂歡　誰在興奮等待</span><br><span class="line">旋律節拍　隨著時間一起崩壞</span><br><span class="line">當下一秒　就是末日到來</span><br><span class="line">還有什麼事情讓你無法釋懷</span><br><span class="line"></span><br><span class="line">曾追尋的　曾猶豫的</span><br><span class="line">曾有過的　所有遺憾</span><br><span class="line">就在此刻　大聲地都說出來</span><br><span class="line"></span><br><span class="line">明白　你那份跳動的愛</span><br><span class="line">別再　裝作著無所謂的姿態</span><br><span class="line">現在　就跟著節奏搖擺</span><br><span class="line">將所有的偽裝拋開</span><br><span class="line">趁著　月亮沒披上黑白</span><br><span class="line">趕快　向最愛的人大聲告白</span><br><span class="line">將那些期待全部推翻</span><br><span class="line">明天不會到來　別再等待</span><br><span class="line"></span><br><span class="line">好想繼續　當你嘆息回憶</span><br><span class="line">好想回去　當你哭著後悔曾經</span><br><span class="line">如果可以　你說如果可以</span><br><span class="line">讓我回去　你說那天不該放棄</span><br><span class="line"></span><br><span class="line">已經離開　已不存在</span><br><span class="line">就不要再　留戀依賴</span><br><span class="line">珍惜現在　每一秒鐘的痛快</span><br><span class="line"></span><br><span class="line">明白　你那份跳動的愛</span><br><span class="line">別再　裝作著無所謂的姿態</span><br><span class="line">現在　就跟著節奏搖擺</span><br><span class="line">將所有的偽裝拋開</span><br><span class="line">趁著　月亮沒披上黑白</span><br><span class="line">趕快　向最愛的人大聲告白</span><br><span class="line">將那些期待全部推翻</span><br><span class="line">明天不會到來　別再等待　別再等待</span><br><span class="line"></span><br><span class="line">如果沒有明天　該怎麼告別</span><br><span class="line">怎麼跟過去的我　說一句再見</span><br><span class="line">就讓我靠近　你冰冷的臉</span><br><span class="line">看這世界　在一瞬間毀滅</span><br><span class="line"></span><br><span class="line">所以　明白　你那份跳動的愛</span><br><span class="line">別再　裝作著無所謂的姿態</span><br><span class="line">現在　就跟著節奏搖擺</span><br><span class="line">將所有的偽裝拋開</span><br><span class="line">地球　再無法逃離混沌</span><br><span class="line">你還　是否愚昧等待著重生</span><br><span class="line">就在　末日降臨這一刻</span><br><span class="line">讓我來詠唱　這最後的歌　最後的歌</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="header3-rebirth-disco">明日DISCO</h3>

<blockquote>
<p>世界最初的重生　明日最初的頌歌</p>
<pre><code>燃燒的夢想是 最初的歌
相信自己 其實你眼光仍清澈
就在你許下 願望的那刻
讓那天空 鋪上絢麗的顏色
</code></pre></blockquote>
<p><strong><em>明日DISCO<sup><a href="#fn_5" id="reffn_5">5</a></sup></em></strong> 是<strong>阿良良木健</strong>於2012年12月26日和27日分別投稿至YouTube和bilibili的VOCALOID中文原創歌曲，由<strong>洛天依</strong>演唱，為 <strong><em>末日DISCO</em></strong> 的雙生歌曲與告白三部曲的首作。殿堂曲，截至筆者編輯時間<code>(2021年12月09日01時)</code>已有<code>21.40</code>万次觀看，<code>0.98</code>萬人收藏。</p>
<blockquote>
<p>當末日過去，明日到來，世界至此進入新的紀元。在這萬物復甦的嶄新時刻，你，有何願望？</p>
</blockquote>
<ul>
<li><p>Origin Work</p>
  
    <div id="aplayer-oFacDzlU" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="28830336" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p>  <a href="https://www.bilibili.com/video/av424616/?p=1">Bilibili: <code>av424616</code></a></p>
</li>
<li><p>Lyrics</p>
  <figure class="highlight plaintext"><figcaption><span>明日DISCO 歌詞</span><a href="https://zh.moegirl.org.cn/明日DISCO#歌词">萌娘百科詞條 明日DISCO 歌詞</a></figcaption><table><tr><td class="code"><pre><span class="line">霧靄陰霾　轉眼消逝散開</span><br><span class="line">風雨離散　朝霞映上天際純白</span><br><span class="line">人潮澎湃　驚嘆陽光還在</span><br><span class="line">讚美著新世界的色彩</span><br><span class="line"></span><br><span class="line">光景未改　人群熙攘往來</span><br><span class="line">鐘錶指針　依舊行走不願停擺</span><br><span class="line">末日重生　既然心跳還在</span><br><span class="line">還有什麼事情讓你無法釋懷</span><br><span class="line"></span><br><span class="line">曾追尋的　曾期待的</span><br><span class="line">不要猶豫　就趁現在</span><br><span class="line">別再徘徊　追尋明天的光彩</span><br><span class="line"></span><br><span class="line">明白　你不願放棄的愛</span><br><span class="line">現在　沿途的風景依然精彩</span><br><span class="line">你的夢想從不會腐壞</span><br><span class="line">總會有天綻放花開</span><br><span class="line">趁著　月亮褪去了黑白</span><br><span class="line">趕快　總有人等你一句告白</span><br><span class="line">別怕　全世界都是舞台</span><br><span class="line">願望都許下了為何等待</span><br><span class="line"></span><br><span class="line">拿起畫筆　現在依舊可以</span><br><span class="line">寫下音符　描繪你自己的旋律</span><br><span class="line">有些文字　總能寫出傳奇</span><br><span class="line">看看鏡子　那是世上唯一的你</span><br><span class="line"></span><br><span class="line">就算錯過　就算失落</span><br><span class="line">也要讓我　重新來過</span><br><span class="line">人生短暫　但夢想永不消散</span><br><span class="line"></span><br><span class="line">明白　你不願放棄的愛</span><br><span class="line">現在　沿途的風景依然精彩</span><br><span class="line">你的夢想從不會腐壞</span><br><span class="line">總會有天綻放花開</span><br><span class="line">趁著　月亮褪去了黑白</span><br><span class="line">趕快　總有人等你一句告白</span><br><span class="line">別怕　全世界都是舞台</span><br><span class="line">願望都許下了　為何等待　別再等待</span><br><span class="line"></span><br><span class="line">燃燒的夢想是　最初的歌</span><br><span class="line">相信自己　其實你眼光仍清澈</span><br><span class="line">就在你許下　願望的那刻</span><br><span class="line">讓那天空　鋪上絢麗的顏色</span><br><span class="line"></span><br><span class="line">明白　你不願放棄的愛</span><br><span class="line">現在　沿途的風景依然精彩</span><br><span class="line">你的夢想從不會腐壞</span><br><span class="line">總會有天綻放花開</span><br><span class="line">其實　你不必對誰依賴</span><br><span class="line">路上　總會有坎坷崎嶇障礙</span><br><span class="line">就讓我用僅有的歌聲</span><br><span class="line">和你一起歌唱　最初的歌　最初的歌</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="header3-sekaidisco-opinions">Personal Opinions</h3>

<p>(在此，筆者願淺談自己對這首曲目的拙見。)</p>
<p>時間回溯到2012年。<br>根據考古學者的相關研究，人們發現了瑪雅文明所留下的如下預言：</p>
<pre><code>在2012年12月21日，地球將結束第四個並進入第五個“太陽紀”，人類中唯有修成正果的“真人”方能回到低緯度，繼續進行“天人合一”的遷徙生活。
</code></pre><p>縱使是截至筆者編輯此份檔案的時間，仍然沒有相關科研結論能夠證明這份預言的真實性或合理性。但其語言中威慴力之大、描繪場景之恐怖，使得<code>2012年12月21日</code>被人們稱爲<strong>世界末日</strong>。<del>由此，這個事件為各路商家、媒體、電影製作公司挖掘出巨大商機，並催生了諸多如《2012》一樣的災難題材影片。</del></p>
<p>但是在這一對雙生曲目中，留下的唯有主創團隊的三個人對於<br>“如若末日真的降臨，有什麽重要的事尚未完成？”<br>“如若其後安然無恙，有什麽重要的事可以重來？”<br>這樣的問題的思考。</p>
<p>終於發現，其實對於作爲普通人的你我而言，重要的事情并沒有太多，但有些足以傾盡一生去爲之努力，有些將會決定一生。</p>
<p>告白這樣的事情顯然屬於後者。</p>
<p>在我們的生命中或許不會遇到諸如“世界末日”一樣毀滅一切、萬劫不復的災難，但是生活中早已習慣的日常卻是隨時可以被打破的：明天會發生什麽、下一秒會發生什麽，其實在你我真正迎來那個時刻之前，什麽都有可能發生，不論是你我知道的還是不知道的、你我能承受的還是無法接受的、意料之内的還是甚至情理之外的。。。</p>
<p>所以，還請珍惜當下尚且能夠把握的日常，還請不要浪費它，還請及時地邁出步伐，向心中所愛告白。</p>
<h2 id="I-LOVE-U"><a href="#I-LOVE-U" class="headerlink" title="I LOVE U"></a>I LOVE U</h2><blockquote>
<p>在下定了決心以後，在一切都太晚以前，我，只想要對你說!…<br>… I LOVE U</p>
</blockquote>
<p>告白·三部神曲之二， I LOVE U</p>
<pre><code>如果你可以肯定我的一片心意　如果你可以回應我的一個問題
如果你能夠願意請坐下來聆聽　這一份在我心底最深處的秘密
</code></pre><p><strong><em>I LOVE U<sup><a href="#fn_6" id="reffn_6">6</a></sup></em></strong> 是<strong>阿良良木健</strong>於2013年04月20日投稿至bilibili和Youtube的VOCALOID中文原創歌曲，由<strong>洛天依</strong>演唱，為告白三部曲的第二作，收錄於<strong>阿良良木健</strong>首張實體專輯<a href="https://zh.moegirl.org.cn/恋爱理论(专辑)"><strong>戀愛理論</strong></a>中。殿堂曲，截至筆者編輯時間<code>(2021年12月09日01時)</code>已有<code>68.92</code>万次觀看，<code>3.74</code>万次收藏。</p>
<p>本曲是一首溫馨向的告白歌曲。清新的旋律搭配少女心的歌詞與PV，呈現了戀愛的美好。</p>
<p>本曲在<a href="https://zh.moegirl.org.cn/周刊VOCALOID中文排行榜">周刊VOCALOID中文排行榜</a><a href="https://zh.moegirl.org.cn/周刊VOCALOID中文排行榜400">第400期</a>中獲得第23名，曾經是周刊VOCALOID中文排行榜主榜在榜時間距投稿時間最長的曲目（後被<a href="https://zh.moegirl.org.cn/三千世界鸦杀尽"><strong>三千世界鴉殺盡</strong></a>於443期打破）。</p>
<p>2019年07月12日舉辦的2019洛天依生日會演唱曲目之一。</p>
<h3 id="header3-iloveu-oriwork">Origin Work</h3>


    <div id="aplayer-oyZVRVUL" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="427016438" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<ul>
<li><p>本家<a href="https://www.bilibili.com/video/av540768/">Bilibili: <code>av540768</code></a></p>
</li>
<li><p><strong>潛移默化P</strong>老師的Remix <a href="https://www.bilibili.com/video/av541198/">Bilibili: <code>av541198</code></a></p>
</li>
<li><p><strong>oCau</strong>老師的<a href="https://zh.moegirl.org.cn/IA"><strong>IA</strong></a>日語版</p>
  
    <div id="aplayer-FrfssJMv" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="429461621" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
</li>
</ul>
<h3 id="header3-iloveu-lyrics">Lyrics</h3>

<figure class="highlight plaintext"><figcaption><span>I LOVE U 歌詞</span><a href="https://zh.moegirl.org.cn/I_LOVE_U#歌词">萌娘百科詞條 I LOVE U 歌詞</a></figcaption><table><tr><td class="code"><pre><span class="line">如果你可以肯定我的一片心意　如果你可以回應我的一個問題</span><br><span class="line">如果你能夠願意請坐下來聆聽　這一份在我心底最深處的秘密</span><br><span class="line"></span><br><span class="line">午後的陽光照在你的眉梢　晴朗的就像你單純的微笑</span><br><span class="line">揚起的嘴角不敢讓你看到　有你在身旁是多麼的美妙</span><br><span class="line">有些小困擾在我身邊圍繞　也許得不到空想總是美好</span><br><span class="line">鎖定了目標直到無可救藥　卻鑽進死角不想從中逃掉</span><br><span class="line"></span><br><span class="line">懸在半空卻始終不敢確定　想不去想你卻始終無法忘記</span><br><span class="line">就算笑自己像小丑一樣滑稽　也只能夠不停繼續</span><br><span class="line"></span><br><span class="line">如果你可以肯定我的一片心意　如果你可以回應我的一個問題</span><br><span class="line">如果你願意相信我們這份默契　就讓我們用生命許下這個約定</span><br><span class="line">如果你能夠辨認我的一個眼神　如果你能夠確認我的一個疑問</span><br><span class="line">如果你能夠讓我相信夢想成真</span><br><span class="line">如果你能夠默認去承認　我這個偷偷喜歡你的人</span><br><span class="line"></span><br><span class="line">~ I LOVE U ~</span><br><span class="line"></span><br><span class="line">地球那麼小能讓我們遇到　原因也不少不止因為湊巧</span><br><span class="line">你注視著我我看著你傻笑　仿佛全世界靜止在這一秒</span><br><span class="line">遇到了苦惱你會幫我甩掉　你的煩心事也只有我知道</span><br><span class="line">明明是朋友卻比朋友更高　為何做不到心貼心的擁抱</span><br><span class="line"></span><br><span class="line">你的溫柔我小心翼翼收好　但我的心情你是否可以收到</span><br><span class="line">如果有一天你聽見我的心跳　希望你也能夠知道</span><br><span class="line"></span><br><span class="line">如果你可以肯定我的一片心意　如果你可以回應我的一個問題</span><br><span class="line">如果你願意相信我們這份默契　就讓我們用生命許下這個約定</span><br><span class="line">如果你能夠辨認我的一個眼神　如果你能夠確認我的一個疑問</span><br><span class="line">如果你能夠讓我相信夢想成真</span><br><span class="line">如果你能夠默認去承認　我這個默默喜歡你的人</span><br><span class="line"></span><br><span class="line">~ I LOVE U ~</span><br><span class="line"></span><br><span class="line">所以我決定不再掩飾著我自己　所以我就在這裡唱出我的旋律</span><br><span class="line">就算你會拒絕我也沒什麼關係　至少你在我心裡是永遠的記憶</span><br><span class="line">希望你可以回應我的那條訊息　希望你可以肯定我告白的勇氣</span><br><span class="line">期待著你會願意走出朋友關係</span><br><span class="line">期待著你能決定</span><br><span class="line">這一分這一秒這一刻走到一起</span><br><span class="line"></span><br><span class="line">~ I LOVE U ~</span><br></pre></td></tr></table></figure>
<h3 id="header3-iloveu-extra">Extra</h3>

<ol>
<li><p>在本曲目的pv中出現了各個語言中<code>我愛你</code>的表述，有位評論區的朋友記錄了下來</p>
 <blockquote><p>je t’aime ——French<br>ich liebe﻿ dich ——German<br>Σ ‘αγαπώ——Greek<br>Te amo——Spanish, Italian, Latin<br>Я люблю цябе——Russian<br>ฉันรักคุณ——Thai<br>T’estim ——Catalonian<br>사랑해요——Korean<br>Jag älskar dig——Swedish<br>אני אוהב אותך ——Hebrew<br>Kocham cię——Polish<br>Tôi yêu bạn——Vietnamese<br>أحبك——Arabic<br>Те сакам——macedonian<br>愛してる——Japanese<br>Ek is lief vir jou——Afrikaans<br>Ninakupenda——Swahili<br>ég elska þig—— Icelandic<br>aku cinta kamu—— Indonesian<br>Aš tave myliu——Lithuanian<br>szeretlek——Hungarian<br>Mahal kita——Filipino<br>Love tú——Irish<br>Mi﻿ amas vin——Esperanto<br>مجھے تم سے محبت ہے——Urdu<br>मैं तुमसे प्यार करता हूँ——Hindi<br>我爱你——Chinese<br>i love you——English<br>Love connects the world~ <code>(^ v ^)</code></p>
<footer><strong>視頻av540768評論區</strong><cite><a href="https://www.bilibili.com/video/av540768/#reply6488400">@喜依粉</a></cite></footer></blockquote>
</li>
</ol>
<h3 id="Love-Triangle"><a href="#Love-Triangle" class="headerlink" title="Love Triangle"></a>Love Triangle</h3><blockquote>
<p>我，不該去愛你。</p>
</blockquote>
<p><strong><em>I LOVE U</em></strong> 衍生曲目，續作之一。</p>
<p><strong><em>二人三角<sup><a href="#fn_7" id="reffn_7">7</a></sup></em></strong> 是<strong>阿良良木健</strong>於2015年8月5日投稿至bilibili和Youtube的VOCALOID中文原創歌曲，由<strong>洛天依</strong>主唱、<strong>樂正綾</strong>和聲，為網絡EP專輯《戀愛理論:序章》及<strong>阿良良木健</strong>首張實體專輯《戀愛理論》收錄曲。殿堂曲，截至筆者編輯時間<code>(2021年12月09日01時)</code>已有<code>22.36</code>万次觀看，<code>1.02</code>万人收藏。</p>
<p><em>歌曲講述的是單戀與三角戀的故事。女主分明知道自己和男主沒有情緣，卻偏要去愛他，從而造成了這心酸的三角關係。</em></p>
<ul>
<li><p>Origin Work</p>
  
    <div id="aplayer-bflgDFCY" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="33933173" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p>  <a href="https://www.bilibili.com/video/av2687815/?p=1">Bilibili: <code>av2687815</code></a></p>
</li>
<li><p>Lyrics</p>
  <figure class="highlight plaintext"><figcaption><span>二人三角 歌詞</span><a href="https://zh.moegirl.org.cn/二人三角#歌词">萌娘百科詞條 二人三角 歌詞</a></figcaption><table><tr><td class="code"><pre><span class="line">沒有辦法去預料也沒有一些徵兆</span><br><span class="line">不應該萌生的感情卻開始燃燒</span><br><span class="line">我在默默地祈禱逃離這無可救藥</span><br><span class="line">卻讓我不安定的心情又平添了煎熬</span><br><span class="line">總會去看見你和她溫柔的甜蜜</span><br><span class="line">然後想忘記你發現卻沒有意義</span><br><span class="line">總會去不經意活在你的影子裡</span><br><span class="line">演著孤單的喜劇</span><br><span class="line"></span><br><span class="line">想跟你一起到老在你身邊去依靠</span><br><span class="line">卻無法去靠近你擁著她的懷抱</span><br><span class="line">想念你那份微笑心裡卻有些糟糕</span><br><span class="line">想要去冷靜卻在心底無止境的哭號</span><br><span class="line">羨慕著你的姻緣　沉默嫉妒著冷笑</span><br><span class="line">不明白為何她跟你是良緣天造</span><br><span class="line">我想過我也知道你和我成真不了</span><br><span class="line">在這場單戀的感情里我只能是配角</span><br><span class="line"></span><br><span class="line">總會去看見你和她溫柔的甜蜜</span><br><span class="line">然後想忘記你發現卻沒有意義</span><br><span class="line">總會去不經意活在你的影子裡</span><br><span class="line">演著孤單的喜劇</span><br><span class="line"></span><br><span class="line">兩個人的愛情變成三角的原形</span><br><span class="line">是否要去放棄還是讓它去肆意</span><br><span class="line">就算我的心意換名譽一片狼藉</span><br><span class="line">也只想要你的心</span><br><span class="line"></span><br><span class="line">在這條小小小小路沒有了你　也許只有我走下去</span><br><span class="line">這世界有一種罪名　就是我不該去愛你</span><br><span class="line"></span><br><span class="line">兩個人的愛情變成三角的原形</span><br><span class="line">是否要去放棄還是讓它去肆意</span><br><span class="line">就算你已離去我也只想去沉浸</span><br><span class="line">在這戀愛的虛名</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Dependence-Syndrome"><a href="#Dependence-Syndrome" class="headerlink" title="Dependence Syndrome"></a>Dependence Syndrome</h3><blockquote>
<p>戀愛，是一種精神疾病。</p>
</blockquote>
<p><strong><em>I LOVE U</em></strong> 衍生曲目，續作之二。</p>
<p><strong><em>依存症<sup><a href="#fn_8" id="reffn_8">8</a></sup></em></strong> 是<strong>阿良良木健</strong>於2015年8月5日投稿至bilibili和Youtube的VOCALOID中文原創歌曲，由<strong>洛天依</strong>主唱、<strong>言和</strong>和聲，為網絡EP專輯《戀愛理論:序章》及<strong>阿良良木健</strong>首張實體專輯《戀愛理論》收錄曲。殿堂曲，截至筆者編輯時間<code>(2021年12月09日01時)</code>已有<code>55.65</code>万次觀看，<code>2.37</code>万次收藏。</p>
<p><em>本曲描述了兩個相反意象（護士天依和病號天依）由戀愛產生的依存心理，PV則以一種典型的蒙太奇手法講述著一個深層的故事。</em></p>
<p>本曲在投稿時並沒有足夠的信息，但由於PV中有較多的隱喻物件和場景，引起了觀眾的多種猜測。對此<strong>阿良良木健</strong>表示：「關於這首歌，我不會給出官方的解釋，就是希望能夠鼓勵各位繼續挖腦洞，提觀點。」但此前，<strong>阿良良木健</strong>在採訪中表示：「《依存症》講述的是『我』因為迷戀著一直喜歡的人，以至於不能自拔的故事。」這使得評論區中的「失戀糾結說」成為最可能的解釋。</p>
<p><del>值得一提的是，詞作之一<a href="https://zh.moegirl.org.cn/皓月(P主)"><strong>皓月</strong></a>表示，這首歌本來是寫給他女友的，然而直到分手了作品才發布。</del></p>
<p>此外PV中還有許多值得關注的細節：</p>
<ol>
<li>pv中護士天依懷有開心、害羞與憧憬的情緒，而病號天依則不安焦慮、表現出渴望。</li>
<li>病號天依和護士天依房間的擺設雖然不同，但位置是相同的。</li>
<li>護士天依帶上手套的畫面中，背景是病號天依和護士天依的剪影重疊。</li>
<li>影片開頭有數幀的文字<code>THIS IS TRANSITION</code>，結尾兩人牽手前有文字說明<code>LOVE IS THE END</code>。</li>
</ol>
<ul>
<li><p>Origin Work</p>
  
    <div id="aplayer-WyuQoVJK" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="33933170" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p>  <a href="https://www.bilibili.com/video/av2687804/?p=1">Bilibili: <code>av2687804</code></a></p>
</li>
<li><p>Lyrics</p>
  <figure class="highlight plaintext"><figcaption><span>依存症 歌詞</span><a href="https://zh.moegirl.org.cn/依存症#歌词">萌娘百科詞條 依存症 歌詞</a></figcaption><table><tr><td class="code"><pre><span class="line">寫了一首小情歌想唱給你聽　聲音輕輕不想吵醒你夢中的旅行</span><br><span class="line">做了一隻小風鈴掛在你窗欞　鈴鈴叮叮清澈透明映著你的夢境</span><br><span class="line"></span><br><span class="line">總想去偷看著你在毫不經意　你的聲音一動一舉牽控我的呼吸</span><br><span class="line">每一次和你別離都倍感孤寂　如果思念是一種病是否我已晚期</span><br><span class="line"></span><br><span class="line">黃昏的天邊想你已經一整天</span><br><span class="line">夢繞魂牽　念著你名字入眠</span><br><span class="line">遙遠的夏天　不敢說的字眼</span><br><span class="line">我那麼戀你想念你　想許下我的永遠</span><br><span class="line"></span><br><span class="line">我對你依賴成迷　想不清哪些原理和原因</span><br><span class="line">你在糾纏我的思緒　讓我的天我的地都是你身影</span><br><span class="line">我對你依賴成迷　就算失去我也不想離去</span><br><span class="line">因為我會委屈沒有你</span><br><span class="line"></span><br><span class="line">我對你依賴成迷　卻只有默默隱藏著自己</span><br><span class="line">看著你漸漸地離去　到了最後也沒有問候的勇氣</span><br><span class="line">我對你依賴成迷　喜歡你自信開朗與風趣</span><br><span class="line">你像一個病菌　讓我難過也不能治癒</span><br><span class="line"></span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶      // LOVE IS PAIN</span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶      // LOVE IS POISON</span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶      // LOVE IS BITTER</span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶      // LOVE IS SICKNESS</span><br><span class="line"></span><br><span class="line">你跟我坐在一起卻沉默無語　不敢看著你的眼睛怕戳破了情緒</span><br><span class="line">你對我那些關心卻讓我擔心　你太完美我太悲劇不能配得上你</span><br><span class="line"></span><br><span class="line">傍晚的天邊想你已經一整夜</span><br><span class="line">夢繞魂牽　念著你名字入眠</span><br><span class="line">遙遠的夏天　不敢說的思念</span><br><span class="line">我那麼愛你想愛你　想親吻你的側臉</span><br><span class="line"></span><br><span class="line">我對你依賴成迷　想不清哪些原理和原因</span><br><span class="line">你在糾纏我的思緒　讓我的天我的地都是你身影</span><br><span class="line">我對你依賴成迷　就算失去我也不想離去</span><br><span class="line">因為我會委屈沒有你</span><br><span class="line"></span><br><span class="line">我對你依賴成迷　卻只有默默隱藏著自己</span><br><span class="line">看著你漸漸地離去　到了最後也沒有問候的勇氣</span><br><span class="line">我對你依賴成迷　喜歡你自信開朗與風趣</span><br><span class="line">你像一個病菌　讓我難過也不能治癒</span><br><span class="line"></span><br><span class="line">我對你依賴成迷　想不清哪些原理和原因</span><br><span class="line">當你對我不聞不理　我就沮喪像被風吹過的森林</span><br><span class="line">我對你依賴成迷　為了你我把自己都放低</span><br><span class="line">因為我好想去擁抱你</span><br><span class="line"></span><br><span class="line">我對你依賴成迷　希望你看到了我的心意</span><br><span class="line">我們之間有著默契　是完美的那一個化學的反應</span><br><span class="line">我對你依賴成迷　就像圍著你轉動的衛星</span><br><span class="line">你給我的微笑　讓我依存症無法痊癒</span><br><span class="line"></span><br><span class="line">&lt;-*- LOVE IS THE END -*-&gt;</span><br><span class="line"></span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶</span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶</span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶</span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Personal-Opinions"><a href="#Personal-Opinions" class="headerlink" title="Personal Opinions"></a>Personal Opinions</h3><p>(在此，筆者願淺談自己對這首曲目，及兩首衍生曲目的拙見。)</p>
<p>I LOVE U 是繼世界DISCO兩首曲目之後的，阿良良木健最先發佈的以告白與戀愛爲主題的曲目。<br>全曲曲風輕盈，描繪著戀愛少女積攢已久、希望得以釋放的向心儀之人告白的情感。<br>本作沒有上一部世界DISCO那樣宏大的世界末日／重生的背景，有的只有希望能夠打破的糾結的日常。<br>蒼十三老師的填詞由少女對心上人的描述逐漸轉向自己糾結的心情，最後為釋放與告白的刻畫，通過情感的愈發無法抑制來體現其愈發强烈。歷歷路路老師的曲繪更是渲染出完美契合旋律與言葉的氛圍。</p>
<p>根據阿良良木健本人的陳述，二人三角與依存症為 I LOVE U 的續作，但筆者認爲二人三角為假設的結局，依存症是建立在再之後的展望。</p>
<p>二人三角全程一圖流，所描繪的則是少女之所愛心有他屬，無法與少女相愛，在這樣 <del>扭曲(bushi)</del> 的背景下少女的心境。<br>“爲什麽，被選擇的不是我，而是那個女孩”<br>作爲三角戀的“第三方”，對於少女而言，這是無論如何也不想去接受的事實，但也是纏繞自身的問題。<br>最後的最後，少女陷入痛苦的泥沼，終於得到結論<br>“我不該去愛你。”</p>
<p>依存症是在此之後的故事。阿良良木健并未明確説明本曲目的意味，但是肯定了評論區中一位朋友的説法</p>
<blockquote><p>我也脑洞一下剧情。<br>两个天依或许并非意味着双重人格，而是两种心态。<br>由前作《二人三角》可知，天依原本喜欢的男生并没有接受她的告白，而是选择了阿绫，换句话说天依被那个男生抛弃了，她失恋了。<br>失恋使天依产生了两种不同的心态，一种是由病号天依所代表的“受到伤害，想要忘掉那个人”的心态，另外一种是由护士天依所代表的“仍然爱着那个人”的心态。<br>在整首曲子里病号天依的行为与护士天依越来越相似，其实意味着“仍然爱着那个人”的心态逐渐占据上风，而护士天依取出病号天依的心脏的行为意味着“仍然爱着那个人”的心态的胜利。<br>最终，两种本该互相对立的心态结合在一起，成为了依存症。<br>结尾部分出现的伤痕累累的病号天依，恐怕才是现实之中被依存症折磨得死去活来的天依吧。</p>
<footer><strong>視頻av2687804評論區</strong><cite><a href="https://www.bilibili.com/video/av2687804/#reply37360080">@ZJ12108333</a></cite></footer></blockquote>
<p>這位朋友的表述已然足夠清晰，由此我們可以看出，兩隻天依象徵著的兩種心態最終在對立中求得統一，達成了自己與自己的和解。</p>
<p>事實上，失戀，尤其是因自己在心上人心中比不上他人而導致的失戀，在這個世界上並不少見，不論是告白之前的糾結與困擾還是告白被拒的嫉妒與痛苦，都是難以避免的。<br>重要的是你我應該如何去看待它，如何與自己達成和解，<br>在第二部 I LOVE U 以及兩首衍生曲目中，阿良良木健、蒼十三與歷歷路路，三位老師爲你我帶來了屬於他們的答案。</p>
<h2 id="Hear-the-Heart"><a href="#Hear-the-Heart" class="headerlink" title="Hear the Heart"></a>Hear the Heart</h2><p>告白·三部神曲之三，心加心</p>
<pre><code>看白色花瓣飄逸　像星星落在水里
祝福的鐘聲響起　讓我們走向幸福的結局
</code></pre><p><strong><em>心加心<sup><a href="#fn_7" id="reffn_7">7</a></sup></em></strong> 是<strong>阿良良木健</strong>於2016年<ruby>05月20日<rt>我愛你</rt></ruby>投稿至bilibili的VOCALOID中文原創歌曲，由<strong>洛天依</strong>演唱，為告白三部曲的第三作，收錄於<strong>阿良良木健</strong>首張實體專輯《戀愛理論》中。殿堂曲，截至筆者編輯時間<code>(2021年12月09日01時)</code>已有<code>20.10</code>万次觀看，<code>1.33</code>万人收藏。</p>
<p>本曲是一首溫馨向的告白歌曲，<strong>阿良良木健</strong>特地邀請了各地區的網友投稿情書來參與製作PV，讓人體會到愛情中的感動與熱情。</p>
<h3 id="header3-heartheheart-oriwork">Origin Work</h3>


    <div id="aplayer-XpDpTZzn" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="427016439" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<ul>
<li>本家<a href="https://www.bilibili.com/video/av4704467/">Bilibili: <code>av4704467</code></a></li>
</ul>
<h3 id="header3-heartheheart-lyrics">Lyrics</h3>

<figure class="highlight plaintext"><figcaption><span>心加心 歌詞</span><a href="https://zh.moegirl.org.cn/心加心#歌词">萌娘百科詞條 心加心 歌詞</a></figcaption><table><tr><td class="code"><pre><span class="line">世界有太多奇蹟教人不能言喻　像這一刻能夠遇見最好的你</span><br><span class="line">當我們從友情變成了愛情　甚至懷疑是否一切太容易</span><br><span class="line">曾經擔心自己會有什麼結局　但是緣分讓我們走在了一起</span><br><span class="line">看著你的眼睛我笑出聲音　想謝謝你能回應我的問題</span><br><span class="line"></span><br><span class="line">心加心太艱難雙手能牽在一起　從心底感嘆著能有這份運氣</span><br><span class="line">心貼心想這一刻擁在你懷裡　聆聽我稚嫩的心意</span><br><span class="line">一起去寫留給我們愛情的旋律　讓它去響徹在淡藍色的天際</span><br><span class="line">牽著手溫柔掌心觸摸著甜蜜　在傳遞心靈的感應</span><br><span class="line"></span><br><span class="line">所以我注視著你不用說太多言語　你一直傻笑仿佛都已經沉迷</span><br><span class="line">默許約定世界這刻都安靜　終於我沒有放棄等到了你</span><br><span class="line"></span><br><span class="line">世界有太多奇蹟教人不能言喻　像這一刻能夠遇見最好的你</span><br><span class="line">看著你的眼睛我笑出聲音　想謝謝你能回應我的問題</span><br><span class="line"></span><br><span class="line">心加心太艱難雙手能牽在一起　從心底感嘆著能有這份運氣</span><br><span class="line">心貼心想這一刻擁在你懷裡　聆聽我稚嫩的心意</span><br><span class="line">一起去寫留給我們愛情的旋律　讓它去響徹在淡藍色的天際</span><br><span class="line">牽著手溫柔掌心觸摸著甜蜜　在傳遞心靈的感應</span><br><span class="line"></span><br><span class="line">看白色花瓣飄逸　像星星落在水裡</span><br><span class="line">祝福的鐘聲響起　讓我們走向幸福的結局</span><br><span class="line"></span><br><span class="line">心加心太艱難雙手能牽在一起　從心底感嘆著能有這份運氣</span><br><span class="line">心貼心要永遠銘記那個期許　不辜負這一片心意</span><br><span class="line"></span><br><span class="line">所以我注視著你不用說太多言語　你一直傻笑仿佛都已經沉迷</span><br><span class="line">默許約定世界這刻都安靜　讓我們靠近見證幸福的降臨</span><br><span class="line"></span><br><span class="line">無比幸運好像經歷了夢境　你牽我的手我不經意間哭泣</span><br><span class="line">我們一起相互伴隨這生命　用一生證明一個永恆的美麗</span><br></pre></td></tr></table></figure>
<h3 id="header3-heartheheart-opinions">Personal Opinions</h3>

<p>(在此，筆者願淺談自己對這首曲目的拙見。)</p>
<p>這是<code>告白P</code>的告白·三部神曲的終篇。<br>三位老師筆下曲中的少女終於找到了屬於自己的真愛，一同走向聖殿。</p>
<p>至此，少女拾起勇氣，向心儀之人勇敢告白，雖然遭遇挫折，縱使面對萬劫不復的災難，她的意志也亦未曾動搖。經歷了這一整套過程之後，不論是誰都將在心中擁有自己對愛、對世界、對自己的理解。</p>
<p>在此，筆者也祝天下有情人終成 <del>姐弟(bushi)</del> 眷屬，但更重要的是，還請及時表達自己的心意。</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://zh.moegirl.org.cn/洛天依#V3">萌娘百科詞條 洛 天依 Vocaloid3</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <a href="https://zh.moegirl.org.cn/阿良良木健">萌娘百科詞條 阿良良木健</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. <a href="https://zh.moegirl.org.cn/歷歷路路">萌娘百科詞條 歷歷路路</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_4">
<sup>4</sup>. <a href="https://zh.moegirl.org.cn/末日DISCO">萌娘百科詞條 末日DISCO</a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_5">
<sup>5</sup>. <a href="https://zh.moegirl.org.cn/明日DISCO">萌娘百科詞條 明日DISCO</a><a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_6">
<sup>6</sup>. <a href="https://zh.moegirl.org.cn/I_LOVE_U">萌娘百科詞條 I LOVE U</a><a href="#reffn_6" title="Jump back to footnote [6] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_7">
<sup>7</sup>. <a href="https://zh.moegirl.org.cn/二人三角">萌娘百科詞條 二人三角</a>，官方英文名來自 <a href="https://vocaloidlyrics.fandom.com/wiki/二人三角_(Èr_Rén_Sānjiǎo)">Vocaloid Lyrics 詞條 二人三角</a><a href="#reffn_7" title="Jump back to footnote [7] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_8">
<sup>8</sup>. <a href="https://zh.moegirl.org.cn/依存症">萌娘百科詞條 依存症</a><a href="#reffn_8" title="Jump back to footnote [8] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_9">
<sup>9</sup>. <a href="https://zh.moegirl.org.cn/心加心">萌娘百科詞條 心加心</a><a href="#reffn_9" title="Jump back to footnote [9] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>VOCALOID</tag>
        <tag>VOCALOID China</tag>
        <tag>VOCALOID Comments &amp; Recommendations</tag>
        <tag>洛天依</tag>
        <tag>Atunemic (阿良良木健)</tag>
        <tag>Minco_P (歷歷路路)</tag>
        <tag>蒼十三</tag>
      </tags>
  </entry>
  <entry>
    <title>二叉樹筆記 I 基礎構造</title>
    <url>/next-nest/2021/11/22/bintree-01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>二叉樹的概念等基礎知識大部分已在離散數學中學過，在此不再重複或贅述。</p>
<span id="more"></span>
<h2 id="Basic-Construction"><a href="#Basic-Construction" class="headerlink" title="Basic Construction"></a>Basic Construction</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val; <span class="comment">// 亦可以其他數據類型，只需把`int`替換爲`float`或`char`等</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">parent</span>;</span> <span class="comment">// 指向母親節點的指針</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">lchild</span>;</span> <span class="comment">// 指向左女兒的指針</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">rchild</span>;</span> <span class="comment">// 指向右女兒的指針</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>爲了方便構造，我們使用向指針分配動態内存的形式來構造節點，申請方法很簡單，只需要</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * <span class="title">newnode</span> =</span> (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br></pre></td></tr></table></figure>
<p>即可向名爲<code>newnode</code>的節點指針分配一個節點所需要的空間。</p>
<p>對於某一個節點所不具有的成分，我們讓指向該成分的指針指空，<br>例如在剛剛構造的時候，我們往往不知道它的左右女兒是誰，此時就讓它的左右女兒皆指空</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line">newnode-&gt;lchild = <span class="literal">nullptr</span>;</span><br><span class="line">newnode-&gt;rchild = <span class="literal">nullptr</span>;</span><br></pre></td></tr></table></figure>
<p>又如對於沒有母親節點的根節點，其母親指針亦作指控處理，我們在構造之時往往操作如下</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line">root-&gt;parent = <span class="literal">nullptr</span>;</span><br></pre></td></tr></table></figure>
<p>但是對於其他的節點，則需要設置它的母親節點，並在它的母親節點上設置左女兒或有女兒，<br>例如新節點<code>newnode</code>是節點<code>herparent</code>的左女兒，則操作如下</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line">newnode-&gt;parent = herparent;</span><br><span class="line">herparent-&gt;lchild = newnode;</span><br></pre></td></tr></table></figure>
<p>以此建立雙向連接，右女兒同理，只需要把<code>lchild</code>替換爲<code>rchild</code>。</p>
<p>根據離散數學中的相關知識，二叉樹<sup><a href="#fn_1" id="reffn_1">1</a></sup>中的節點可以分爲<strong>根(root)</strong>、<strong>莖</strong>、<strong>葉(leaf)</strong>，這三種節點。其中</p>
<ul>
<li>根：沒有母親的節點（這個描述聼上去怎麽那麽像在罵人x</li>
<li>葉：沒有女兒的節點</li>
<li>其他的既不是根亦不是葉，它們都既有母親亦有女兒</li>
</ul>
<p>此外，對於某些<code>莖</code>而言，它僅僅具有左子樹或右子樹，此時它的右女兒或左女兒指針指空。</p>
<p>至此，二叉樹的基本構造方法已講解完畢，下面會附贈一個實例，希望能有助於大家理解。</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>構造二叉樹如下</p>
<pre><code>root: 39 (根節點)
     /
    7
     \
      128
</code></pre><ul>
<li><p>如圖所示，根節點的值為<code>39</code>，其含有一個左女兒，值為<code>7</code>，該節點含有一個葉子作爲右女兒，其值為<code>128</code></p>
</li>
<li><p>解</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">parent</span>, *<span class="title">lchild</span>, *<span class="title">rchild</span>;</span></span><br><span class="line">&#125; *root, *node0, *node1;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 構造根節點，其值爲 39</span></span><br><span class="line">    root = (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">    root-&gt;val = <span class="number">39</span>;</span><br><span class="line">    root-&gt;parent = <span class="literal">nullptr</span>; <span class="comment">// 由於根節點沒有母親節點，所以母親指針指空</span></span><br><span class="line">    root-&gt;lchild = <span class="literal">nullptr</span>; <span class="comment">// 左右女兒待定，指空</span></span><br><span class="line">    root-&gt;rchild = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 構造根節點的左女兒，其值爲 7</span></span><br><span class="line">    node0 = (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">    node0-&gt;val = <span class="number">7</span>;</span><br><span class="line">    node0-&gt;parent = root; <span class="comment">// 它是根節點的左女兒，</span></span><br><span class="line">                          <span class="comment">//  但必須先聲明它本身的母親是根節點</span></span><br><span class="line">    node0-&gt;lchild = <span class="literal">nullptr</span>;</span><br><span class="line">    node0-&gt;rchild = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 筆者個人認爲這裏需要多説一點</span></span><br><span class="line"><span class="comment">     *  剛才在設置根節點和 node0 的時候，統一把左右女兒皆進行指空處理</span></span><br><span class="line"><span class="comment">     *   即 root-&gt;lchild = root-&gt;rchild = nullptr;</span></span><br><span class="line"><span class="comment">     *   與 node0-&gt;lchild = node0-&gt;rchild = nullptr;</span></span><br><span class="line"><span class="comment">     *  這樣做背後的道理便是，在構造時刻，先假設它是一片葉子，</span></span><br><span class="line"><span class="comment">     *  如若還有女兒的話，再往上添加，像下面這一步</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    root-&gt;lchild = node0;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 構造該節點的右女兒，其值爲 128</span></span><br><span class="line">    node1 = (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">    node1-&gt;val = <span class="number">128</span>;</span><br><span class="line">    node1-&gt;parent = node0;</span><br><span class="line">    node1-&gt;lchild = <span class="literal">nullptr</span>;</span><br><span class="line">    node1-&gt;rchild = <span class="literal">nullptr</span>;</span><br><span class="line">    node0-&gt;rchild = node1;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 下面輸出幾個樹上節點的值，</span></span><br><span class="line"><span class="comment">     * 對於不知道是否存在的女兒，可以先檢查其是否存在，再進行操作處理</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (root-&gt;lchild != <span class="literal">nullptr</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, root-&gt;lchild-&gt;val);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The Node `root` has no children on the left!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (root-&gt;rchild != <span class="literal">nullptr</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, root-&gt;rchild-&gt;val);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The Node `root` has no children on the right!\n&quot;</span>);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 後面的就不檢查直接輸出了。</span></span><br><span class="line"><span class="comment">     * 由於我們設置的node1就是node0的右女兒，</span></span><br><span class="line"><span class="comment">     * 而node0又是root的左女兒，</span></span><br><span class="line"><span class="comment">     * 所以下面三個輸出的應該是同一個值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, node1-&gt;val);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, node0-&gt;rchild-&gt;val);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, root-&gt;lchild-&gt;rchild-&gt;val);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>輸出</p>
<pre><code>  7
  The Node `root` has no children on the right!
  128
  128
</code></pre></li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://baike.baidu.com/item/二叉树/1602879">百度百科詞條 二叉樹</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>二叉樹筆記 II 樹的遍歷</title>
    <url>/next-nest/2021/11/23/bintree-02/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>前面講過了二叉樹的基本構造方法，於此我們來審察二叉樹的三種遍歷方法</p>
<ul>
<li>先序遍歷 <code>(preorder</code> traversal<code>, root-&gt;left-&gt;right)</code></li>
<li>中序遍歷 <code>(inorder</code> traversal<code>, left-&gt;root-&gt;right)</code></li>
<li>後序遍歷 <code>(postorder</code> traversal<code>, left-&gt;right-&gt;root)</code></li>
</ul>
<p>以<a href="https://www.luogu.com.cn/problem/P1305">洛谷 <code>P1305</code></a>的衍生題目<a href="http://noiclass.com/?page_id=11775">QUST <code>Q1295</code></a>爲例。</p>
<span id="more"></span>
<p>假設我們現在所得到的一棵二叉樹上節點的内容為整型數據，輸入為</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br><span class="line">0 1 4</span><br><span class="line">1 2 3</span><br><span class="line">2 -1 -1</span><br><span class="line">3 -1 -1</span><br><span class="line">4 5 8</span><br><span class="line">5 6 7</span><br><span class="line">6 -1 -1</span><br><span class="line">7 -1 -1</span><br><span class="line">8 -1 -1</span><br></pre></td></tr></table></figure>
<p>容易發現這是一棵擁有九個節點的二叉樹如下，其個節點上的<code>值</code>即爲該節點的編號</p>
<pre><code>root:   0   (根節點)
      /   \
    1       4
   / \     / \
  2   3   5   8
         / \
        6   7
</code></pre><h2 id="Construction"><a href="#Construction" class="headerlink" title="Construction"></a>Construction</h2><p>對於容量未知的二叉樹<sup><a href="#fn_1" id="reffn_1">1</a></sup>，我們會用一個足夠大的數組或者<code>vector</code>來存儲其節點</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">parent</span>, *<span class="title">lchild</span>, *<span class="title">rchild</span>;</span></span><br><span class="line">&#125; *root, *treenodes[<span class="number">393939</span>];</span><br></pre></td></tr></table></figure>
<p>在這道題目中，我們不僅把編號存儲到節點的<code>值</code>當中，同時也會放在數組中對應索引的位置</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != m; ++k) &#123;</span><br><span class="line">    <span class="keyword">int</span> idx, lch, rch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;idx, &amp;lch, &amp;rch);</span><br><span class="line">    <span class="keyword">if</span> (treenodes[idx] == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        <span class="comment">// 如若該節點不存在，則先構造該節點</span></span><br><span class="line">        treenodes[idx] = (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">        treenodes[idx]-&gt;val = idx;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (lch != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="comment">// 如若存在左子樹</span></span><br><span class="line">        <span class="keyword">if</span> (treenodes[lch] == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            <span class="comment">// 如若左女兒不存在，則先構造左女兒</span></span><br><span class="line">            treenodes[lch] = (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">            treenodes[lch]-&gt;val = lch;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 使節點與左女兒互相連接</span></span><br><span class="line">        treenodes[idx]-&gt;lchild = treenodes[lch]; <span class="comment">// 像節點聲明左女兒的位置</span></span><br><span class="line">        treenodes[lch]-&gt;parent = treenodes[idx]; <span class="comment">// 像左女兒聲明其母親即是該節點</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (rch != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="comment">// 右側處理同理類似</span></span><br><span class="line">        <span class="keyword">if</span> (treenodes[rch] == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            treenodes[rch] = (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">            treenodes[rch]-&gt;val = rch;</span><br><span class="line">        &#125;</span><br><span class="line">        treenodes[idx]-&gt;rchild = treenodes[rch];</span><br><span class="line">        treenodes[rch]-&gt;parent = treenodes[idx];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Root Tracing, (從任何一個節點都可以)尋找這棵樹的根節點</span></span><br><span class="line">root = treenodes[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">while</span> (root-&gt;parent != <span class="literal">nullptr</span>)</span><br><span class="line">    <span class="comment">// 只要當前看到的節點還有母親，就向上爬</span></span><br><span class="line">    root = root-&gt;parent;</span><br></pre></td></tr></table></figure>
<p>此即主函數中構造這棵樹的方法。</p>
<h2 id="Traversal"><a href="#Traversal" class="headerlink" title="Traversal"></a>Traversal</h2><p>例如先序遍歷的輸出過程，其處理順序為<code>根-左-右</code>，按照這樣的順序進行輸出的函數如下：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> __print_preorder(struct Node *rt) &#123;</span><br><span class="line">    <span class="keyword">if</span> (rt != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d,&quot;</span>, );</span><br><span class="line">        __print_preorder(rt-&gt;lchild);</span><br><span class="line">        __print_preorder(rt-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>因爲先序遍歷是先處理根節點，然後再先後處理左子樹和右子樹，處理左右子樹的時候也是按照順序處理<code>根-左-右</code>，因此形式上是遞歸的。</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://baike.baidu.com/item/二叉树/1602879">百度百科詞條 二叉樹</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「稽古】左偏紅黑樹 O 二叉查找樹與（二叉）平衡樹的簡易開啓方式</title>
    <url>/next-nest/2022/01/08/bintree-llrbt-00/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>之前筆者簡單談過了二叉樹的基礎構造與遍歷相關操作，這回我們稍微説一説二叉樹的簡易應用——二叉查找樹，以及其進階——（二叉）平衡樹。</p>
<span id="more"></span>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><strong><em>二叉查找樹<sup><a href="#fn_1" id="reffn_1">1</a></sup></em></strong> (<strong>B</strong>inary <strong>S</strong>earch <strong>T</strong>ree，簡稱BST)，是一類對節點與其左右孩子關係具有約束的二叉樹的統稱。<br>其最明顯的性質是如若該樹不爲空，則其 <strong><em>任何節點的值大於其左孩子的值、小於其右孩子的值</em></strong> （反之即<code>左孩子&gt;本體&gt;右孩子</code>亦然，但一般很少反過來定義，因爲效果其實沒什麽兩樣）。<br>基於這一性質，我們能明顯地看出來這樣一棵樹的中序遍歷是遞增的，因此這也經常作爲一種有序數據結構，用於對元素的排序。</p>
<p><strong><em>（二叉）平衡樹</em></strong> (<strong>B</strong>alanced <strong>T</strong>ree，簡稱BT)，是一類對節點數量加以約束的二叉查找樹的統稱。<br>這一類查找樹的特點在於會盡量避免查找樹某個節點一側的節點量過大、節點過多，從而在某些極端情況下也能避免查找時的時間複雜度過高。</p>
<h2 id="BST"><a href="#BST" class="headerlink" title="BST"></a>BST</h2><p>二叉查找樹的簡介。</p>
<p>二叉查找樹是一種樹形數據結構，滿足以下特徵：</p>
<ol>
<li>空樹是二叉查找樹；</li>
<li>任何節點的值（如若左孩子存在）大於其左孩子的值、（如若右孩子存在）小於其右孩子的值；</li>
<li>正如二叉樹是遞歸定義的一樣，二叉查找樹也是遞歸定義的一樣——二叉查找樹的左右子樹也是二叉查找樹，也滿足相關性質。</li>
</ol>
<p>因爲二叉查找樹本質上也是二叉樹，沒有需要特殊結構才能實現的功能，因此其節點的定義與二叉樹是一樣的：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">parent</span>, *<span class="title">lchild</span>, *<span class="title">rchild</span>;</span></span><br><span class="line">&#125; *root;</span><br><span class="line"><span class="function">struct Node * <span class="title">new_node</span><span class="params">(<span class="keyword">int</span> _value)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 類比高級語言中的對象構造函數並加以簡單封裝。</span></span><br><span class="line">    <span class="comment">// 除了指向母親節點與左右孩子的指針外，目前的節點結構中沒有除了`val`之外其他的成員，</span></span><br><span class="line">    <span class="comment">//  因此此處初始化中，僅需要對`val`進行賦值。</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * <span class="title">q</span> =</span> (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">    q-&gt;val = _value;</span><br><span class="line">    q-&gt;lchild = <span class="literal">nullptr</span>;</span><br><span class="line">    q-&gt;rchild = <span class="literal">nullptr</span>;</span><br><span class="line">    q-&gt;parent = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="keyword">return</span> q;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用結構體數組模擬的靜態實現、使用Python等高級語言的對象引用機制的實現當中的定義與上面的相似，於此不再贅述。<br>因此二叉查找樹的遍歷也與普通的二叉樹相仿，在此列舉出先序遍歷與中序遍歷的方法。</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> __preorder(struct Node *rt) &#123;</span><br><span class="line">    <span class="keyword">if</span> (rt != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d,&quot;</span>, rt-&gt;val);</span><br><span class="line">        __preorder(rt-&gt;lchild);</span><br><span class="line">        __preorder(rt-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> __inorder(struct Node *rt) &#123;</span><br><span class="line">    <span class="keyword">if</span> (rt != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        __inorder(rt-&gt;lchild);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d,&quot;</span>, rt-&gt;val);</span><br><span class="line">        __inorder(rt-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printall</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    __preorder(root);   <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    __inorder(root);    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Searching"><a href="#Searching" class="headerlink" title="Searching"></a>Searching</h3><p>作爲二叉查找樹，其與應用最爲直接相關的功能即爲<code>search</code>。<br>根據性質3知道我們可以遞歸遍歷二叉查找樹以尋找所求值，性質2決定遍歷時每一步的方向，性質1用於部分情況的判斷。<br>大致的思路如下：</p>
<ul>
<li>如若這個節點<code>==nullptr</code>，則以其為根的樹是空樹，所以遍歷到該節點後，便找不到所求的<code>_target</code>值，此時返回<code>nullptr</code>以表示在樹上不存在帶有所求值得節點；</li>
<li>如若當前節點帶有的值即爲所求，即返回當前節點的位置；</li>
<li>如若當前節點帶有的值<code>!=</code>所求值，則<ul>
<li>所求值<code>&lt;</code>當前節點帶有的值<code>-&gt;</code>在左子樹中繼續尋找，</li>
<li>所求值<code>&gt;</code>當前節點帶有的值<code>-&gt;</code>在右子樹中繼續尋找。</li>
</ul>
</li>
</ul>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * __<span class="title">search</span>(<span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">rt</span>, <span class="title">int</span> _<span class="title">target</span>) &#123;</span></span><br><span class="line">    <span class="keyword">if</span> (rt == <span class="literal">nullptr</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (_target == rt-&gt;val)</span><br><span class="line">        <span class="keyword">return</span> rt;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (_target &lt; rt-&gt;val)</span><br><span class="line">            <span class="keyword">return</span> __search(rt-&gt;lchild, _target);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> __search(rt-&gt;rchild, _target);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> _target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> __search(root, _target) != <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在這裏我們容易看出，函數<code>__search</code>返回的是帶有值<code>_target</code>的節點所在的位置，然後函數<code>search</code>通過審察該位置是否存在節點以判斷樹中是否存在所求的值<code>_target</code>。</p>
<h3 id="Insertion"><a href="#Insertion" class="headerlink" title="Insertion"></a>Insertion</h3><p>二叉查找樹所模擬的是一個集合，因此其中所有的元素如若存在，則唯一。<br>爲了保證這一點，我們再插入之前應當先判斷行將插入的元素是否已經存在於該樹當中，如若不存在，則再插入它。</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * __<span class="title">insert</span>(<span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">rt</span>, <span class="title">int</span> _<span class="title">value</span>) &#123;</span></span><br><span class="line">    <span class="keyword">if</span> (rt == <span class="literal">nullptr</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">new_node</span>(_value);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (rt-&gt;val != _value) &#123;</span><br><span class="line">            <span class="keyword">if</span> (_value &lt; rt-&gt;val) &#123;</span><br><span class="line">                rt-&gt;lchild = __insert(rt-&gt;lchild, _value);</span><br><span class="line">                rt-&gt;lchild-&gt;parent = rt;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                rt-&gt;rchild = __insert(rt-&gt;rchild, _value);</span><br><span class="line">                rt-&gt;rchild-&gt;parent = rt;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> rt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> _value)</span> </span>&#123;</span><br><span class="line">    root = __insert(root, _value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>以上過程中，遞歸的每一步中，函數<code>__insert</code>返回的是節點<code>rt</code>本身的位置，這個返回過程像是在確認 <strong><em>我就是我，我的左孩子就是我左下方那位、有孩子就是我右下方那位</em></strong> 一樣，這個過程會在後面涉及到旋轉操作的平衡樹中用到。</p>
<h3 id="Rotation"><a href="#Rotation" class="headerlink" title="Rotation"></a>Rotation</h3><p>一般而言只有在部分平衡樹中會用到的操作，<strong><em>旋邊</em></strong>。<br><del>但筆者對二叉查找樹的刪除操作進行了優化，其中可能會用到，故於此進行簡單講解。</del><br>由於筆者在構思時出了一點錯誤，所以關於該方法，在此暫不進行講述。<br><img src="/next-nest/2022/01/08/bintree-llrbt-00/edge-rotation.jpeg" alt><br>二叉樹的旋邊是針對邊(edge)進行的操作，分爲左旋和右旋兩種。</p>
<p>旋邊有一條非常重要而且好用的性質，那就是：<strong><em>旋邊不改變中序遍歷順序！</em></strong><br>這一點很容易看出來，其相關證明筆者不在此贅述。</p>
<h4 id="Left-Rotate"><a href="#Left-Rotate" class="headerlink" title="Left Rotate"></a>Left Rotate</h4><p>如上圖，左旋是對某一個節點及其右孩子進行的操作。<br>左旋時，連接節點與其右孩子的邊逆時針旋轉，使節點成爲原本右孩子的左孩子，而後接管其左孩子，使之成爲自己的右孩子。</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function">struct Node * <span class="title">rotate</span><span class="params">(struct Node *rt)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Left Rotate an Edge...</span></span><br><span class="line"><span class="comment">     *        [1]               [2]</span></span><br><span class="line"><span class="comment">     *        / \               / \</span></span><br><span class="line"><span class="comment">     *       *  [2]    ==&gt;    [1]  *</span></span><br><span class="line"><span class="comment">     *          / \           / \</span></span><br><span class="line"><span class="comment">     *         O   *         *   O</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Node * newroot = rt-&gt;rchild;</span><br><span class="line">    <span class="keyword">if</span> (newroot != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        <span class="comment">// 處理被旋邊所連接的兩個節點指向母親與孩子的指針。</span></span><br><span class="line">        rt-&gt;rchild = newroot-&gt;lchild;</span><br><span class="line">        newroot-&gt;lchild = rt;</span><br><span class="line">        newroot-&gt;parent = rt-&gt;parent;</span><br><span class="line">        rt-&gt;parent = newroot;</span><br><span class="line">        <span class="comment">// 如若需要接管的孩子不爲空，則更新其指向母親節點的指針。</span></span><br><span class="line">        <span class="keyword">if</span> (rt-&gt;rchild != <span class="literal">nullptr</span>)</span><br><span class="line">            rt-&gt;rchild-&gt;parent = rt;</span><br><span class="line">        <span class="keyword">return</span> newroot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>於是，當我們需要左旋連接節點<code>node</code>及其右孩子的邊的時候，如下形式調用函數<code>rotate</code>即可完成旋邊操作：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line">node = <span class="built_in">rotate</span>(node);</span><br></pre></td></tr></table></figure>
<h4 id="Right-Rotate"><a href="#Right-Rotate" class="headerlink" title="Right Rotate"></a>Right Rotate</h4><p>右旋操作與上方左旋操作類似。</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function">struct Node * <span class="title">rotrev</span><span class="params">(struct Node *rt)</span> </span>&#123;</span><br><span class="line">    Node * newroot = rt-&gt;lchild;</span><br><span class="line">    <span class="keyword">if</span> (newroot != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        rt-&gt;lchild = newroot-&gt;rchild;</span><br><span class="line">        newroot-&gt;rchild = rt;</span><br><span class="line">        newroot-&gt;parent = rt-&gt;parent;</span><br><span class="line">        rt-&gt;parent = newroot;</span><br><span class="line">        <span class="keyword">if</span> (rt-&gt;lchild != <span class="literal">nullptr</span>)</span><br><span class="line">            rt-&gt;lchild-&gt;parent = rt;</span><br><span class="line">        <span class="keyword">return</span> newroot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">// For Instance ...</span></span><br><span class="line">node = <span class="built_in">rotrev</span>(node);</span><br></pre></td></tr></table></figure>
<h3 id="Removing"><a href="#Removing" class="headerlink" title="Removing"></a>Removing</h3><p>二叉查找樹的刪除操作需要在進行的時候維持相關的性質。<br>對於部分二叉查找樹，刪除過程會被特化爲兩種，一種是如同對優先隊列進行<code>pop</code>操作的刪除最小值<code>remove_min</code>，另一種是刪除指定值，即<code>remove</code>。</p>
<p>對於待刪除節點，由於二叉樹、二叉查找樹都是遞歸定義的數據結構，所以往往需要維護其左右子樹在該節點被刪除后不破壞二叉查找樹的性質。<br>對於樸素二叉樹，此時要考慮左子樹是否存在、右子樹是否存在兩個相互獨立的問題所組成的四種情形：</p>
<ol>
<li>左右子樹皆不存在：待刪除節點為一片葉子：此時的解決方案便是直接刪除該節點，無需考慮左右子樹的維護問題；</li>
<li>右子樹不存在，待刪除節點有且僅有左子樹：此時的解決方案便是使左孩子取代待刪除節點，若待刪除的并非根節點，便由母親節點接管其左子樹；</li>
<li>僅左子樹不存在的情況，可以類比如上方法；</li>
<li>左右子樹皆存在，此種情況的處理較爲複雜。傳統的處理便是保留其左子樹，使其右孩子取代待刪除的節點，即把右孩子的值複製到待刪除節點上，然後遞歸刪除右孩子（保留右子樹並以左孩子進行取代亦可）。但筆者在此想到一種方案，便是把同時具有左右子樹的節點通過旋邊變成僅僅具有左子樹的節點，實現其的操作便是左旋連接待刪除節點與其右孩子的邊。旋邊後待刪除節點會携左子樹移動到原本左孩子的位置上，而原本的右孩子成爲待刪除節點的母親節點。如若原本的右孩子的左子樹不爲空，則會由待刪除節點接管并成爲其右子樹，此時則繼續旋邊，直到待刪除節點不具有右子樹爲止。然後如<code>2.</code>中所言，以其左孩子取代待刪除節點即可。</li>
</ol>
<p>具體程式筆者在此不再贅述。</p>
<h2 id="BT"><a href="#BT" class="headerlink" title="BT"></a>BT</h2><p>何爲平衡？爲何平衡？在考慮這些問題之前請讓我們先審察一種情形：</p>
<p>當我們從某時起，向二叉查找樹加入的元素總是加入在上一個加入的元素下方，從某一個節點開始便會只具有左孩子或右孩子，從而形成一條“長鏈”。<br>此時的二叉查找樹中以某一個節點為根的子樹便會退化為一條綫性表（鏈表），極端不理想情況下，沿著那一條“長鏈”遍歷的時間複雜度便會升至<code>O(m)</code>。<br>如若能夠控制從根節點出發的每一條路徑長度都大致相等，則不理想情況下，遍歷的時間複雜度也能控制在<code>O(log m)</code>左右。<br>由此便引入二叉查找樹中的一個重要概念，那便是，<strong><em>平衡</em></strong>。</p>
<p>我們可以先感性地理解一下：所謂平衡樹便是每個節點左右子樹大致相當的二叉查找樹。<br>但對於不同種類的平衡樹，其所定義的平衡也不一樣，以下將簡單介紹兩種常見的二叉查找樹的平衡：</p>
<ol>
<li>弱平衡（期望平衡）：多見於<code>Treap</code><sup><a href="#fn_2" id="reffn_2">2</a></sup>或<code>Splay</code><sup><a href="#fn_3" id="reffn_3">3</a></sup>；</li>
<li>高度平衡：多見於<code>AVL</code><sup><a href="#fn_4" id="reffn_4">4</a></sup>平衡樹，其核心在於任意節點的左右子樹高度差不超過一。</li>
</ol>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>筆者引用的一些參考文獻，以及希望給出的一些相關資料與題目，供大家輔助參考理解二叉查找樹與平衡樹的相關概念。</p>
<ul>
<li><blockquote id="fn_1">
<sup>1</sup>. <code>OI-Wiki</code> 章節 <a href="https://oi-wiki.org/ds/bst/">二叉查找樹 簡介</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<ul>
<li><blockquote id="fn_2">
<sup>2</sup>. <code>OI-Wiki</code> 章節 <a href="https://oi-wiki.org/ds/treap/">普通平衡樹 <code>Treap</code></a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3369"><code>Luogu P3369</code> 「模板」普通平衡樹</a></li>
<li><a href="https://loj.ac/p/104/"><code>LOJ #104</code> 普通平衡樹</a></li>
<li><a href="https://ezoj.org.cn/problem/7/"><code>EZOJ #7</code> 「模板」普通平衡樹</a></li>
</ul>
</li>
<li><blockquote id="fn_3">
<sup>3</sup>. <code>OI-Wiki</code> 章節 <a href="https://oi-wiki.org/ds/splay/">文藝平衡樹 <code>Splay</code></a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3391"><code>Luogu P3391</code> 「模板」文藝平衡樹</a></li>
<li><a href="https://loj.ac/p/105/"><code>LOJ #105</code> 文藝平衡樹</a></li>
</ul>
</li>
<li><blockquote id="fn_4">
<sup>4</sup>. <code>OI-Wiki</code> 章節 <a href="https://oi-wiki.org/ds/avl/">高度平衡樹 <code>AVL</code></a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a>
</blockquote>
</li>
<li><code>OI-Wiki</code> 章節 <a href="https://oi-wiki.org/ds/llrbt/">左偏紅黑樹</a></li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>二叉樹筆記 III 嘗試寫一棵靜態的二叉查找樹</title>
    <url>/next-nest/2021/11/24/bintree-03/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>如題。</p>
<span id="more"></span>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val, parent, lchild, rchild;</span><br><span class="line">    <span class="built_in">Node</span>() : <span class="built_in">val</span>(<span class="number">-1</span>), <span class="built_in">parent</span>(<span class="number">-1</span>), <span class="built_in">lchild</span>(<span class="number">-1</span>), <span class="built_in">rchild</span>(<span class="number">-1</span>) &#123;&#125;</span><br><span class="line">&#125; treenodes[<span class="number">3965</span>];</span><br><span class="line"><span class="keyword">int</span> root = <span class="number">-1</span>, num_nodes = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">new_node</span><span class="params">(<span class="keyword">int</span> _value)</span> </span>&#123;</span><br><span class="line">    treenodes[num_nodes].val = _value;</span><br><span class="line">    <span class="keyword">return</span> (num_nodes++);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> __preorder(<span class="keyword">int</span> rt) &#123;</span><br><span class="line">    <span class="keyword">if</span> (~rt) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d,&quot;</span>, treenodes[rt].val);</span><br><span class="line">        __preorder(treenodes[rt].lchild);</span><br><span class="line">        __preorder(treenodes[rt].rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> __inorder(<span class="keyword">int</span> rt) &#123;</span><br><span class="line">    <span class="keyword">if</span> (~rt) &#123;</span><br><span class="line">        __inorder(treenodes[rt].lchild);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d,&quot;</span>, treenodes[rt].val);</span><br><span class="line">        __inorder(treenodes[rt].rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">printall</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    __preorder(root);   <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    __inorder(root);    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> __search(<span class="keyword">int</span> rt, <span class="keyword">int</span> _target) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!~rt)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (_target == treenodes[rt].val)</span><br><span class="line">        <span class="keyword">return</span> rt;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (_target &lt; treenodes[rt].val)</span><br><span class="line">            <span class="keyword">return</span> __search(treenodes[rt].lchild, _target);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> __search(treenodes[rt].rchild, _target);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> _target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ~__search(root, _target);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> __insert(<span class="keyword">int</span> rt, <span class="keyword">int</span> _value) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!~rt)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">new_node</span>(_value);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (treenodes[rt].val != _value) &#123;</span><br><span class="line">            <span class="keyword">if</span> (_value &lt; treenodes[rt].val) &#123;</span><br><span class="line">                treenodes[rt].lchild = __insert(treenodes[rt].lchild, _value);</span><br><span class="line">                treenodes[treenodes[rt].lchild].parent = rt;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                treenodes[rt].rchild = __insert(treenodes[rt].rchild, _value);</span><br><span class="line">                treenodes[treenodes[rt].rchild].parent = rt;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> rt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> _value)</span> </span>&#123;</span><br><span class="line">    root = __insert(root, _value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cur;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    root = <span class="built_in">new_node</span>(<span class="number">39</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;index_root=%d\nnum_nodes=%d\n&quot;</span>, root, num_nodes);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, treenodes[root].val);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, <span class="built_in">search</span>(<span class="number">39</span>), <span class="built_in">search</span>(<span class="number">128</span>));</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;cur))</span><br><span class="line">        <span class="built_in">insert</span>(cur);</span><br><span class="line">    <span class="built_in">printall</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != <span class="number">10</span>; ++k)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">search</span>(k));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>Sample <code>#1</code></p>
<ul>
<li><p>Input</p>
<pre><code>3 9 2 6 0 8 1 7
</code></pre></li>
<li><p>Output</p>
<pre><code>index_root=0
num_nodes=1
39
1 0
 39, 3, 2, 0, 1, 9, 6, 8, 7,
 0, 1, 2, 3, 6, 7, 8, 9, 39,
1
1
1
1
0
0
1
1
1
1
</code></pre></li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「稽古】左偏紅黑樹 I 這就是紅黑樹嗎真的沒有搞錯嗎</title>
    <url>/next-nest/2022/01/11/bintree-llrbt-01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>簡單介紹完二叉查找樹與平衡樹之後，我們現在來審察平衡樹中一種特殊的平衡方式，那便是紅黑樹。</p>
<span id="more"></span>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><strong><em>紅黑樹<sup><a href="#fn_1" id="reffn_1">1</a></sup></em></strong>（<strong>R</strong>ed-<strong>B</strong>lack <strong>T</strong>ree，簡稱RBT） 之所以叫紅黑樹是因爲其節點具有<code>紅</code>與<code>黑</code>兩種顏色，可以視爲“被染色”和“未染色”兩種狀態。<br>紅黑樹通過控制紅黑兩種節點的排列來保證其平衡，爲此，一棵紅黑樹滿足以下特徵：</p>
<ol>
<li>節點為紅色或黑色；</li>
<li>紅色的節點的所有兒子的顏色必須是黑色，即從每個葉子到根的所有路徑上不能有兩個連續的紅色節點；</li>
<li>從任一節點到其子樹中的每個葉子的所有簡單路徑上都包含相同數目的黑色節點（黑高平衡）。</li>
</ol>
<p>這保證了從根節點到任意葉子的最長路徑（紅黑交替）不會超過最短路徑（全黑）的二倍，從而保證了樹的平衡性。</p>
<p><img src="/next-nest/2022/01/11/bintree-llrbt-01/rbtree.jpeg" alt></p>
<p>如圖所示便是一棵紅黑樹，滿足以上各項性質。</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <code>OI-Wiki</code> 章節 <a href="https://oi-wiki.org/ds/llrbt/#_1">左偏紅黑樹-紅黑樹</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. 13 Red Black Trees <a href="https://www.bilibili.com/video/av14050857">Bilibili: <code>av14050857</code></a> 2017-09-01<a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. 「JDK源碼剖析之紅黑樹TreeMap」子空kosora+七月在線 <a href="https://www.bilibili.com/video/av23890827">Bilibili: <code>av23890827</code></a> 2018-05-25<a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「稽古】左偏紅黑樹 II 紅黑樹的節點與神乎其技的旋邊</title>
    <url>/next-nest/2022/01/11/bintree-llrbt-02/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>之前講解了紅黑樹通過維持“黑高平衡”以實現倍數平衡的原理，但是</p>
<blockquote><p>維護紅黑樹的性質是比較複雜的。如果我們要插入一個節點：首先，它一定會被染色成紅色，否則會破壞黑高平衡。縱使這樣，還有可能會出現連續的兩個紅色節點。因此需要進行調整。而刪除節點就更加麻煩，與插入類似，我們不能刪除黑色節點，否則會破壞黑高的平衡。</p>
<footer><strong><code>OI-Wiki</code>章節</strong><cite><a href="https://oi-wiki.org/ds/llrbt/#_1">左偏紅黑樹-紅黑樹</a></cite></footer></blockquote>
<span id="more"></span>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>爲了解決這樣的問題，我們引入一個<em>Robert Sedgewick</em>所提出的容易實現的方案：<strong><em>左偏紅黑樹<sup><a href="#fn_1" id="reffn_1">1</a></sup></em></strong>（<strong>L</strong>eft-<strong>L</strong>eaning <strong>R</strong>ed-<strong>B</strong>lack <strong>T</strong>ree，簡稱LLRBT，又稱左傾紅黑樹或左斜紅黑樹）。</p>
<p><img src="/next-nest/2022/01/11/bintree-llrbt-02/llrbt-demo.jpeg" alt></p>
<p>在左偏紅黑樹中有一點與紅黑樹不同，那便是左偏紅黑樹中是邊具有顔色而非節點具有顔色，但我們爲了表示方便，用一條邊中的孩子來表示該邊的顔色。</p>
<p>左偏紅黑樹對紅黑樹進行了進一步限制，一個黑色節點的左右孩子滿足以下特徵：</p>
<ol>
<li>要麽全爲黑色（即從一個黑色節點延展出兩條黑邊）；</li>
<li>要麽左孩子為紅色而右孩子為黑色。</li>
</ol>
<p>這兩點保證了所有的紅邊都是左偏的，即紅邊只會連接某個節點與其左孩子，而不是右孩子。<br>由此可以看出，這是一種特殊的紅黑樹，這些新加入的特徵對其進行限制，使其增刪操作可以與<code>2-3-4</code>樹<sup><a href="#fn_3" id="reffn_3">3</a></sup>構成一一對應。<br>可以通過一下一正一反兩個例子來理解這兩條特徵：</p>
<ul>
<li>符合條件的情形<img src="/next-nest/2022/01/11/bintree-llrbt-02/llrbt-1.jpeg" alt></li>
<li>不符合條件的情形<img src="/next-nest/2022/01/11/bintree-llrbt-02/llrbt-2.jpeg" alt></li>
</ul>
<h3 id="Structure"><a href="#Structure" class="headerlink" title="Structure"></a>Structure</h3><p>左偏紅黑樹中，在二叉查找樹的結構基礎之上，我們將加入一個成員<code>colored</code>以記錄某個節點的染色情況。<br>黨<code>colored</code>為真時，我們視這個節點為紅色節點，亦即連接其與其母親節點的邊為紅邊，否則視爲黑邊。<br>如此這般便有了左偏紅黑樹中節點的基本結構：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">parent</span>, *<span class="title">lchild</span>, *<span class="title">rchild</span>;</span></span><br><span class="line">    <span class="keyword">bool</span> colored;</span><br><span class="line">&#125; *root;</span><br><span class="line"><span class="function">struct Node * <span class="title">new_node</span><span class="params">(<span class="keyword">int</span> _value)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 類比高級語言中的對象構造函數並加以簡單封裝。</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * <span class="title">q</span> =</span> (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">    q-&gt;val = _value;</span><br><span class="line">    q-&gt;lchild = <span class="literal">nullptr</span>;</span><br><span class="line">    q-&gt;rchild = <span class="literal">nullptr</span>;</span><br><span class="line">    q-&gt;parent = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="comment">// 在創建節點時預先染紅，關於這一點將在後面進行解釋。</span></span><br><span class="line">    q-&gt;colored = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> q;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Rotation"><a href="#Rotation" class="headerlink" title="Rotation"></a>Rotation</h3><p>對於左偏紅黑樹的節點，旋邊時其他的與普通的二叉查找樹的旋邊操作無異，但需要注意兩個節點染色情況的改變。<br>以左旋爲例，原本的孩子會取代母親的位置，繼承其母親與祖母相連的邊的顔色，在表示上便是該點被更新爲其母親的染色情況；而原本的母親將會被旋轉至其孩子的位置，表示該邊染色情況的節點從原本的孩子變爲旋轉成爲孩子的母親，效果上也是繼承其孩子的染色情況…右旋也是類似的過程。<br>如若能夠理解以上過程，那麽我們可以發現紅黑樹（不僅是左偏紅黑樹）的旋邊中染色情況的變化可以簡單概括爲：<strong><em>被旋邊兩端節點染色情況交換</em></strong>。</p>
<ul>
<li>左旋 Left Rotate<ul>
<li>代碼<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function">struct Node * <span class="title">rotate</span><span class="params">(struct Node *rt)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Left Rotate an Edge...</span></span><br><span class="line"><span class="comment">    *        [1]               [2]</span></span><br><span class="line"><span class="comment">    *        / \               / \</span></span><br><span class="line"><span class="comment">    *       *  [2]    ==&gt;    [1]  *</span></span><br><span class="line"><span class="comment">    *          / \           / \</span></span><br><span class="line"><span class="comment">    *         O   *         *   O</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    Node * newroot = rt-&gt;rchild;</span><br><span class="line">    <span class="keyword">if</span> (newroot != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        <span class="comment">// 先進行常規的旋邊過程。</span></span><br><span class="line">        rt-&gt;rchild = newroot-&gt;lchild;</span><br><span class="line">        newroot-&gt;lchild = rt;</span><br><span class="line">        newroot-&gt;parent = rt-&gt;parent;</span><br><span class="line">        rt-&gt;parent = newroot;</span><br><span class="line">        <span class="keyword">if</span> (rt-&gt;rchild != <span class="literal">nullptr</span>)</span><br><span class="line">            rt-&gt;rchild-&gt;parent = rt;</span><br><span class="line">        <span class="comment">// 而後交換兩節點染色情況。</span></span><br><span class="line">        <span class="built_in">swap</span>(rt-&gt;colored, newroot-&gt;colored);</span><br><span class="line">        <span class="keyword">return</span> newroot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>例<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line">node = <span class="built_in">rotate</span>(node);</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>右旋 Right Rotate<ul>
<li>代碼<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function">struct Node * <span class="title">rotrev</span><span class="params">(struct Node *rt)</span> </span>&#123;</span><br><span class="line">    Node * newroot = rt-&gt;lchild;</span><br><span class="line">    <span class="keyword">if</span> (newroot != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        rt-&gt;lchild = newroot-&gt;rchild;</span><br><span class="line">        newroot-&gt;rchild = rt;</span><br><span class="line">        newroot-&gt;parent = rt-&gt;parent;</span><br><span class="line">        rt-&gt;parent = newroot;</span><br><span class="line">        <span class="keyword">if</span> (rt-&gt;lchild != <span class="literal">nullptr</span>)</span><br><span class="line">            rt-&gt;lchild-&gt;parent = rt;</span><br><span class="line">        <span class="built_in">swap</span>(rt-&gt;colored, newroot-&gt;colored);</span><br><span class="line">        <span class="keyword">return</span> newroot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>例<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line">node = <span class="built_in">rotrev</span>(node);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h3 id="Flip"><a href="#Flip" class="headerlink" title="Flip"></a>Flip</h3><p>紅黑樹中還有一個重要操作，便是顔色的翻轉，其可以使某節點及其左右孩子的染色變爲與當前相反的情況。</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">flip</span><span class="params">(struct Node *rt)</span> </span>&#123;</span><br><span class="line">    rt-&gt;colored = !(rt-&gt;colored);</span><br><span class="line">    rt-&gt;lchild-&gt;colored = !(rt-&gt;lchild-&gt;colored);</span><br><span class="line">    rt-&gt;rchild-&gt;colored = !(rt-&gt;rchild-&gt;colored);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Extra"><a href="#Extra" class="headerlink" title="Extra"></a>Extra</h2><p>事實上，紅黑樹本身就是與<code>2-3-4</code>樹等價的，我們可以從<code>nullzx</code>的這篇文章<sup><a href="#fn_4" id="reffn_4">4</a></sup>裏這兩張圖中理解這一點：<img src="/next-nest/2022/01/11/bintree-llrbt-02/tr234-llrbt-1.jpeg" alt><img src="/next-nest/2022/01/11/bintree-llrbt-02/tr234-llrbt-2.jpeg" alt></p>
<p>由於左偏紅黑樹不存在右偏的紅邊，所以可以認爲對應的<code>2-3-4</code>樹中不存在<code>4-</code>節點，因此可以認爲左偏紅黑樹等價於<code>2-3</code>樹：<img src="/next-nest/2022/01/11/bintree-llrbt-02/llrbt-zhihu.jpeg" alt></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <code>OI-Wiki</code>章節 <a href="https://oi-wiki.org/ds/llrbt/">左偏紅黑樹</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <a href="https://www.cs.princeton.edu/~rs/talks/LLRB/RedBlack.pdf">Left-Leaning Red-Black Trees</a>, Robert Sedgewick, Princeton University<a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. Algorithms - <a href="https://algs4.cs.princeton.edu/lectures/keynote/33BalancedSearchTrees-2x2.pdf">Balanced Search Trees</a>, Robert Sedgewick, Kevin Wayne<a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_4">
<sup>4</sup>. <code>nullzx</code>的博客園文章 <a href="https://www.cnblogs.com/nullzx/p/6128416.html">从<code>2-3-4</code>树到红黑树（中）</a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「稽古】左偏紅黑樹 IV 如若能刪除最小值就好了</title>
    <url>/next-nest/2022/01/12/bintree-llrbt-04/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>我們已經能夠向左偏紅黑樹中插入節點了，但在考慮刪除指定的節點之前，讓我們先考慮一下如何刪除樹中持有最小值的節點。</p>
<span id="more"></span>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><blockquote><p>刪除操作基於這樣的思想：我們不能刪除黑色的節點，因為這樣會破壞黑高。所以我們需要保證我們最後刪除的節點是紅色的。<br>怎么才能保证最后删除的节点是红色的呢？我们需要在向下递归的过程中保证一个性质：如果当前节点是<code>q</code>，那么需要保证<code>q</code>是红色，或者<code>q-&gt;lchild</code>是红色。</p>
<footer><strong><code>OI-Wiki</code>章節</strong><cite><a href="https://oi-wiki.org/ds/llrbt/#_4">左偏紅黑樹-刪除</a></cite></footer></blockquote>
<p>需要保證的性質可以這樣來理解：<code>q</code>為紅色節點意味著連接<code>q</code>與其母親節點的邊為紅邊，<code>q-&gt;lchild</code>為紅色節點意味著連接<code>q</code>與其左孩子的邊為紅邊。<br>這樣一來在刪除的時候，斬斷與<code>q</code>相連的紅邊，然後讓與<code>q</code>相連的黑邊接管被斬斷紅邊連接的另一個節點即可。</p>
<p>但對於持有最小值的節點<code>q</code>而言，它并不具有左孩子，因此不存在<code>q-&gt;lchild</code>為紅色的情況，此時必須保證<code>q</code>為紅色，亦即連接其與母親節點的邊為紅色。</p>
<p>我們把想要刪除的節點染紅，刪除，再按照插入節點時的方法進行修復即可。</p>
<h2 id="Minimum-Deletion"><a href="#Minimum-Deletion" class="headerlink" title="Minimum Deletion"></a>Minimum Deletion</h2><p>爲了達到這一點，我們所采取的辦法便是， <strong><em>臨時地</em></strong> 破壞左偏紅黑樹的某些性質，在遞歸返回時再進行恢復。</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="https://oi-wiki.org/"><code>OI-Wiki</code></a></p>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「稽古】左偏紅黑樹 III 插入節點的修正方法</title>
    <url>/next-nest/2022/01/11/bintree-llrbt-03/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>現在已經先後講完了二叉查找樹的基本增刪操作，左偏紅黑樹的概念與結構特徵，以及旋邊、翻轉操作。<br>需要的前置内容已經全部理清，現在可以開始審察其節點插入操作。</p>
<span id="more"></span>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>左偏紅黑樹<sup><a href="#fn_1" id="reffn_1">1</a></sup>節點的插入操作可以理解爲在常規地二叉查找樹插入後，修復插入後的左偏紅黑樹，以保證其仍然滿足左偏紅黑樹的相關特徵。<br>由於隨意插入黑色節點會頻繁破壞黑高平衡，使維護工作難度變大，因此我們在插入節點的時候 <strong><em>默認插入的是紅色節點，</em></strong> 然後在修復的過程中再進行染色調整。<br>由於紅黑樹中本身存在兩種節點：紅色節點與黑色節點，因此在插入的時候我們也分爲<code>向黑色節點插入</code>與<code>向紅色節點插入</code>兩種情形進行討論。</p>
<h2 id="Insertion"><a href="#Insertion" class="headerlink" title="Insertion"></a>Insertion</h2><h3 id="into-Black-Nodes"><a href="#into-Black-Nodes" class="headerlink" title="into Black Nodes"></a>into Black Nodes</h3><p><img src="/next-nest/2022/01/11/bintree-llrbt-03/insertion-01.jpeg" alt></p>
<p>如圖，向黑色節點的插入操作可以分爲<code>插入為左孩子</code>與<code>插入為右孩子</code>兩種情形。<br>前者情形由於插入的節點目前為葉子，且其母親節點向上的邊為黑邊，而在過程中沒有破壞左偏紅黑樹的相關特徵，因此不必再進行維護操作；後者情形會使被插入的母親節點延展出一條右偏的紅邊，此時需要把這條右偏的紅邊進行左旋使其左偏，以維護左偏紅黑樹的相關特徵。</p>
<h3 id="into-Red-Nodes"><a href="#into-Red-Nodes" class="headerlink" title="into Red Nodes"></a>into Red Nodes</h3><p><img src="/next-nest/2022/01/11/bintree-llrbt-03/insertion-02.jpeg" alt></p>
<p>如圖，向紅色節點的插入操作可以分爲<code>插入為紅邊左孩子的左孩子</code>、<code>插入為紅邊左孩子的右孩子</code>與<code>插入為紅邊母親節點的右孩子</code>三種情形，根據原作者在文獻中的講解，我們先考慮把前兩者轉化爲第三種情形。</p>
<p>把前兩者轉化爲第三種情形，我們通常采用的手段是：先把第二種情形轉化爲第一種，再把第一種情形轉化爲第三種。<br>把第二種情形轉化爲第一種的方法很簡單，如同<code>插入為黑色節點的右孩子</code>一樣，把連接插入的節點與其母親節點的右偏紅邊左旋即可。<br>第一種情形中，會出現兩條連續的左偏紅邊，此時需要操作被插入的母親節點以及其母親，使上方的左偏紅邊右旋，被插入的母親節點把原本的母親節點接管為自己的右孩子，並以右偏的紅邊進行連接。</p>
<p><img src="/next-nest/2022/01/11/bintree-llrbt-03/insertion-03.jpeg" alt></p>
<p>當我們把前兩者都轉化爲第三種情形後，還需要對第三種情形進行處理，這是因爲第三種情形中被插入的母親節點延展出了一條右偏的紅邊。<br>但此時的處理也很簡單，根據紅黑樹的性質，母親節點向上的一定為黑邊，此時可以通過<code>flip</code>翻轉操作，把<code>兩條紅邊連接孩子們、一條黑邊向上連接</code>的節點變爲<code>兩條黑邊連接孩子們、一條紅邊向上連接</code>的節點，從而消滅右偏紅邊（把其轉化爲右偏黑邊）的同時維持局部的黑高平衡。</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>讓我們稍微總結並整合一下上述的插入過程。<br>這是原作者Sedgewick在原文ppt<sup><a href="#fn_2" id="reffn_2">2</a></sup>上最初的總結：</p>
<p><img src="/next-nest/2022/01/11/bintree-llrbt-03/insertion-04.jpeg" alt></p>
<p>我們先處理與<code>4-</code>節點等價的由某個節點延展出的左右兩條紅邊，通過翻轉顔色消滅右偏紅邊的同時把原本左偏的紅邊上移，實質上等價於把<code>2-3-4</code>樹中的一個<code>4-</code>節點分裂為兩個<code>2-</code>節點。</p>
<p>如若不屬於上述情況，則考慮下面的過程：在插入紅色節點之後，我們先把插入的右孩子左旋，如若產生了兩條連續紅邊，再左旋為延展出左右兩條紅邊的，與<code>4-</code>節點等價的節點。</p>
<p>但這樣做在最後無疑會遺留新的<code>4-</code>節點，於是後面Sedgewick把分裂<code>4-</code>節點的操作移到最後，以保證不會遺留<code>4-</code>節點：</p>
<p><img src="/next-nest/2022/01/11/bintree-llrbt-03/insertion-05.jpeg" alt><img src="/next-nest/2022/01/11/bintree-llrbt-03/insertion-06.jpeg" alt></p>
<p>從程式上看就像是對普通的二叉查找樹的插入操作加入了幾行修正的操作。</p>
<h2 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h2><p>我們可以把這些操作，簡單地封裝一下。</p>
<h3 id="Color-Judgement"><a href="#Color-Judgement" class="headerlink" title="Color Judgement"></a>Color Judgement</h3><p>首先我們需要一個可以在某個節點非空的基礎之上判斷其是否被染色的函數：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">judge_colored</span><span class="params">(struct Node *rt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (rt != <span class="literal">nullptr</span>) ? (rt-&gt;colored) : <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Fix-Up"><a href="#Fix-Up" class="headerlink" title="Fix Up"></a>Fix Up</h3><p>然後是封裝插入過程中的修正過程，因爲後面可能還會用到：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function">struct Node * <span class="title">fixup</span><span class="params">(struct Node *rt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">judge_colored</span>(rt-&gt;rchild))</span><br><span class="line">        rt = <span class="built_in">rotate</span>(rt);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">judge_colored</span>(rt-&gt;lchild)</span><br><span class="line">     &amp;&amp; <span class="built_in">judge_colored</span>(rt-&gt;lchild-&gt;lchild))</span><br><span class="line">        rt = <span class="built_in">rotrev</span>(rt);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">judge_colored</span>(rt-&gt;lchild)</span><br><span class="line">     &amp;&amp; <span class="built_in">judge_colored</span>(rt-&gt;rchild))</span><br><span class="line">        <span class="built_in">flip</span>(rt);</span><br><span class="line">    <span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Insertion-Process"><a href="#Insertion-Process" class="headerlink" title="Insertion Process"></a>Insertion Process</h3><p>於是插入過程可以寫如下：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * __<span class="title">insert</span>(<span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">rt</span>, <span class="title">int</span> _<span class="title">value</span>) &#123;</span></span><br><span class="line">    <span class="keyword">if</span> (rt == <span class="literal">nullptr</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">new_node</span>(_value);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (rt-&gt;val != _value) &#123;</span><br><span class="line">            <span class="keyword">if</span> (_value &lt; rt-&gt;val) &#123;</span><br><span class="line">                rt-&gt;lchild = __insert(rt-&gt;lchild, _value);</span><br><span class="line">                rt-&gt;lchild-&gt;parent = rt;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                rt-&gt;rchild = __insert(rt-&gt;rchild, _value);</span><br><span class="line">                rt-&gt;rchild-&gt;parent = rt;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 最後一步，普通的二叉查找樹便是直接返回節點`rt`，但我們這裏要...</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">fixup</span>(rt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> _value)</span> </span>&#123;</span><br><span class="line">    root = __insert(root, _value);</span><br><span class="line">    <span class="comment">// 修正過程的最後可能會把根節點染色，在這裏我們要强制把它的顔色進行修正</span></span><br><span class="line">    root-&gt;colored = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Tree-Printing"><a href="#Tree-Printing" class="headerlink" title="Tree-Printing"></a>Tree-Printing</h3><p>此外，爲了清晰地表示節點的染色情況，我們稍微修改了一下二叉樹的<code>printall</code>函數：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> __preorder(struct Node *rt) &#123;</span><br><span class="line">    <span class="keyword">if</span> (rt != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (rt-&gt;colored)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; [%d],&quot;</span>, rt-&gt;val);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  %d ,&quot;</span>, rt-&gt;val);</span><br><span class="line">        __preorder(rt-&gt;lchild);</span><br><span class="line">        __preorder(rt-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> __inorder(struct Node *rt) &#123;</span><br><span class="line">    <span class="keyword">if</span> (rt != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        __inorder(rt-&gt;lchild);</span><br><span class="line">        <span class="keyword">if</span> (rt-&gt;colored)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; [%d],&quot;</span>, rt-&gt;val);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  %d ,&quot;</span>, rt-&gt;val);</span><br><span class="line">        __inorder(rt-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printall</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    __preorder(root);   <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    __inorder(root);    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <code>OI-Wiki</code>章節 <a href="https://oi-wiki.org/ds/llrbt/">左偏紅黑樹</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <a href="https://www.cs.princeton.edu/~rs/talks/LLRB/RedBlack.pdf">Left-Leaning Red-Black Trees</a>, Robert Sedgewick, Princeton University<a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「轉載】擅長位運算的王大同學</title>
    <url>/next-nest/2022/01/08/bitwise-huoxingdawang/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>轉載自<code>火星大王</code>在他自己搭建的<a href="http://juruoyun.top/">蒟蒻雲</a>上的相關篇目<sup><a href="#fn_1" id="reffn_1">1</a></sup>。</p>
<span id="more"></span>
<h2 id="Basic-Operations"><a href="#Basic-Operations" class="headerlink" title="Basic Operations"></a>Basic Operations</h2><h3 id="Shifting-Left"><a href="#Shifting-Left" class="headerlink" title="Shifting Left"></a>Shifting Left</h3><p>將A的二進製表示的每一位向左移B位，左邊超出的位截掉，右邊不足的位補0</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">A      = <span class="number">1100</span></span><br><span class="line">A &lt;&lt; <span class="number">2</span> = <span class="number">110000</span></span><br></pre></td></tr></table></figure>
<h3 id="Shifting-Right"><a href="#Shifting-Right" class="headerlink" title="Shifting Right"></a>Shifting Right</h3><p>右移操作分為算數右移和邏輯右移<br>算術右移是帶符號的右移，邏輯右移是不帶符號的右移。<br>算術右移：將A的二進製表示的每一位向右移B位，右邊超出的位截掉，左邊不足的位補符號位。<br>邏輯右移：將A的二進製表示的每一位向右移B位，右邊超出的位截掉，左邊不足的位補0。<br>在C語言中，當操作的變量類型有<code>unsigned</code>修飾時，是邏輯右移，否則是算術右移。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">A      = <span class="number">11111111111111111111111110000001</span></span><br><span class="line">A &gt;&gt; <span class="number">2</span> = <span class="number">11111111111111111111111111100000</span></span><br></pre></td></tr></table></figure>
<h3 id="Exceptions-during-Shifting"><a href="#Exceptions-during-Shifting" class="headerlink" title="Exceptions during Shifting"></a>Exceptions during Shifting</h3><p>人們在“長期實踐”中發現，對於以下代碼</p>
<figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">(<span class="keyword">unsigned</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">31</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, (x&gt;&gt;i)&amp;<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">display</span>(<span class="number">1</span>&lt;&lt;<span class="number">32</span>);</span><br><span class="line">    <span class="built_in">display</span>(a&lt;&lt;<span class="number">32</span>);</span><br><span class="line">    <span class="built_in">display</span>(<span class="number">1</span>&lt;&lt;<span class="number">-4</span>);</span><br><span class="line">    <span class="built_in">display</span>(a&lt;&lt;<span class="number">-4</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>輸出是</p>
<pre><code>00000000000000000000000000000000
00000000000000000000000000000001
00000000000000000000000000000000
00010000000000000000000000000000
</code></pre><p>看起來似乎很奇怪。<br>我们使用<code>GDB</code>查看以下汇编代码</p>
<figure class="highlight cpp"><figcaption><span>Assembly</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="number">0x000000000040159c</span> &lt;+<span class="number">0</span>&gt;:     push   %rbp</span><br><span class="line"><span class="number">0x000000000040159d</span> &lt;+<span class="number">1</span>&gt;:     mov    %rsp,%rbp</span><br><span class="line"><span class="number">0x00000000004015a0</span> &lt;+<span class="number">4</span>&gt;:     sub    $<span class="number">0x30</span>,%rsp</span><br><span class="line"><span class="number">0x00000000004015a4</span> &lt;+<span class="number">8</span>&gt;:     callq  <span class="number">0x4016b0</span> &lt;__main&gt;</span><br><span class="line"><span class="number">0x00000000004015a9</span> &lt;+<span class="number">13</span>&gt;:    movl   $<span class="number">0x1</span>,<span class="number">-0x4</span>(%rbp)</span><br><span class="line"><span class="number">0x00000000004015b0</span> &lt;+<span class="number">20</span>&gt;:    mov    $<span class="number">0x0</span>,%ecx</span><br><span class="line"><span class="number">0x00000000004015b5</span> &lt;+<span class="number">25</span>&gt;:    callq  <span class="number">0x401550</span> &lt;_Z7displayj&gt;</span><br><span class="line"><span class="number">0x00000000004015ba</span> &lt;+<span class="number">30</span>&gt;:    mov    $<span class="number">0x20</span>,%edx</span><br><span class="line"><span class="number">0x00000000004015bf</span> &lt;+<span class="number">35</span>&gt;:    mov    <span class="number">-0x4</span>(%rbp),%eax</span><br><span class="line"><span class="number">0x00000000004015c2</span> &lt;+<span class="number">38</span>&gt;:    mov    %edx,%ecx</span><br><span class="line"><span class="number">0x00000000004015c4</span> &lt;+<span class="number">40</span>&gt;:    shl    %cl,%eax</span><br><span class="line"><span class="number">0x00000000004015c6</span> &lt;+<span class="number">42</span>&gt;:    mov    %eax,%ecx</span><br><span class="line"><span class="number">0x00000000004015c8</span> &lt;+<span class="number">44</span>&gt;:    callq  <span class="number">0x401550</span> &lt;_Z7displayj&gt;</span><br><span class="line"><span class="number">0x00000000004015cd</span> &lt;+<span class="number">49</span>&gt;:    mov    $<span class="number">0x0</span>,%ecx</span><br><span class="line"><span class="number">0x00000000004015d2</span> &lt;+<span class="number">54</span>&gt;:    callq  <span class="number">0x401550</span> &lt;_Z7displayj&gt;</span><br><span class="line"><span class="number">0x00000000004015d7</span> &lt;+<span class="number">59</span>&gt;:    mov    $<span class="number">0xfffffffc</span>,%edx</span><br><span class="line"><span class="number">0x00000000004015dc</span> &lt;+<span class="number">64</span>&gt;:    mov    <span class="number">-0x4</span>(%rbp),%eax</span><br><span class="line"><span class="number">0x00000000004015df</span> &lt;+<span class="number">67</span>&gt;:    mov    %edx,%ecx</span><br><span class="line"><span class="number">0x00000000004015e1</span> &lt;+<span class="number">69</span>&gt;:    shl    %cl,%eax</span><br><span class="line"><span class="number">0x00000000004015e3</span> &lt;+<span class="number">71</span>&gt;:    mov    %eax,%ecx</span><br><span class="line"><span class="number">0x00000000004015e5</span> &lt;+<span class="number">73</span>&gt;:    callq  <span class="number">0x401550</span> &lt;_Z7displayj&gt;</span><br><span class="line"><span class="number">0x00000000004015ea</span> &lt;+<span class="number">78</span>&gt;:    mov    $<span class="number">0x0</span>,%eax</span><br><span class="line"><span class="number">0x00000000004015ef</span> &lt;+<span class="number">83</span>&gt;:    add    $<span class="number">0x30</span>,%rsp</span><br><span class="line"><span class="number">0x00000000004015f3</span> &lt;+<span class="number">87</span>&gt;:    pop    %rbp</span><br><span class="line"><span class="number">0x00000000004015f4</span> &lt;+<span class="number">88</span>&gt;:    retq</span><br><span class="line"><span class="number">0x00000000004015f5</span> &lt;+<span class="number">89</span>&gt;:    nop</span><br><span class="line"><span class="number">0x00000000004015f6</span> &lt;+<span class="number">90</span>&gt;:    nop</span><br><span class="line"><span class="number">0x00000000004015f7</span> &lt;+<span class="number">91</span>&gt;:    nop</span><br></pre></td></tr></table></figure>
<p>可以看到有4个<code>callq 0x401550 &lt;_Z7displayj&gt;</code><br>我們用這個可以把代碼分成四節，可以看到，對於<code>1&lt;&lt;32</code>和<code>1&lt;&lt;-4</code>,是沒有移位指令<code>shl</code>的，也就是說，<code>GCC</code>幫我們直接算出來了，都是0，然後當成常數直接編譯到了代碼裡。<br>這個操作很符合直覺，<code>1&lt;&lt;32</code>把1唯一一個1移出去了，<code>1&lt;&lt;-4</code>應該等價於<code>1&gt;&gt;4</code>，也把1唯一一個1移出去了。<br>也就是說GCC算的是對的，而代碼運行時算的是“錯”的。<br>之所以說是“錯”的，是因為，代碼運行時的移位隱含了一個取模操作，移動的位數首先要對變量長度取模，再參與運算。<br>筆者因為這種不合常理的運算方式，和一個題死磕了四個鐘，一度懷疑是題目出錯了。<br>為了解決這個問題，我們引入<code>SRM (safe right move)</code>和<code>SLM (safe left move)</code></p>
<figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">SLM</span><span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> n)</span> </span>&#123; <span class="comment">//安全左移</span></span><br><span class="line">    <span class="keyword">return</span> (n &gt;= <span class="number">32</span>) ? <span class="number">0</span> : n &lt; <span class="number">0</span> ? <span class="built_in">SRM</span>(x, -n) : x &lt;&lt; n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">SRM</span><span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> n)</span> </span>&#123; <span class="comment">//安全右移</span></span><br><span class="line">    <span class="keyword">return</span> (n &gt;= <span class="number">32</span>) ? <span class="number">0</span> : n &lt; <span class="number">0</span> ? <span class="built_in">SLM</span>(x, -n) : x &gt;&gt; n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>容易看出，這兩個函數特殊處理了<code>n&gt;=32</code>和<code>n&lt;0</code>的情況，讓移位操作更符合直覺。</p>
<h3 id="Bitwise-AND"><a href="#Bitwise-AND" class="headerlink" title="Bitwise AND"></a>Bitwise AND</h3><p>將A和B的二進製表示的每一位進行與操作，只有兩個對應的二進制位都為1時，結果位才為1，否則為0.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">A     = <span class="number">001010</span></span><br><span class="line">B     = <span class="number">101100</span></span><br><span class="line">A &amp; B = <span class="number">001000</span></span><br></pre></td></tr></table></figure>
<h3 id="Bitwise-OR"><a href="#Bitwise-OR" class="headerlink" title="Bitwise OR"></a>Bitwise OR</h3><p>將A和B的二進製表示的每一位進行或操作，只要兩個對應的二進制位有一個為1，結果位就為1，否則為0.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">A     = <span class="number">001010</span></span><br><span class="line">B     = <span class="number">101100</span></span><br><span class="line">A | B = <span class="number">101110</span></span><br></pre></td></tr></table></figure>
<h3 id="Bitwise-Negation"><a href="#Bitwise-Negation" class="headerlink" title="Bitwise Negation"></a>Bitwise Negation</h3><p>將A的二進製表示每一位進行取反操作，如果對應的二進制位為0，結果位為1，否則為0.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"> A = <span class="number">00000000000000000000000000001010</span></span><br><span class="line">~A = <span class="number">11111111111111111111111111110101</span></span><br></pre></td></tr></table></figure>
<h3 id="Bitwise-XOR"><a href="#Bitwise-XOR" class="headerlink" title="Bitwise XOR"></a>Bitwise XOR</h3><p>將A和B的二進製表示的每一位進行異或操作，如果對應的二進制位不同，結果位為1，否則為0.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">A     = <span class="number">001010</span></span><br><span class="line">B     = <span class="number">101100</span></span><br><span class="line">A ^ B = <span class="number">100110</span></span><br></pre></td></tr></table></figure>
<h2 id="A-few-Advanced-Operations"><a href="#A-few-Advanced-Operations" class="headerlink" title="A few Advanced Operations"></a>A few Advanced Operations</h2><h3 id="Conventions-for-Binary-Digits"><a href="#Conventions-for-Binary-Digits" class="headerlink" title="Conventions for Binary Digits"></a>Conventions for Binary Digits</h3><p>筆者所在學校使用PTA評測代碼，PTA上對於二進制的描述是這樣的：例如從p開始的n位</p>
<p>首先是p，p從右開始數，為<code>0,1,2,3···</code>，也就是說，對於一個二進制串，p是<code>31 30 29 28···3 2 1 0</code><br>然後是n，n指的是這些位：<code>p,p-1...p+1-n</code></p>
<h3 id="高級操作——把x從p開始的n位設置成1"><a href="#高級操作——把x從p開始的n位設置成1" class="headerlink" title="高級操作——把x從p開始的n位設置成1"></a>高級操作——把x從p開始的n位設置成1</h3><figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">set_bits</span><span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> p, <span class="keyword">int</span> n)</span> </span>&#123; <span class="comment">//把從p開始的n位設置成1</span></span><br><span class="line">    <span class="keyword">return</span> x | <span class="built_in">SLM</span>(~<span class="built_in">SLM</span>(~<span class="number">0</span>, n), p + <span class="number">1</span> - n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 對於set_bits(0,4,3):</span></span><br><span class="line"><span class="comment"> *                              (~0)</span></span><br><span class="line"><span class="comment"> *  獲得一個32個1的東西              =&gt; 11111111111111111111111111111111</span></span><br><span class="line"><span class="comment"> *                              (~0) &lt;&lt; n</span></span><br><span class="line"><span class="comment"> *  把上一個東西右邊搞出n個0         =&gt; 11111111111111111111111111111000</span></span><br><span class="line"><span class="comment"> *                              (~((~0) &lt;&lt; n))</span></span><br><span class="line"><span class="comment"> *  把上一個東西0和1反過來           =&gt; 00000000000000000000000000000111</span></span><br><span class="line"><span class="comment"> *                              ((~((~0) &lt;&lt; n)) &lt;&lt; (p + 1 - n))</span></span><br><span class="line"><span class="comment"> *  把上一個東西右邊搞出(p+1-n)個0   =&gt; 00000000000000000000000000011100</span></span><br><span class="line"><span class="comment"> * 與x或運算即可設置1</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>
<h3 id="高級操作——獲取x從p開始的n位"><a href="#高級操作——獲取x從p開始的n位" class="headerlink" title="高級操作——獲取x從p開始的n位"></a>高級操作——獲取x從p開始的n位</h3><figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">get_bits</span><span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> p, <span class="keyword">int</span> n)</span> </span>&#123; <span class="comment">//獲取從p開始的n位</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">SRM</span>(x, p + <span class="number">1</span> - n) &amp; (~<span class="built_in">SLM</span>(~<span class="number">0</span>, n));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="高級操作——把x從p開始的n位設置成0"><a href="#高級操作——把x從p開始的n位設置成0" class="headerlink" title="高級操作——把x從p開始的n位設置成0"></a>高級操作——把x從p開始的n位設置成0</h3><figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">unset_bits</span><span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> p, <span class="keyword">int</span> n)</span>  <span class="comment">//把從p開始的n位設置成0</span></span></span><br><span class="line"><span class="function">    <span class="keyword">return</span> x &amp; ~<span class="params">(set_bits(<span class="number">0</span>, p, n))</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//                            對於unset_bits(0,4,3)</span></span><br><span class="line"><span class="comment">//用set_bits(0,4,3)得到       00000000000000000000000000011100</span></span><br><span class="line"><span class="comment">//取反得到                    11111111111111111111111111100011</span></span><br><span class="line"><span class="comment">//與x與運算即可清0</span></span><br></pre></td></tr></table></figure>
<h3 id="高級操作——反轉x從p開始的n位"><a href="#高級操作——反轉x從p開始的n位" class="headerlink" title="高級操作——反轉x從p開始的n位"></a>高級操作——反轉x從p開始的n位</h3><figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">reverse_bits</span><span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> p, <span class="keyword">int</span> n)</span> </span>&#123; <span class="comment">//反轉從p開始的n位</span></span><br><span class="line">    <span class="keyword">return</span> x ^ <span class="built_in">set_bits</span>(<span class="number">0</span>, p, n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//                            reverse_bits(0,4,3)</span></span><br><span class="line"><span class="comment">//用set_bits(0,4,3)得到       00000000000000000000000000011100</span></span><br><span class="line"><span class="comment">//與x異或運算即可</span></span><br></pre></td></tr></table></figure>
<h3 id="高級操作——把x最後一個0刪掉"><a href="#高級操作——把x最後一個0刪掉" class="headerlink" title="高級操作——把x最後一個0刪掉"></a>高級操作——把x最後一個0刪掉</h3><figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">delete_last_0</span><span class="params">(<span class="keyword">unsigned</span> x)</span> </span>&#123; <span class="comment">//把最後一個0刪掉</span></span><br><span class="line">    <span class="keyword">return</span> x &amp; (x - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>把這一坨背過就好了</p>
<figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//位運算模板庫</span></span><br><span class="line"><span class="comment">//7個標準函數</span></span><br><span class="line"><span class="comment">// 安全左移</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">SLM</span>            <span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> n)</span>        </span>&#123; <span class="keyword">return</span> (n &gt;= <span class="number">32</span>) ? <span class="number">0</span> : n &lt; <span class="number">0</span> ? <span class="built_in">SRM</span>(x, -n) : x &lt;&lt; n; &#125;</span><br><span class="line"><span class="comment">// 安全右移</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">SRM</span>            <span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> n)</span>        </span>&#123; <span class="keyword">return</span> (n &gt;= <span class="number">32</span>) ? <span class="number">0</span> : n &lt; <span class="number">0</span> ? <span class="built_in">SLM</span>(x, -n) : x &gt;&gt; n; &#125;</span><br><span class="line"><span class="comment">// 把從p開始的n位設置成1</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">set_bits</span>       <span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> p, <span class="keyword">int</span> n)</span> </span>&#123; <span class="keyword">return</span> x | <span class="built_in">SLM</span>(~<span class="built_in">SLM</span>(~<span class="number">0</span>, n), p + <span class="number">1</span> - n); &#125;</span><br><span class="line"><span class="comment">// 獲取從p開始的n位</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">get_bits</span>       <span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> p, <span class="keyword">int</span> n)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">SRM</span>(x, p + <span class="number">1</span> - n) &amp; (~<span class="built_in">SLM</span>(~<span class="number">0</span>, n)); &#125;</span><br><span class="line"><span class="comment">// 把從p開始的n位設置成0</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">unset_bits</span>     <span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> p, <span class="keyword">int</span> n)</span> </span>&#123; <span class="keyword">return</span> x &amp; ~(<span class="built_in">set_bits</span>(<span class="number">0</span>, p, n)); &#125;</span><br><span class="line"><span class="comment">// 反轉從p開始的n位</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">reverse_bits</span>   <span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> p, <span class="keyword">int</span> n)</span> </span>&#123; <span class="keyword">return</span> x ^ <span class="built_in">set_bits</span>(<span class="number">0</span>, p, n); &#125;</span><br><span class="line"><span class="comment">// 把最後一個0刪掉</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">delete_last_0</span>  <span class="params">(<span class="keyword">unsigned</span> x)</span>               </span>&#123; <span class="keyword">return</span> x &amp; (x - <span class="number">1</span>); &#125;</span><br></pre></td></tr></table></figure>
<h2 id="A-few-Simple-Instances"><a href="#A-few-Simple-Instances" class="headerlink" title="A few Simple Instances"></a>A few Simple Instances</h2><h3 id="Actual-Problem-2-6-4"><a href="#Actual-Problem-2-6-4" class="headerlink" title="Actual Problem 2-6-4"></a>Actual Problem 2-6-4</h3><blockquote>
<p>Write a function setbits(x,p,n,y) that returns x with the n bits that begin at position p(count from left to right, p, p-1…p+1-n, make sue p+1-n&gt;=0) set to the rightmost n bits of y, leaving the other bits unchanged. We make sure that x∈[0,2^​32−1] and y∈[0,2^32−1]. Note that 0 &lt;= n &amp;&amp; n &lt;= 32 due to unsigned is 32-bit type.</p>
</blockquote>
<p>題目拆分:<br>把x從p開始的n位清空<br>獲取y從n-1開始的n位，並挪到(p+1-n)的位置上<br>啪的一下就寫出來了啊，很快啊</p>
<figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">setbits</span><span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">unsigned</span> y, <span class="keyword">int</span> p, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">unset_bits</span>(x, p, n) | (<span class="built_in">get_bits</span>(y, n - <span class="number">1</span>, n) &lt;&lt; (p + <span class="number">1</span> - n));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Actual-Problem-2-6-5"><a href="#Actual-Problem-2-6-5" class="headerlink" title="Actual Problem 2-6-5"></a>Actual Problem 2-6-5</h3><blockquote>
<p>Write a function invert(x,p,n) that returns x with the n bits that begin at position p inverted (i.e., 1 changed into 0 and vice versa), leaving the others unchanged.</p>
</blockquote>
<p>題目拆分:<br>模板<br>啪的一下就寫出來了啊，很快啊</p>
<figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">invert</span><span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> pos, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">reverse_bits</span>(x, pos, n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>筆者在提交此題的時候發現，這個題目的左移操作，視溢出為正常現象，所以補充兩個不安全的SRM和SLM，如果你不能通過題目，請嘗試換這兩個函數</p>
<figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">SLM</span><span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &lt;&lt; n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">SRM</span><span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt;&gt; n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Actual-Problem-2-6-6"><a href="#Actual-Problem-2-6-6" class="headerlink" title="Actual Problem 2-6-6"></a>Actual Problem 2-6-6</h3><blockquote>
<p>Write a function rightrot(x,n) that returns the value of the integer x rotated to the right by n positions.</p>
</blockquote>
<p>題目拆分:<br>獲取x從n-1開始的n位，並挪到32-n的位置上<br>獲取x從31開始的32-n位<br>啪的一下就寫出來了啊，很快啊</p>
<figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">rightrot</span><span class="params">(<span class="keyword">unsigned</span> x, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n %= <span class="number">32</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">get_bits</span>(x, n - <span class="number">1</span>, n) &lt;&lt; (<span class="number">32</span> - n)) | <span class="built_in">get_bits</span>(x, <span class="number">31</span>, <span class="number">32</span> - n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Simple-Problem-IV"><a href="#Simple-Problem-IV" class="headerlink" title="Simple Problem IV"></a>Simple Problem IV</h3><blockquote><p>給出兩個32位的整數N和M，以及兩個二進制位的位置i和j。寫一個方法來使得N中的第i到j位等於M（M會是N中從第i為開始到第j位的子串</p>
<footer><strong>Lintcode</strong><cite><a href="https://www.lintcode.com/problem/179/">179 - Update Bits</a></cite></footer></blockquote>
<p>唯一需要注意的就是這個題關於二進制位數的定義和PTA不大一樣<br>啪的一下就寫出來了啊，很快啊</p>
<figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateBits</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">unset_bits</span>(n,j,j-i+<span class="number">1</span>)|(m&lt;&lt;i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Simple-Problem-V"><a href="#Simple-Problem-V" class="headerlink" title="Simple Problem V"></a>Simple Problem V</h3><blockquote><p>用 O(1) 時間檢測整數 n 是否是 2 的冪次。</p>
<footer><strong>Lintcode</strong><cite><a href="https://www.lintcode.com/problem/142/">142 - O(1) Check Power of 2</a></cite></footer></blockquote>
<p>啪的一下就寫出來了啊，很快啊</p>
<figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">checkPowerOf2</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (n&gt;<span class="number">0</span>)&amp;&amp;(<span class="built_in">delete_last_0</span>(n)==<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Simple-Problem-VI"><a href="#Simple-Problem-VI" class="headerlink" title="Simple Problem VI"></a>Simple Problem VI</h3><blockquote><p>計算在一個 32 位的整數的二進製表示中有多少個 1。</p>
<footer><strong>Lintcode</strong><cite><a href="https://www.lintcode.com/problem/365/">365 - Count 1 in Binary</a></cite></footer></blockquote>
<p>啪的一下就寫出來了啊，很快啊</p>
<figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">countOnes</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(num)++ans,num=<span class="built_in">delete_last_0</span>(num);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Simple-Problem-VII"><a href="#Simple-Problem-VII" class="headerlink" title="Simple Problem VII"></a>Simple Problem VII</h3><blockquote><p>如果要將整數n轉換為m，需要改變多少個bit位？</p>
<footer><strong>Lintcode</strong><cite><a href="https://www.lintcode.com/problem/181/">181 - Flip Bits</a></cite></footer></blockquote>
<p>首先異或，AB不一樣的位就變成1了，然後統計1的個數<br>啪的一下就寫出來了啊，很快啊</p>
<figure class="highlight cpp"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">countOnes</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(num)++ans,num=<span class="built_in">delete_last_0</span>(num);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bitSwapRequired</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">countOnes</span>(a^b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Authorization"><a href="#Authorization" class="headerlink" title="Authorization"></a>Authorization</h2><p><img src="/next-nest/2022/01/08/bitwise-huoxingdawang/auth.jpeg" alt></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <code>火星大王</code>的蒟蒻雲文章 <a href="http://www.juruoyun.top/jry_wb/jry_wb_blog/jry_wb_blog_show.php?blog_id=18">擅長位運算的王大同學</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>一點簡短的convlstm筆記</title>
    <url>/next-nest/2022/01/15/brief-convlstm/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>如題，是一份<code>slides</code>。<br>等有空整理出來。</p>
<p><a href="czk-convlstm.pptx"><code>Download</code></a></p>
<p><del>其實真寫出來感覺學過的人不用看，給沒學過的人看也沒講清楚。</del></p>
<span id="more"></span>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><code>ConvLSTM</code><sup><a href="#fn_1" id="reffn_1">1</a></sup>是由 Xingjian Shi 博士提出的深度學習模型。其定義是遞進的，為了說明什麼是<code>ConvLSTM</code>，筆者將會先後淺談以下幾個模型：</p>
<ul>
<li><code>FC</code> (Full Connection, 全連接層)</li>
<li><code>RNN</code> (Recurrent Neural Network, 循環神經網絡)</li>
<li><code>LSTM</code> (Long-Short Term Memory, 長短期記憶網絡)</li>
<li><code>ConvLSTM</code></li>
</ul>
<p>但之所以要從<code>FC</code>倒著講回<code>ConvLSTM</code>，原因在於：<br><code>ConvLSTM</code>是<code>LSTM</code>中使用卷積運算代替矩陣乘法的模型，<br><code>LSTM</code>是<code>RNN</code>中引入「細胞狀態」的模型，<br><code>RNN</code>是<code>FC</code>對時間序列特化形成的模型，<br>而<code>FC</code>是神經網絡的基礎結構。</p>
<h2 id="FC"><a href="#FC" class="headerlink" title="FC"></a>FC</h2><p><code>FC</code>的全稱為 Full Connection ，是意為全連接層的結構。<br>最為早期的神經網絡是輸入、輸出矢量，矢量中的每一個分量在網絡中根據不同的加權，進行線性組合形成新的矢量。</p>
<p><img src="/next-nest/2022/01/15/brief-convlstm/fc.jpeg" alt></p>
<p>以上圖為例，當我們輸入矢量 $x = (x_1, x_2, \cdots, x_n )^\mathrm{T}$ 之後，矢量<code>x</code>會經過如下變換：</p>
<script type="math/tex; mode=display">\left \{
\begin{aligned}
a_1 & = & w_{1,1}x_1 & + & w_{1,2}x_2 & + & \cdots & + & w_{1,n}x_n, \\
a_2 & = & w_{2,1}x_1 & + & w_{2,2}x_2 & + & \cdots & + & w_{2,n}x_n, \\
    &   &            &   &            &   & \vdots &   &             \\
a_m & = & w_{m,1}x_1 & + & w_{m,2}x_2 & + & \cdots & + & w_{m,n}x_n
\end{aligned}
\right.</script><p>亦即：</p>
<script type="math/tex; mode=display">a_k = w_{k,1}x_1 + w_{k,2}x_2 + \cdots + w_{k,n}x_n = \sum_{l=1}^n w_{k,l}x_l , (k = 1, 2, \cdots , m)</script><p>上式可以表示為矩陣乘法：</p>
<script type="math/tex; mode=display">\vec{a} = W\vec{x}</script><p>在上圖中對應著的超參數 <code>m=500, n=800</code> ，分別為輸出節點數（矢量維數）與輸入節點數（矢量維數），亦是權重矩陣<code>W</code>的尺寸。<br>但全連接層在使用時除了權重矩陣<code>W</code>外，也會常常結合偏置矢量(bias)<code>b</code>與激勵函數<sup><a href="#fn_2" id="reffn_2">2</a></sup>(activation)<code>f</code>使用，此時真正的輸出為：</p>
<script type="math/tex; mode=display">\vec{a} = \psi(W\vec{x} + \vec{b})</script><p>關於偏置矢量與激勵函數，筆者在此暫不贅述。</p>
<h2 id="RNN"><a href="#RNN" class="headerlink" title="RNN"></a>RNN</h2><p>在考慮何為<code>LSTM</code>之前讓我們先明確一下<code>RNN</code>。<br>眾所周知<code>RNN</code>是一種機器學習模型，用於處理時間序列，這裡的時間順序不僅可以是傳統意義上的時間順序，也可以認為是藉由因果關係串聯而成的事情發展順序。</p>
<blockquote>
<p>例如「隨著某課程章節推進，每一章作業量所組成的序列」，在此選取的每個元素即「每一章節的作業量」所對應的時間間隔並不均勻（課程中講解重點的章節所花費的時間遠比一般的章節要長），所以此處的「時間」為課程中章節的推進而非傳統的年月日時分秒等…</p>
</blockquote>
<p>而<code>RNN</code>是為了方便處理時間序列而對<code>FC</code>進行優化後的機器學習模型，其引入了一個非常重要的「時間」維度，並以一個單獨的矢量存儲每一時刻的狀態。</p>
<p><img src="/next-nest/2022/01/15/brief-convlstm/rnn.jpeg" alt></p>
<p>剛才提到全連接層的實質就是矩陣乘法，那麼從上圖我們可以看到權重矩陣 <code>U, W, V</code> 形成了三個以全連接層為<strong>基礎</strong>的結構。</p>
<p>現在我們來解釋為什麼<code>RNN</code>是<code>FC</code>對時間序列的「特化」：</p>
<script type="math/tex; mode=display">\left \{
\begin{aligned}
\vec{o_t} & = g(V\vec{s_t}), \\
\vec{s_t} & = f(U\vec{x_t} + W\vec{s_{t-1}})
\end{aligned}
\right.</script><p>我們可以看到比起<code>FC</code>，<code>RNN</code>在中間插入了一個隱藏層，其對應著矢量 $\vec{s_t}$ ， $\vec{s_t}$ 同時受 $\vec{s_{t-1}}$ 與 $\vec{x_t}$ 的影響，這便是隨著<code>t</code>不斷變化，這便是用於存儲「時間」狀態的變量。</p>
<p>同時我們可以看出，<code>FC</code>輸入時接收的是一個矢量 $\vec{x}$ ，而<code>RNN</code>輸入的時候接收的是多個矢量組成的序列 $\vec{x_1}, \vec{x_2}, \cdots, \vec{x_T}$ 。</p>
<p>根據前面講過的式子，對於每一個時刻<code>t</code>，都會根據 $\vec{s_t}$ 產生相應的 $\vec{o_t}$ ，這也對應著每一個時刻相應的輸入 $\vec{x_t}$ 。</p>
<p>如何理解？</p>
<ul>
<li><p>我們先來看一例由Keras實現的<code>FC</code>：</p>
  <figure class="highlight py"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> keras</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>model = keras.Sequential([</span><br><span class="line">    keras.layers.Dense(</span><br><span class="line">        units = <span class="number">128</span>,</span><br><span class="line">        input_shape = (<span class="number">32</span>,),</span><br><span class="line">        ),</span><br><span class="line">    ])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>model.summary()</span><br></pre></td></tr></table></figure>
<p>  通過調用<code>.summary()</code>查看其結構：</p>
  <figure class="highlight py"><table><tr><td class="code"><pre><span class="line">_________________________________________________________________</span><br><span class="line">Layer (<span class="built_in">type</span>)                 Output Shape              Param <span class="comment">#</span></span><br><span class="line">=================================================================</span><br><span class="line">dense_1 (Dense)              (<span class="literal">None</span>, <span class="number">128</span>)               <span class="number">4224</span></span><br><span class="line">=================================================================</span><br><span class="line">Total params: <span class="number">4</span>,<span class="number">224</span></span><br><span class="line">Trainable params: <span class="number">4</span>,<span class="number">224</span></span><br><span class="line">Non-trainable params: <span class="number">0</span></span><br><span class="line">_________________________________________________________________</span><br></pre></td></tr></table></figure>
</li>
<li><p>再看一例由Keras實現的SimpleRNN</p>
  <figure class="highlight py"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> keras</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>model = keras.Sequential([</span><br><span class="line">    keras.layers.Embedding(<span class="number">10000</span>, <span class="number">32</span>),</span><br><span class="line">    keras.layers.SimpleRNN(</span><br><span class="line">        units = <span class="number">128</span>,</span><br><span class="line">        return_sequences = <span class="literal">True</span>,</span><br><span class="line">        ),</span><br><span class="line">    ])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>model.summary()</span><br></pre></td></tr></table></figure>
<p>  通過調用<code>.summary()</code>查看其結構：</p>
  <figure class="highlight py"><table><tr><td class="code"><pre><span class="line">_________________________________________________________________</span><br><span class="line">Layer (<span class="built_in">type</span>)                 Output Shape              Param <span class="comment">#</span></span><br><span class="line">=================================================================</span><br><span class="line">embedding_1 (Embedding)      (<span class="literal">None</span>, <span class="literal">None</span>, <span class="number">32</span>)          <span class="number">320000</span></span><br><span class="line">_________________________________________________________________</span><br><span class="line">simple_rnn_1 (SimpleRNN)     (<span class="literal">None</span>, <span class="literal">None</span>, <span class="number">128</span>)         <span class="number">20608</span></span><br><span class="line">=================================================================</span><br><span class="line">Total params: <span class="number">340</span>,<span class="number">608</span></span><br><span class="line">Trainable params: <span class="number">340</span>,<span class="number">608</span></span><br><span class="line">Non-trainable params: <span class="number">0</span></span><br><span class="line">_________________________________________________________________</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>相比於<code>FC</code>的輸出形狀<code>(None, 128)</code>，<code>RNN</code>的輸出形狀<code>(None, None, 128)</code>中間多了一個<code>None</code>分量，代表著每次<code>RNN</code>不像<code>FC</code>一樣只輸出一個矢量，其輸出的也是一個矢量序列，且該矢量序列的長度可以不固定。</p>
<p>所以我們可以看出，不同於對輸入的一個矢量進行處理的<code>FC</code>，<code>RNN</code>是對輸入的一個矢量序列進行處理的模型，其中存在著以（隨時間變化）矢量 $\vec{s_t}$ 用於存儲模型隨時間的狀態改變，這是<code>RNN</code>能夠處理時間序列的結構基礎。</p>
<p>雖然<code>RNN</code>輸入的是一個矢量序列，但如若只需要最後時刻的結果，其輸出的也可以只是輸出的矢量序列中最後一個，相當於捨棄了前面的 $\vec{o_1}, \vec{o_2}, \cdots, \vec{o_{T-1}}$ 從而只保留 $\vec{o_T}$ 一個矢量。</p>
<p>Keras也可以實現只返回最後一個輸出向量的<code>RNN</code>：</p>
<figure class="highlight py"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> keras</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>model = keras.Sequential([</span><br><span class="line">    keras.layers.Embedding(<span class="number">10000</span>, <span class="number">32</span>),</span><br><span class="line">    keras.layers.SimpleRNN(</span><br><span class="line">        units = <span class="number">128</span>,</span><br><span class="line">        return_sequences = <span class="literal">False</span>,</span><br><span class="line">        ),</span><br><span class="line">    ])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>model.summary()</span><br></pre></td></tr></table></figure>
<p>通過調用<code>.summary()</code>查看其結構：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">_________________________________________________________________</span><br><span class="line">Layer (<span class="built_in">type</span>)                 Output Shape              Param <span class="comment">#</span></span><br><span class="line">=================================================================</span><br><span class="line">embedding_2 (Embedding)      (<span class="literal">None</span>, <span class="literal">None</span>, <span class="number">32</span>)          <span class="number">320000</span></span><br><span class="line">_________________________________________________________________</span><br><span class="line">simple_rnn_2 (SimpleRNN)     (<span class="literal">None</span>, <span class="number">128</span>)               <span class="number">20608</span></span><br><span class="line">=================================================================</span><br><span class="line">Total params: <span class="number">340</span>,<span class="number">608</span></span><br><span class="line">Trainable params: <span class="number">340</span>,<span class="number">608</span></span><br><span class="line">Non-trainable params: <span class="number">0</span></span><br><span class="line">_________________________________________________________________</span><br></pre></td></tr></table></figure>
<h2 id="LSTM"><a href="#LSTM" class="headerlink" title="LSTM"></a>LSTM</h2><p>LSTM的誕生來源於在表示時間狀態的向量 $\vec{h_t}$ 不斷變化時，輸入時刻靠前的輸入向量的特徵較早吸收，但會被後來者「沖淡」。<br>為了解決這一問題，保證靠前的輸入向量的特徵也能較好地吸收，<code>LSTM</code>應運而生。</p>
<p><img src="/next-nest/2022/01/15/brief-convlstm/lstm-01.jpeg" alt></p>
<p>解決的方式很簡單， $\vec{h_t}$ 是一個不斷接收上一時刻 $\vec{h_{t-1}}$ 與此時刻輸入向量 $\vec{x_t}$ 的狀態向量，那麼我們引入一個與之不同，只隨著上一時刻的 $\vec{c_{t-1}}$ 變化、不<strong>直接</strong>接收此時的輸入向量 $\vec{x_t}$ 的另一個狀態向量 $\vec{c_t}$ 即可。</p>
<p><img src="/next-nest/2022/01/15/brief-convlstm/lstm-02.jpeg" alt></p>
<p>從圖中我們可以看到 $\vec{c_t}$ 為 $\vec{c_{t-1}}$ 吸取經過處理的 $\vec{h_{t-1}}$ 與 $\vec{x_t}$ 的特徵而不斷迭代的狀態向量，而 $\vec{h_t}$ 的每一次迭代為根據 $\vec{h_{t-1}}$ 與 $\vec{x_t}$ 的重構，其迭代過程遠比 $\vec{c_t}$ 的要復雜，因此變化也比 $\vec{c_t}$ 要劇烈，變化更快。<br>不同於 $\vec{c_t}$ 變化緩慢，帶有的記憶更長， $\vec{h_t}$ 所帶有的記憶更短，變化更快。<br>這是<code>LSTM</code>能夠同時記住近期與早期輸入數據特徵，使靠前的輸入向量的特徵也能較好吸收的關鍵結構。</p>
<p><img src="/next-nest/2022/01/15/brief-convlstm/lstm-03.jpeg" alt></p>
<p>整理一下：</p>
<ul>
<li>$\vec{h_t}$ 的變化所受因素更多，迭代程度更劇烈、迭代速度更快，構成<code>LSTM</code>的短期記憶；</li>
<li>$\vec{c_t}$ 的變化所受因素較少，迭代程度不明顯、迭代速度更慢，構成<code>LSTM</code>的長期記憶。</li>
</ul>
<p>所以這個模型被稱為 <strong>L</strong>ong-<strong>S</strong>hort <strong>T</strong>erm <strong>M</strong>emory ，長短期記憶網絡。</p>
<h2 id="ConvLSTM"><a href="#ConvLSTM" class="headerlink" title="ConvLSTM"></a>ConvLSTM</h2><p>在進入LSTM之前，我們先看一看卷積(Convolution)，一種特殊的矩陣間乘法運算。<br>雖然說是乘法運算，但對於參與卷積運算的兩個矩陣，其兩者位置不能隨意交換。<br>因為卷積運算可以視為由尺寸較小的一個矩陣在尺寸較大的矩陣上「取樣」，把不同位置取到的結果根據相對位置關係排列為新的矩陣。<br>我們看如下的動圖簡單理解一下：</p>
<p><img src="/next-nest/2022/01/15/brief-convlstm/conv.gif" alt></p>
<p>當我們的輸入為向量序列的時候，每一時刻輸入模型的是該時刻的向量，在進行乘法的時候直接使用矩陣乘法即可，但是矩陣乘法的實質（於右位而言）是對矩陣中不同列的線性變換與組合，無法提取不同行之間的相關特徵，因此在輸入為矩陣序列而非向量序列的時候，我們使用卷積替代傳統的矩陣乘法。</p>
<p><img src="/next-nest/2022/01/15/brief-convlstm/convlstm.jpeg" alt></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. X. Shi, Z. Chen, H. Wang, D.-Y. Yeung, W.-K. Wong, and W.-C. Woo, “Convolutional LSTM Network: A Machine Learning Approach for Precipitation Nowcasting”, 2015, <a href="https://arxiv.org/abs/1506.04214v2">arXiv: <code>1506.04214</code></a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. 百度百科詞條 <a href="https://baike.baidu.com/item/激活函数/2520792">激活函數</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>Highlight!</title>
    <url>/next-nest/2021/10/24/code-highlight/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>To make sure that all the code blocks highlighted correctly. Most of the code samples are come from the demo of <a href="https://highlightjs.org/">https://highlightjs.org/</a> …</p>
<figure class="highlight plaintext"><figcaption><span>Sharing the World</span></figcaption><table><tr><td class="code"><pre><span class="line">Sharing our World</span><br><span class="line">Sharing our World</span><br><span class="line">I can see this future is right now</span><br><span class="line">Cause my voice is always going around</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#x27;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</span><br></pre></td></tr></table></figure>
<h2 id="Diff"><a href="#Diff" class="headerlink" title="Diff"></a>Diff</h2><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="comment">Index: languages/ini.js</span></span><br><span class="line"><span class="comment">===================================================================</span></span><br><span class="line"><span class="comment">--- languages/ini.js    (revision 199)</span></span><br><span class="line"><span class="comment">+++ languages/ini.js    (revision 200)</span></span><br><span class="line"><span class="meta">@@ -1,8 +1,7 @@</span></span><br><span class="line"> hljs.LANGUAGES.ini =</span><br><span class="line"> &#123;</span><br><span class="line">   case_insensitive: true,</span><br><span class="line"><span class="deletion">-  defaultMode:</span></span><br><span class="line"><span class="deletion">-  &#123;</span></span><br><span class="line"><span class="addition">+  defaultMode: &#123;</span></span><br><span class="line">     contains: [&#x27;comment&#x27;, &#x27;title&#x27;, &#x27;setting&#x27;],</span><br><span class="line">     illegal: &#x27;[^\\s]&#x27;</span><br><span class="line">   &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">*** /path/to/original timestamp</span></span><br><span class="line"><span class="comment">--- /path/to/new      timestamp</span></span><br><span class="line"><span class="comment">***************</span></span><br><span class="line"><span class="meta">*** 1,3 ****</span></span><br><span class="line"><span class="meta">--- 1,9 ----</span></span><br><span class="line"><span class="addition">+ This is an important</span></span><br><span class="line"><span class="addition">+ notice! It should</span></span><br><span class="line"><span class="addition">+ therefore be located at</span></span><br><span class="line"><span class="addition">+ the beginning of this</span></span><br><span class="line"><span class="addition">+ document!</span></span><br><span class="line"></span><br><span class="line"><span class="addition">! compress the size of the</span></span><br><span class="line"><span class="addition">! changes.</span></span><br><span class="line"></span><br><span class="line">  It is important to spell</span><br></pre></td></tr></table></figure>
<h2 id="Rust"><a href="#Rust" class="headerlink" title="Rust"></a>Rust</h2><figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="meta">#[derive(Debug)]</span></span><br><span class="line"><span class="keyword">pub</span> <span class="class"><span class="keyword">enum</span> <span class="title">State</span></span> &#123;</span><br><span class="line">    Start,</span><br><span class="line">    Transient,</span><br><span class="line">    Closed,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="built_in">From</span>&lt;&amp;<span class="symbol">&#x27;a</span> <span class="built_in">str</span>&gt; <span class="keyword">for</span> State &#123;</span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">from</span></span>(s: &amp;<span class="symbol">&#x27;a</span> <span class="built_in">str</span>) -&gt; <span class="keyword">Self</span> &#123;</span><br><span class="line">        <span class="keyword">match</span> s &#123;</span><br><span class="line">            <span class="string">&quot;start&quot;</span> =&gt; State::Start,</span><br><span class="line">            <span class="string">&quot;closed&quot;</span> =&gt; State::Closed,</span><br><span class="line">            _ =&gt; <span class="built_in">unreachable!</span>(),</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;apples&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;count&quot;</span>: [<span class="number">12000</span>, <span class="number">20000</span>],</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: &#123;<span class="attr">&quot;text&quot;</span>: <span class="string">&quot;...&quot;</span>, <span class="attr">&quot;sensitive&quot;</span>: <span class="literal">false</span>&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;oranges&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;count&quot;</span>: [<span class="number">17500</span>, <span class="literal">null</span>],</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: &#123;<span class="attr">&quot;text&quot;</span>: <span class="string">&quot;...&quot;</span>, <span class="attr">&quot;sensitive&quot;</span>: <span class="literal">false</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span>(<span class="params">param1=<span class="string">&#x27;&#x27;</span>, param2=<span class="number">0</span></span>):</span></span><br><span class="line">    <span class="string">r&#x27;&#x27;&#x27;A docstring&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Gre\&#x27;ater&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span> + <span class="number">0b10l</span>) <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">&#x27;&#x27;&#x27;interpreter</span></span><br><span class="line"><span class="string"><span class="meta">... </span>prompt&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="CNN-Training-with-Keras"><a href="#CNN-Training-with-Keras" class="headerlink" title="CNN-Training with Keras"></a>CNN-Training with Keras</h3><figure class="highlight py"><figcaption><span>Python</span><a href="https://github.com/keras-team/keras/blob/2.1.6/examples/mnist_cnn.py">MNIST_CNN</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;Trains a simple convnet on the MNIST dataset.</span></span><br><span class="line"><span class="string">Gets to 99.25% test accuracy after 12 epochs</span></span><br><span class="line"><span class="string">(there is still a lot of margin for parameter tuning).</span></span><br><span class="line"><span class="string">16 seconds per epoch on a GRID K520 GPU.</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> scipy, sympy</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl, matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">mpl.style.use(<span class="string">&quot;solarized-light&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> keras</span><br><span class="line"><span class="keyword">from</span> keras <span class="keyword">import</span> backend <span class="keyword">as</span> T</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Constants</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    BATCH_SIZE = <span class="number">128</span></span><br><span class="line">    NUM_CLASSES = <span class="number">10</span></span><br><span class="line">    NUM_EPOCHES = <span class="number">12</span></span><br><span class="line">    INPUT_IMG = &#123;</span><br><span class="line">        <span class="string">&quot;DIM_ROWS&quot;</span>: <span class="number">28</span>, <span class="comment"># input image dimensions</span></span><br><span class="line">        <span class="string">&quot;DIM_COLS&quot;</span>: <span class="number">28</span>,</span><br><span class="line">        <span class="string">&quot;SHAPE&quot;</span>: (<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>) <span class="keyword">if</span> T.image_data_format() == <span class="string">&quot;channels_first&quot;</span> <span class="keyword">else</span> (<span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ImgData</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, src</span>):</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># the data, split between train and test sets</span></span><br><span class="line">        self.__xtrain = src[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line">        self.__ytrain = keras.utils.to_categorical(src[<span class="number">0</span>][<span class="number">1</span>], Constants.NUM_CLASSES)    <span class="comment"># convert class vectors to binary class matrices</span></span><br><span class="line">        self.__xtest = src[<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">        self.__ytest = keras.utils.to_categorical(src[<span class="number">1</span>][<span class="number">1</span>], Constants.NUM_CLASSES)     <span class="comment"># 把标签处理成 one-hot 型数据</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 考虑到Theano和TensorFlow两个框架的数据结构不同, 于此需要根据不同的后端调整数据维度顺序</span></span><br><span class="line">        <span class="keyword">if</span> T.image_data_format() == <span class="string">&quot;channels_first&quot;</span>:</span><br><span class="line">            self.__xtrain = self.__xtrain.reshape(</span><br><span class="line">                self.__xtrain.shape[<span class="number">0</span>],</span><br><span class="line">                <span class="number">1</span>,</span><br><span class="line">                Constants.INPUT_IMG[<span class="string">&quot;DIM_ROWS&quot;</span>],</span><br><span class="line">                Constants.INPUT_IMG[<span class="string">&quot;DIM_COLS&quot;</span>],</span><br><span class="line">            ).astype(<span class="string">&quot;float32&quot;</span>) / <span class="number">255</span></span><br><span class="line">            self.__xtest = self.__xtest.reshape(</span><br><span class="line">                self.__xtest.shape[<span class="number">0</span>],</span><br><span class="line">                <span class="number">1</span>,</span><br><span class="line">                Constants.INPUT_IMG[<span class="string">&quot;DIM_ROWS&quot;</span>],</span><br><span class="line">                Constants.INPUT_IMG[<span class="string">&quot;DIM_COLS&quot;</span>],</span><br><span class="line">            ).astype(<span class="string">&quot;float32&quot;</span>) / <span class="number">255</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.__xtrain = self.__xtrain.reshape(</span><br><span class="line">                self.__xtrain.shape[<span class="number">0</span>],</span><br><span class="line">                Constants.INPUT_IMG[<span class="string">&quot;DIM_ROWS&quot;</span>],</span><br><span class="line">                Constants.INPUT_IMG[<span class="string">&quot;DIM_COLS&quot;</span>],</span><br><span class="line">                <span class="number">1</span>,</span><br><span class="line">            ).astype(<span class="string">&quot;float32&quot;</span>) / <span class="number">255</span></span><br><span class="line">            self.__xtest = self.__xtest.reshape(</span><br><span class="line">                self.__xtest.shape[<span class="number">0</span>],</span><br><span class="line">                Constants.INPUT_IMG[<span class="string">&quot;DIM_ROWS&quot;</span>],</span><br><span class="line">                Constants.INPUT_IMG[<span class="string">&quot;DIM_COLS&quot;</span>],</span><br><span class="line">                <span class="number">1</span>,</span><br><span class="line">            ).astype(<span class="string">&quot;float32&quot;</span>) / <span class="number">255</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">log_datashape</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;X Shape: %s&quot;</span> % self.__xtrain.shape[ <span class="number">1</span> : ])</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Training on %s Data, Validating on %s.&quot;</span> % (self.__xtrain.shape[<span class="number">0</span>], self.__xtest.shape[<span class="number">0</span>]))</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">xtrain</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__xtrain</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ytrain</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__ytrain</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">xtest</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__xtest</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ytest</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__ytest</span><br><span class="line"></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line">    data = ImgData(keras.datasets.mnist.load_data())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建一个 Sequential 模型, 并把所有涉及的计算层按顺序投入其中</span></span><br><span class="line">    seq = keras.models.Sequential(layers = [</span><br><span class="line">        keras.layers.convolutional.Conv2D(</span><br><span class="line">            <span class="number">32</span>,</span><br><span class="line">            kernel_size = (<span class="number">3</span>, <span class="number">3</span>),</span><br><span class="line">            activation = <span class="string">&quot;relu&quot;</span>,</span><br><span class="line">            input_shape = Constants.INPUT_IMG[<span class="string">&quot;SHAPE&quot;</span>]</span><br><span class="line">        ),</span><br><span class="line">        keras.layers.convolutional.Conv2D(<span class="number">64</span>, (<span class="number">3</span>, <span class="number">3</span>), activation=<span class="string">&quot;relu&quot;</span>),</span><br><span class="line">        keras.layers.pooling.MaxPooling2D(pool_size=(<span class="number">2</span>, <span class="number">2</span>)),</span><br><span class="line">        keras.layers.core.Dropout(rate=<span class="number">0.25</span>),</span><br><span class="line">        keras.layers.core.Flatten(),</span><br><span class="line">        keras.layers.core.Dense(units=<span class="number">128</span>, activation=<span class="string">&quot;relu&quot;</span>),</span><br><span class="line">        keras.layers.core.Dropout(rate=<span class="number">0.5</span>),</span><br><span class="line">        keras.layers.core.Dense(units=Constants.NUM_CLASSES, activation=<span class="string">&quot;softmax&quot;</span>)</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 架构并编译模型, 同时声明模型计算的 loss(损失函数), optimizer(优化器), metric(评价算法)</span></span><br><span class="line">    seq.<span class="built_in">compile</span>(</span><br><span class="line">        loss=keras.losses.categorical_crossentropy,</span><br><span class="line">        optimizer=keras.optimizers.Adadelta(),</span><br><span class="line">        metrics=[<span class="string">&quot;accuracy&quot;</span>]</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 拟合数据, 训练模型</span></span><br><span class="line">    history = seq.fit(</span><br><span class="line">        x = data.xtrain,</span><br><span class="line">        y = data.ytrain,</span><br><span class="line">        batch_size = Constants.BATCH_SIZE,</span><br><span class="line">        epochs = Constants.NUM_EPOCHES,</span><br><span class="line">        verbose = <span class="number">1</span>,</span><br><span class="line">        validation_data = (data.xtest, data.ytest)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 评估模型</span></span><br><span class="line">    _<span class="built_in">eval</span> = seq.evaluate(x=data.xtest, y=data.ytest, verbose=<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Test Loss: %s&quot;</span> % _<span class="built_in">eval</span>[<span class="number">0</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Test Accuracy: %s&quot;</span> % _<span class="built_in">eval</span>[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">width</span>: <span class="number">500px</span>;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;application/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">$init</span>(<span class="params"></span>) </span>&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">checked</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span> <span class="attr">id</span>=<span class="string">&#x27;title&#x27;</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- here goes the rest of the page --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$initHighlight</span>(<span class="params">block, cls</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (cls.search(<span class="regexp">/\bno\-highlight\b/</span>) != -<span class="number">1</span>)</span><br><span class="line">      <span class="keyword">return</span> process(block, <span class="literal">true</span>, <span class="number">0x0F</span>) +</span><br><span class="line">             <span class="string">` class=&quot;<span class="subst">$&#123;cls&#125;</span>&quot;`</span>;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="comment">/* handle exception */</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> / <span class="number">2</span>; i &lt; classes.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (checkCondition(classes[i]) === <span class="literal">undefined</span>)</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&#x27;undefined&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">web-component</span>&gt;</span>&#123;block&#125;<span class="tag">&lt;/<span class="name">web-component</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> $initHighlight;</span><br></pre></td></tr></table></figure>
<h2 id="C-C"><a href="#C-C" class="headerlink" title="C/C++"></a>C/C++</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="number">0</span>; i &lt; <span class="number">0xFFFF</span>; i++)</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class="line">  <span class="keyword">char</span> c = <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class="line">  m[<span class="string">&quot;key&quot;</span>] = <span class="string">&quot;\\\\&quot;</span>; <span class="comment">// this is an error</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">-2e3</span> + <span class="number">12l</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Number-Theoretic-Transform"><a href="#Number-Theoretic-Transform" class="headerlink" title="Number Theoretic Transform"></a>Number Theoretic Transform</h3><figure class="highlight cpp"><figcaption><span>C/C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">NTT</span><span class="params">(<span class="keyword">int</span> *A, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; limit; ++i) <span class="keyword">if</span> (i &lt; r[i]) <span class="built_in">swap</span>(A[i], A[r[i]]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> mid = <span class="number">1</span>; mid &lt; limit; mid &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        ll Wn = <span class="built_in">poww</span>(type == <span class="number">1</span> ? G : Gi, mid &lt;&lt; <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> R = mid &lt;&lt; <span class="number">1</span>, j = <span class="number">0</span>; j &lt; limit; j += R) &#123;</span><br><span class="line">            ll w=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; mid; k++, w = <span class="built_in">mul</span>(Wn, w)) &#123;</span><br><span class="line">                <span class="keyword">int</span> x = A[j + k], y = A[j + mid + k];</span><br><span class="line">                A[j + k] = <span class="built_in">add</span>(x, y);</span><br><span class="line">                A[j + k + mid]=<span class="built_in">dec</span>(x, y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(type == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> Inv = <span class="built_in">poww</span>(limit, mod - <span class="number">2</span>), i = <span class="number">0</span>; i &lt; limit; ++i) &#123;</span><br><span class="line">            A[i] = <span class="built_in">mul</span>(A[i], Inv);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;                ********    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;               ************    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;               ####....#.    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;             #..###.....##....    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;             ###.......######              ###            ###    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;                ...........               #...#          #...#    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;               ##*#######                 #.#.#          #.#.#    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;            ####*******######             #.#.#          #.#.#    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;           ...#***.****.*###....          #...#          #...#    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;           ....**********##.....           ###            ###    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;           ....****    *****....    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;             ####        ####    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;           ######        ######    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;##############################################################    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;#...#......#.##...#......#.##...#......#.##------------------#    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;###########################################------------------#    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;#..#....#....##..#....#....##..#....#....#####################    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;##########################################    #----------#    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;#.....#......##.....#......##.....#......#    #----------#    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;##########################################    #----------#    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;#.#..#....#..##.#..#....#..##.#..#....#..#    #----------#    &quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;##########################################    ############    &quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;topic&quot; (</span><br><span class="line">    &quot;id&quot; serial <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    &quot;forum_id&quot; <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    &quot;subject&quot; <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &quot;topic&quot;</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> forum_id <span class="keyword">FOREIGN</span> KEY (&quot;forum_id&quot;)</span><br><span class="line"><span class="keyword">REFERENCES</span> &quot;forum&quot; (&quot;id&quot;);</span><br><span class="line"><span class="comment">-- Initials</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> &quot;topic&quot; (&quot;forum_id&quot;, &quot;subject&quot;)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">2</span>, <span class="string">&#x27;D&#x27;&#x27;artagnian&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="Objective-C"><a href="#Objective-C" class="headerlink" title="Objective-C"></a>Objective-C</h2><figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&quot;Dependency.h&quot;</span></span></span><br><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">WorldDataSource</span></span></span><br><span class="line"><span class="keyword">@optional</span></span><br><span class="line">- (<span class="built_in">NSString</span>*)worldName;</span><br><span class="line"><span class="keyword">@required</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)allowsToLive;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSString</span> *title;</span><br><span class="line">- (<span class="keyword">IBAction</span>) show;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> John Smith &lt;john.smith@example.com&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> l2f.gameserver.model;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">L2Char</span> <span class="keyword">extends</span> <span class="title">L2Object</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Short ERROR = <span class="number">0x0001</span>;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">moveTo</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span> </span>&#123;</span><br><span class="line">    _ai = <span class="keyword">null</span>;</span><br><span class="line">    log(<span class="string">&quot;Should not be called&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span> &gt; <span class="number">5</span>) &#123; <span class="comment">// wtf!?</span></span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h2><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">@objc</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span>: <span class="title">Entity</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> name: <span class="type">String</span>!</span><br><span class="line">  <span class="keyword">var</span> age:  <span class="type">Int</span>!</span><br><span class="line">  <span class="function"><span class="keyword">init</span>(<span class="params">name</span>: <span class="type">String</span>, <span class="params">age</span>: <span class="type">Int</span>)</span> &#123;</span><br><span class="line">    <span class="comment">/* <span class="comment">/* ... */</span> */</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// Return a descriptive string for this person</span></span><br><span class="line">  <span class="function"><span class="keyword">func</span> <span class="title">description</span>(<span class="params">offset</span>: <span class="type">Int</span> <span class="operator">=</span> <span class="number">0</span>)</span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;<span class="subst">\(name)</span> is <span class="subst">\(age <span class="operator">+</span> offset)</span> years old&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: Chunkfive; <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;Chunkfive.otf&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span>, <span class="selector-class">.usertext</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#F0F0F0</span>; <span class="attribute">background</span>: <span class="number">#600</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Chunkfive, sans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@import</span> url(print.css);</span><br><span class="line"><span class="keyword">@media</span> print &#123;</span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-attr">[href^=http]</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="built_in">attr</span>(href)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h2><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The Greeter class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Greeter</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">(name)</span></span></span><br><span class="line">    <span class="variable">@name</span> = name.capitalize</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">salute</span></span></span><br><span class="line">    puts <span class="string">&quot;Hello <span class="subst">#&#123;<span class="variable">@name</span>&#125;</span>!&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">g = Greeter.new(<span class="string">&quot;world&quot;</span>)</span><br><span class="line">g.salute</span><br></pre></td></tr></table></figure>
<h2 id="Makefile"><a href="#Makefile" class="headerlink" title="Makefile"></a>Makefile</h2><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Makefile</span></span><br><span class="line">BUILDDIR      = _build</span><br><span class="line">EXTRAS       ?= <span class="variable">$(BUILDDIR)</span>/extras</span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: main clean</span></span><br><span class="line"><span class="section">main:</span></span><br><span class="line">	@echo <span class="string">&quot;Building main facility...&quot;</span></span><br><span class="line">	build_main <span class="variable">$(BUILDDIR)</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">	rm -rf <span class="variable">$(BUILDDIR)</span>/*</span><br></pre></td></tr></table></figure>
<h2 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">float64</span>)</span><br><span class="line">    ch &lt;- <span class="number">1.0e10</span>    <span class="comment">// magic number</span></span><br><span class="line">    x, ok := &lt;- ch</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">`exitting now\`</span>)</span><br><span class="line">    <span class="keyword">go</span> <span class="built_in">println</span>(<span class="built_in">len</span>(<span class="string">&quot;hello world!&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">###### CONFIG</span></span><br><span class="line">ACCEPTED_HOSTS=<span class="string">&quot;/root/.hag_accepted.conf&quot;</span></span><br><span class="line">BE_VERBOSE=<span class="literal">false</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$UID</span>&quot;</span> -ne 0 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Superuser rights required&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="function"><span class="title">genApacheConf</span></span>()&#123;</span><br><span class="line">  <span class="built_in">echo</span> -e <span class="string">&quot;# Host <span class="variable">$&#123;HOME_DIR&#125;</span><span class="variable">$1</span>/<span class="variable">$2</span> :&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="TOML-also-INI"><a href="#TOML-also-INI" class="headerlink" title="TOML, also INI"></a>TOML, also INI</h2><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">; boilerplate</span></span><br><span class="line"><span class="section">[package]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;some_name&quot;</span></span><br><span class="line"><span class="attr">authors</span> = [<span class="string">&quot;Author&quot;</span>]</span><br><span class="line"><span class="attr">description</span> = <span class="string">&quot;This is \</span></span><br><span class="line"><span class="string">a description&quot;</span></span><br><span class="line"><span class="section">[[lib]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="variable">$&#123;NAME&#125;</span></span><br><span class="line"><span class="attr">default</span> = <span class="literal">True</span></span><br><span class="line"><span class="attr">auto</span> = <span class="literal">no</span></span><br><span class="line"><span class="attr">counter</span> = <span class="number">1_000</span></span><br></pre></td></tr></table></figure>
<h2 id="R"><a href="#R" class="headerlink" title="R"></a>R</h2><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library(ggplot2)</span><br><span class="line"></span><br><span class="line">centre &lt;- <span class="keyword">function</span>(x, type, ...) &#123;</span><br><span class="line">  <span class="built_in">switch</span>(type,</span><br><span class="line">         mean = mean(x),</span><br><span class="line">         median = median(x),</span><br><span class="line">         trimmed = mean(x, trim = <span class="number">.1</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">myVar1</span><br><span class="line">myVar.2</span><br><span class="line">data$x</span><br><span class="line">foo <span class="string">&quot;bar&quot;</span> baz</span><br><span class="line"><span class="comment"># test &quot;test&quot;</span></span><br><span class="line"><span class="string">&quot;test # test&quot;</span></span><br><span class="line"></span><br><span class="line">(<span class="number">123</span>) (<span class="number">1</span>) (<span class="number">10</span>) (<span class="number">0.1</span>) (<span class="number">.2</span>) (<span class="number">1e-7</span>)</span><br><span class="line">(<span class="number">1.2e+7</span>) (<span class="number">2</span>e) (<span class="number">3e+10</span>) (<span class="number">0x0</span>) (<span class="number">0xa</span>)</span><br><span class="line">(<span class="number">0xabcdef1234567890</span>) (<span class="number">123L</span>) (<span class="number">1L</span>)</span><br><span class="line">(<span class="number">0x10L</span>) (<span class="number">10000000L</span>) (<span class="number">1e6L</span>) (<span class="number">1.1L</span>)</span><br><span class="line">(<span class="number">1e-3L</span>) (<span class="number">4123.381E-10i</span>)</span><br><span class="line">(<span class="number">3.</span>) (<span class="number">3.E10</span>) <span class="comment"># <span class="doctag">BUG:</span> .E10 should be part of number</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Numbers in some different contexts</span></span><br><span class="line"><span class="number">1L</span></span><br><span class="line"><span class="number">0x40</span></span><br><span class="line"><span class="number">.234</span></span><br><span class="line"><span class="number">3.</span></span><br><span class="line"><span class="number">1L</span> + <span class="number">30</span></span><br><span class="line">plot(cars, xlim=<span class="number">20</span>)</span><br><span class="line">plot(cars, xlim=<span class="number">0x20</span>)</span><br><span class="line">foo&lt;-<span class="number">30</span></span><br><span class="line">my.data.3 &lt;- read() <span class="comment"># not a number</span></span><br><span class="line"><span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="number">1</span>%%2</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;this is a quote that spans</span></span><br><span class="line"><span class="string">multiple lines</span></span><br><span class="line"><span class="string">\&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">is this still a quote? it should be.</span></span><br><span class="line"><span class="string"># even still!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> <span class="comment"># now we&#x27;re done.</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;same for</span></span><br><span class="line"><span class="string">single quotes #&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># keywords</span></span><br><span class="line"><span class="literal">NULL</span>, <span class="literal">NA</span>, <span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">Inf</span>, <span class="literal">NaN</span>, <span class="literal">NA_integer_</span>,</span><br><span class="line"><span class="literal">NA_real_</span>, <span class="literal">NA_character_</span>, <span class="literal">NA_complex_</span>, <span class="keyword">function</span>,</span><br><span class="line"><span class="keyword">while</span>, <span class="keyword">repeat</span>, <span class="keyword">for</span>, <span class="keyword">if</span>, <span class="keyword">in</span>, <span class="keyword">else</span>, <span class="keyword">next</span>, <span class="keyword">break</span>,</span><br><span class="line">..., ..1, ..2</span><br><span class="line"></span><br><span class="line"><span class="comment"># not keywords</span></span><br><span class="line">the quick brown fox jumped over the lazy dogs</span><br><span class="line">null na true false inf nan na_integer_ na_real_</span><br><span class="line">na_character_ na_complex_ Function While Repeat</span><br><span class="line">For If In Else Next Break .. .... <span class="string">&quot;NULL&quot;</span> `NULL` <span class="string">&#x27;NULL&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># operators</span></span><br><span class="line">+, -, *, /, %%, ^, &gt;, &gt;=, &lt;, &lt;=, ==, !=, !, &amp;, |, ~,</span><br><span class="line">-&gt;, &lt;-, &lt;&lt;-, $, :, ::</span><br><span class="line"></span><br><span class="line"><span class="comment"># infix operator</span></span><br><span class="line">foo %union% bar</span><br><span class="line">%&quot;test&quot;%</span><br><span class="line">`&quot;test&quot;`</span><br></pre></td></tr></table></figure>
<h2 id="Scilab"><a href="#Scilab" class="headerlink" title="Scilab"></a>Scilab</h2><figure class="highlight scilab"><table><tr><td class="code"><pre><span class="line"><span class="comment">// A comment</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">I</span> = <span class="title">foo</span><span class="params">(dims, varargin)</span></span></span><br><span class="line">  d=[<span class="number">1</span>; matrix(dims(<span class="number">1</span>:$<span class="number">-1</span>),<span class="number">-1</span>,<span class="number">1</span>)]</span><br><span class="line">  <span class="keyword">for</span> i=<span class="number">1</span>:<span class="built_in">size</span>(varargin)</span><br><span class="line">    <span class="keyword">if</span> varargin(i)==[] <span class="keyword">then</span></span><br><span class="line">       I=[],</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">endfunction</span></span><br><span class="line"></span><br><span class="line">b = <span class="built_in">cos</span>(a) + <span class="built_in">cosh</span>(a);</span><br><span class="line">bar_matrix = [ <span class="string">&quot;Hello&quot;</span>, <span class="string">&quot;world&quot;</span> ];</span><br><span class="line">foo_matrix = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>; <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br></pre></td></tr></table></figure>
<h2 id="Matlab"><a href="#Matlab" class="headerlink" title="Matlab"></a>Matlab</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">n = <span class="number">20</span>; <span class="comment">% number of points</span></span><br><span class="line">points = [random(<span class="string">&#x27;unid&#x27;</span>, <span class="number">100</span>, n, <span class="number">1</span>), random(<span class="string">&#x27;unid&#x27;</span>, <span class="number">100</span>, n, <span class="number">1</span>)];</span><br><span class="line">len = <span class="built_in">zeros</span>(<span class="number">1</span>, n - <span class="number">1</span>);</span><br><span class="line">points = <span class="built_in">sortrows</span>(points);</span><br><span class="line"><span class="comment">%% Initial set of points</span></span><br><span class="line"><span class="built_in">plot</span>(points(:,<span class="number">1</span>),points(:,<span class="number">2</span>));</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>: n<span class="number">-1</span></span><br><span class="line">    len(<span class="built_in">i</span>) = points(<span class="built_in">i</span> + <span class="number">1</span>, <span class="number">1</span>) - points(<span class="built_in">i</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">max</span>(len) &gt; <span class="number">2</span> * <span class="built_in">min</span>(len))</span><br><span class="line">    [d, <span class="built_in">i</span>] = <span class="built_in">max</span>(len);</span><br><span class="line">    k = on_margin(points, <span class="built_in">i</span>, d, <span class="number">-1</span>);</span><br><span class="line">    m = on_margin(points, <span class="built_in">i</span> + <span class="number">1</span>, d, <span class="number">1</span>);</span><br><span class="line">    xm = <span class="number">0</span>; ym = <span class="number">0</span>;</span><br><span class="line"><span class="comment">%% New point</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">i</span> == <span class="number">1</span> || <span class="built_in">i</span> + <span class="number">1</span> == n)</span><br><span class="line">        xm = <span class="built_in">mean</span>(points([<span class="built_in">i</span>,<span class="built_in">i</span>+<span class="number">1</span>],<span class="number">1</span>))</span><br><span class="line">        ym = <span class="built_in">mean</span>(points([<span class="built_in">i</span>,<span class="built_in">i</span>+<span class="number">1</span>],<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        [xm, ym] = dlg1(points([k, <span class="built_in">i</span>, <span class="built_in">i</span> + <span class="number">1</span>, m], <span class="number">1</span>), ...</span><br><span class="line">            points([k, <span class="built_in">i</span>, <span class="built_in">i</span> + <span class="number">1</span>, m], <span class="number">2</span>))</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    points = [ points(<span class="number">1</span>:<span class="built_in">i</span>, :); [xm, ym]; points(<span class="built_in">i</span> + <span class="number">1</span>:<span class="keyword">end</span>, :)];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">%&#123;</span></span><br><span class="line"><span class="comment">    This is a block comment. Please ignore me.</span></span><br><span class="line"><span class="comment">%&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[net]</span> = <span class="title">get_fit_network</span><span class="params">(inputs, targets)</span></span></span><br><span class="line">    <span class="comment">% Create Network</span></span><br><span class="line">    numHiddenNeurons = <span class="number">20</span>;  <span class="comment">% Adjust as desired</span></span><br><span class="line">    net = newfit(inputs,targets,numHiddenNeurons);</span><br><span class="line">    net.trainParam.goal = <span class="number">0.01</span>;</span><br><span class="line">    net.trainParam.epochs = <span class="number">1000</span>;</span><br><span class="line">    <span class="comment">% Train and Apply Network</span></span><br><span class="line">    [net,tr] = train(net,inputs,targets);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">foo_matrix = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>; <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]&#x27;&#x27;&#x27;;</span><br><span class="line">foo_cell = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>; <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;&#x27;&#x27;.&#x27;.&#x27;;</span><br><span class="line"></span><br><span class="line">cell2flatten = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">flattenedcell = <span class="built_in">cat</span>(<span class="number">1</span>, cell2flatten&#123;:&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="Fortran"><a href="#Fortran" class="headerlink" title="Fortran"></a>Fortran</h2><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">subroutine</span></span> test_sub(k)</span><br><span class="line">    <span class="keyword">implicit</span> <span class="keyword">none</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">!===============================</span></span><br><span class="line">  <span class="comment">!   This is a test subroutine</span></span><br><span class="line">  <span class="comment">!===============================</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">integer</span>, <span class="keyword">intent</span>(<span class="keyword">in</span>)           :: k</span><br><span class="line">    <span class="keyword">double</span> <span class="keyword">precision</span>, <span class="keyword">allocatable</span> :: a(:)</span><br><span class="line">    <span class="keyword">integer</span>, <span class="keyword">parameter</span>            :: nmax=<span class="number">10</span></span><br><span class="line">    <span class="keyword">integer</span>                       :: i</span><br><span class="line"></span><br><span class="line">    <span class="built_in">allocate</span> (a(nmax))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span> i=<span class="number">1</span>,nmax</span><br><span class="line">      a(i) = <span class="built_in">dble</span>(i)*<span class="number">5.d0</span></span><br><span class="line">    <span class="keyword">enddo</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> *, <span class="string">&#x27;Hello world&#x27;</span></span><br><span class="line">    <span class="built_in">write</span> (*,*) a(:)</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> test_sub</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>測試Testing!</tag>
      </tags>
  </entry>
  <entry>
    <title>(未完成!!)「上原步夢】 Say Good-Bye 涙 (Solo3) &amp; Break the System (Solo4) 曲推</title>
    <url>/next-nest/2021/11/02/comments-ayumu-solo03-solo04/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><div class="note warning">
            <h2 id="Attention"><a href="#Attention" class="headerlink" title="Attention!!"></a>Attention!!</h2><p>本篇尚未完成。</p>
          </div>
<pre><code>特別じゃない　普通の女の子
だって変われるんだ絶対
</code></pre><p>我並不特別　只是個普通的女孩<br>縱使是這樣的我　也是絕對能夠改變的</p>
<pre><code>託された願い　最上階まで
</code></pre><p>寄托我以心愿　我将直上巅峰</p>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><a href="https://zh.moegirl.org.cn/Say_Good-Bye_泪" title="萌娘百科詞條 Say Good-Bye 涙"><strong><em>Say Good-Bye 涙</em></strong></a> 與 <a href="https://zh.moegirl.org.cn/Break_The_System" title="萌娘百科詞條 Break the System"><strong><em>Break the System</em></strong></a> 分別是虹咲學園學園偶像同好會第三張專輯《<a href="https://zh.moegirl.org.cn/Just_Believe!!!(专辑)">Just Believe!!!</a>》與第四張專輯《<a href="https://zh.moegirl.org.cn/L!L!L!_(Love_the_Life_We_Live)(专辑)">L! L! L! (Love the Life We Live)</a>》收錄曲之一，皆由 <a href="https://zh.moegirl.org.cn/上原步梦" title="萌娘百科詞條 上原 步夢"><strong><em>上原 步夢</em></strong></a> 演唱。</p>
<span id="more"></span>
<ul>
<li><h2 id="psi-maintitle">Say Good-Bye 涙</h2>

  <h3 id="psi-description">Description</h3>

<p>  <a href="https://zh.moegirl.org.cn/Say_Good-Bye_泪" title="萌娘百科詞條 Say Good-Bye 涙"><strong><em>Say Good-Bye 涙</em></strong></a> 在2020年6月4日的特別企劃「虹學音~樂週！」第2周中首次公開此歌曲的試聽。</p>
<blockquote>

    <div id="aplayer-KraAwcSa" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1834947989" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av498391399/">Bilibili: <code>av498391399</code></a></p>
</blockquote>
<p>  這首曲目一改步夢以往溫柔、緩慢、甜美、細緻的風格(參見步夢的出道曲目 <a href="https://zh.moegirl.org.cn/夢への一歩"><em>夢への一歩</em></a> 與曲目 <a href="https://zh.moegirl.org.cn/開花宣言"><em>開花宣言</em></a> )，轉而增強了靈動、帥氣與疾走感。</p>
<p>  在遊戲《<a href="https://zh.moegirl.org.cn/LoveLive!学园偶像祭ALL_STARS">LoveLive! All Stars</a>》劇情中步夢經歷與主人公的衝突、對過去的反思、拾起重新踏步向前的決心之後，把自己的決心化作這首歌。</p>
<p>  比起以往像是向主人公唱的情歌，從這裡開始，步夢所歌唱出的旋律中承載著自己及對學園偶像的思考。</p>
  <h3 id="psi-fromcomments">From Comments</h3>

<p>  在此，請允許筆者引用<a href="https://www.bilibili.com/video/av498391399/#comment"><code>av498391399</code>評論區</a>中的朋友們對這首曲目的解讀：</p>
  <blockquote><p>终于等到了，总觉得有些淡淡的迷茫感，但还是带着对未来的期待</p>
<p>个人感觉这首歌体现的是步梦心态的变化吧，结合AS最新一章的剧情看的话，之前步梦算有点走一步看一步的心态，偶像活动上比较依赖侑，而两人出现矛盾后，步梦也开始反思过去的经历，最后调整好了心态，打算继续前进的决心</p>
<p>结合现实中虹团经历的话，个人感觉，步梦、阿兔嘭的人气一直欠高，作为立德的角色，中之人的压力应该比较大的，今后动画和Live上应该会遇到更大的挑战。solo从“追逐梦想”、“开花宣言”转向“告别眼泪”，应该是表达出阿兔嘭现在怀着自信的精神，放下过去不快的经历，走向未来的未知舞台这一过程</p>
<footer><strong>av498391399評論區</strong><cite><a href="https://www.bilibili.com/video/av498391399/#reply2992065564">No.10字幕组成员@教父散香</a></cite></footer></blockquote>
  <blockquote><p>曲风更加积极，结合阿兔嘭从原x21成员到加入企划初期再到迷你live、first live、LL FES、宣布动画化、宣布2nd live。阿兔嘭变得更加积极更加充满希望，跟曲风很贴合。</p>
<footer><strong>av498391399評論區</strong><cite><a href="https://www.bilibili.com/video/av498391399/#reply2994319357">@老車長</a></cite></footer></blockquote>
  <h3 id="psi-lyrics">Lyrics</h3>

  <figure class="highlight plaintext"><figcaption><span>Say Good-Bye 涙 歌詞</span><a href="https://zh.moegirl.org.cn/Say_Good-Bye_泪#歌词">萌娘百科詞條 Say Good-Bye 涙</a></figcaption><table><tr><td class="code"><pre><span class="line">* 作詞・作曲: Akira Sunset</span><br><span class="line">* 編曲: 遠藤ナオキ</span><br><span class="line">* 翻譯: No.10字幕組</span><br><span class="line"></span><br><span class="line">今日が來るのが怖くて</span><br><span class="line">害怕明天的到來</span><br><span class="line">また眠れなくて</span><br><span class="line">輾轉反側無法入眠</span><br><span class="line">顔色も最悪だ</span><br><span class="line">臉色也蒼白無力</span><br><span class="line">自信がなくたって</span><br><span class="line">就算沒有自信</span><br><span class="line">全力でやれば伝わるはずだって</span><br><span class="line">只要盡了全力就能傳達到</span><br><span class="line"></span><br><span class="line">いつもそんな気持ちの私だけど</span><br><span class="line">總是懷著這種心情的自己</span><br><span class="line">あなたがくれる優しさに</span><br><span class="line">不知是否對你所給的溫柔</span><br><span class="line">寄りかかって　甘えていたのかな？</span><br><span class="line">產生了依賴　接收者你的好意</span><br><span class="line">この足で踏み出さなくちゃ</span><br><span class="line">得靠自己走出這困境</span><br><span class="line"></span><br><span class="line">もう涙なんか見せない</span><br><span class="line">直到夢想實現之日</span><br><span class="line">ため息だってつかない</span><br><span class="line">我將不再以淚洗面</span><br><span class="line">夢葉えるその日まで</span><br><span class="line">不再長吁短嘆</span><br><span class="line">次に涙流すのは</span><br><span class="line">下一次流淚將不會是獨自一人</span><br><span class="line">一人じゃなく皆一緒に</span><br><span class="line">而是與大家一起</span><br><span class="line">最高の景色を見る時だ</span><br><span class="line">看到最棒的景色之時　喜極而泣</span><br><span class="line">頼りなくてごめんねなんて</span><br><span class="line">對不起　我是如此不可靠</span><br><span class="line">もう二度と言わないよ絶対</span><br><span class="line">我不會再說出這種話了　絕對</span><br><span class="line"></span><br><span class="line">ほんの少しかもしれない</span><br><span class="line">也許真的微乎其微</span><br><span class="line">だけど確実に</span><br><span class="line">但它的確存在</span><br><span class="line">歩みは進んでるんだ</span><br><span class="line">我的步伐在緩步向前</span><br><span class="line">ここまで來れたなら</span><br><span class="line">都到了這一步了</span><br><span class="line">ゴールが見えなくたって怖くない</span><br><span class="line">即使沒有結果　我也不再害怕</span><br><span class="line"></span><br><span class="line">私のこと私が信じなくちゃ</span><br><span class="line">若是自己都不信任自己</span><br><span class="line">誰が信じてくれるの</span><br><span class="line">那麼誰還願意相信我呢</span><br><span class="line">もっと自信持って自分らしく</span><br><span class="line">更加自信才更加像我</span><br><span class="line">どんな時も笑顔でいよう</span><br><span class="line">無論何時都笑容滿面</span><br><span class="line"></span><br><span class="line">もう悲しくなんかないよ</span><br><span class="line">無論再發生怎樣的事</span><br><span class="line">例えどんなことがあっても</span><br><span class="line">我都不會再傷心難過</span><br><span class="line">心は決して折れない</span><br><span class="line">心也絕不會再受挫了</span><br><span class="line">未來だけを見つめてる</span><br><span class="line">一心只想抓住那未來</span><br><span class="line">振り返ったりはしない</span><br><span class="line">不再時而回首來路</span><br><span class="line">最高の思い出だけ連れて行こう</span><br><span class="line">只帶著最美好的記憶前行</span><br><span class="line">特別じゃない　普通の女の子</span><br><span class="line">我並不特別　只是個普通的女孩</span><br><span class="line">だって変われるんだ絶対</span><br><span class="line">縱使是這樣的我　也是絕對能夠改變的</span><br><span class="line"></span><br><span class="line">もう涙なんか見せない</span><br><span class="line">直到夢想實現之日</span><br><span class="line">ため息だってつかない我</span><br><span class="line">將不再以淚洗面</span><br><span class="line">夢葉えるその日まで</span><br><span class="line">不再長吁短嘆</span><br><span class="line">次に涙流すのは</span><br><span class="line">下一次流淚將不會是獨自一人</span><br><span class="line">一人じゃなく皆一緒に</span><br><span class="line">而是與大家一起</span><br><span class="line">最高の景色を見る時だ</span><br><span class="line">看到最棒的景色之時　喜極而泣</span><br><span class="line">頼りなくてごめんねなんて</span><br><span class="line">對不起　我是如此不可靠</span><br><span class="line">もう二度と言わないよ絶対</span><br><span class="line">我不會再說出這種話了　絕對</span><br></pre></td></tr></table></figure>
  <h3 id="psi-extra">Extra</h3>

<p>  筆者個人相信，<a href="https://zh.moegirl.org.cn/夢への一歩"><code>一</code></a><a href="https://zh.moegirl.org.cn/開花宣言"><code>步</code></a><a href="https://zh.moegirl.org.cn/Say_Good-Bye_泪"><code>一</code></a><a href="https://zh.moegirl.org.cn/Break_The_System"><code>步</code></a>地，經過大家的努力與熱愛，終將看到實現自己、看到喜愛她的人們、真正成爲偶像的 <a href="https://zh.moegirl.org.cn/上原步梦" title="萌娘百科詞條 上原 步夢"><strong><em>上原 步夢</em></strong></a> 。</p>
</li>
<li><h2 id="phi-maintitle">Break the System</h2>

  <h3 id="phi-description">Description</h3>

<p>  <a href="https://zh.moegirl.org.cn/Break_The_System" title="萌娘百科詞條 Break the System"><strong><em>Break the System</em></strong></a> 於2021年9月13日在遊戲LoveLive!學園偶像祭ALL STARS中初次公開。<br>  在LoveLive!學園偶像祭ALL STARS的角色羈絆劇情中， <a href="https://zh.moegirl.org.cn/上原步梦" title="萌娘百科詞條 上原 步夢"><strong><em>上原 步夢</em></strong></a> 體驗加入虹咲學園科幻研究部，並以此為主題創作了這首歌曲。</p>
  <h3 id="phi-lyrics">Lyrics</h3>

  <figure class="highlight plaintext"><figcaption><span>Break the System 歌詞</span><a href="https://zh.moegirl.org.cn/Break_The_System#歌词">萌娘百科詞條 Break the System</a></figcaption><table><tr><td class="code"><pre><span class="line">* 作詞・作曲: nana hatori, shun ÷1</span><br><span class="line">* 編曲: shun ÷1</span><br><span class="line">* 翻譯: 虹之咲字幕組</span><br><span class="line">  * 翻譯: 黒川Kira</span><br><span class="line">  * 校對: 桐原, 結他熊, 潮風</span><br><span class="line">  * 潤色: 尼洛</span><br><span class="line"></span><br><span class="line">＜絶対的全能システム＞</span><br><span class="line">&gt;&gt;&gt; 絕對的全能系統</span><br><span class="line">＜覆すアルゴリズム＞</span><br><span class="line">&gt;&gt;&gt; 顛覆的固定程式</span><br><span class="line">＜ノイズ塗れディストーション＞</span><br><span class="line">&gt;&gt;&gt; 噪聲滿溢歪曲變形</span><br><span class="line">＜出口の無いディメンション＞</span><br><span class="line">&gt;&gt;&gt; 此間次元全無出路</span><br><span class="line"></span><br><span class="line">記憶は鮮明で　まるで現実で</span><br><span class="line">記憶仍然鮮明 如同現實一般</span><br><span class="line">歯痒いほど懐かしい</span><br><span class="line">懷念得心急如焚</span><br><span class="line">当たり前なんて　存在しなくて</span><br><span class="line">並不存在什麼理所當然</span><br><span class="line">それでもキミはいつも眩しい光</span><br><span class="line">儘管如此你仍是那耀眼的光芒</span><br><span class="line"></span><br><span class="line">Ah 夢の中ならば</span><br><span class="line">Ah 如果身處夢境之中的話</span><br><span class="line">Ah 壊していけ　ルールなんて無いから</span><br><span class="line">Ah 那就將一切都破壞掉 規則根本就不存在</span><br><span class="line">狂い出すシステム</span><br><span class="line">系統 狂亂失序</span><br><span class="line">減少するエントロピー</span><br><span class="line">熵值 極速下跌</span><br><span class="line">切り開く　未来</span><br><span class="line">開闢嶄新的未來</span><br><span class="line"></span><br><span class="line">越えて行け　無限大へ</span><br><span class="line">向無限大處飛躍前進</span><br><span class="line">いま　解き放て</span><br><span class="line">如今解開所有束縛</span><br><span class="line">託された願い　最上階まで</span><br><span class="line">寄託我以心願 我將直上巔峰</span><br><span class="line">悪足掻きだって　未完成でも</span><br><span class="line">拚命掙扎也好 半途而廢也罷</span><br><span class="line">ベクトル定めて</span><br><span class="line">就要將宿命的矢量定下</span><br><span class="line">鮮やかに世界描いて</span><br><span class="line">鮮明地描繪出這世界</span><br><span class="line"></span><br><span class="line">-*- Break The System -*-</span><br><span class="line"></span><br><span class="line">＜絶対的全能システム＞</span><br><span class="line">&gt;&gt;&gt; 絕對的全能系統</span><br><span class="line">＜覆すアルゴリズム＞</span><br><span class="line">&gt;&gt;&gt; 顛覆的固定程式</span><br><span class="line">＜ノイズ塗れディストーション＞</span><br><span class="line">&gt;&gt;&gt; 噪聲滿溢歪曲變形</span><br><span class="line">＜出口の無いディメンション＞</span><br><span class="line">&gt;&gt;&gt; 此間次元全無出路</span><br><span class="line"></span><br><span class="line">一つの偶然が　奇跡のイレギュラー</span><br><span class="line">一次偶然 引發了奇蹟般的異常</span><br><span class="line">重なる磁石のように　引き寄せ合って</span><br><span class="line">如同重疊的磁石 相互吸引</span><br><span class="line">歪んだセオリーが　導く運命は</span><br><span class="line">歪曲的理論所引導的命運</span><br><span class="line">この手で破るパラドックス</span><br><span class="line">就是要用這雙手來打破的悖論</span><br><span class="line">邪魔はさせない</span><br><span class="line">任何人也休想攪擾</span><br><span class="line"></span><br><span class="line">Ah 無重力の大空へ</span><br><span class="line">Ah 向着無重力的遙遠天空</span><br><span class="line">Ah 飛ばしていけ　境界線超えるまで</span><br><span class="line">Ah 疾馳而上 直到飛越邊界</span><br><span class="line">暴走　崩壊寸前</span><br><span class="line">暴走 崩壞臨近</span><br><span class="line">想像絶する感情</span><br><span class="line">感情 難以想像</span><br><span class="line">立ち向かう　アンノウン</span><br><span class="line">對抗未知的命運</span><br><span class="line"></span><br><span class="line">変えていけ　不可逆性なら</span><br><span class="line">去顛覆改變  若是不可逆轉的規則</span><br><span class="line">見つけ出せ</span><br><span class="line">就去努力追尋吧</span><br><span class="line">消えそうなほど　微かな希望でも</span><br><span class="line">即使只有將要消逝的微薄的希望</span><br><span class="line">信じたその　心を</span><br><span class="line">那顆如此相信的心</span><br><span class="line">灯す輝きを</span><br><span class="line">點亮它的光芒</span><br><span class="line">必ず明日へ繋いで</span><br><span class="line">必定將延續到明天</span><br><span class="line"></span><br><span class="line">悲しみの　種からは</span><br><span class="line">從悲傷的種子裏</span><br><span class="line">強く儚い花が芽生える</span><br><span class="line">會開出堅強又脆弱易逝的花朵</span><br><span class="line">美しく　狂い咲く</span><br><span class="line">絢麗地盛開 盡情地怒放</span><br><span class="line">守るべき未来に　愛ある限りは</span><br><span class="line">在那理應守護的未來 只要還有愛存在</span><br><span class="line"></span><br><span class="line">だから</span><br><span class="line">所以</span><br><span class="line"></span><br><span class="line">越えて行け　無限大へ</span><br><span class="line">向無盡的遠方飛躍</span><br><span class="line">いま　解き放て</span><br><span class="line">如今解開所有束縛</span><br><span class="line">託された願い　最上階まで</span><br><span class="line">寄託我以心願 我將直上巔峰</span><br><span class="line">悪足掻きだって　未完成でも</span><br><span class="line">拚命掙扎也好 半途而廢也罷</span><br><span class="line">ベクトル定めて</span><br><span class="line">就要將宿命的矢量定下</span><br><span class="line">鮮やかに世界描いて</span><br><span class="line">鮮明地描繪出這世界</span><br><span class="line">信じたその　心を</span><br><span class="line">那顆如此相信的心</span><br><span class="line">灯す輝きを</span><br><span class="line">點亮它的光芒</span><br><span class="line">必ず明日へ繋いで</span><br><span class="line">必定將延續到明天</span><br></pre></td></tr></table></figure>
<p>  </p><h4 id="phi-lyrics-analysis">Analysis</h4><br>  其中在兩處間奏部分出現的四句歌詞的意指亦很有趣，在某種程度上可以解讀出曲目背後虛構故事的背景。<p></p>
  <details>
  <summary> 有興趣的朋友可以<code>點擊此處</code>閲讀以下相關筆記</summary>

  <pre><code>
  ＜絶対的全能<ruby>システム<rt>System</rt></ruby>＞              //=> 絕對的全能系統
  ＜覆す<ruby>アルゴリズム<rt>Algorithm</rt></ruby>＞                //=> 執行覆蓋算法
  ＜<ruby>ノイズ<rt>Noise</rt></ruby>塗れ<ruby>ディストーション<rt>Distortion</rt></ruby>＞      //=> 噪聲塗抹失真
  ＜出口の無い<ruby>ディメンション<rt>Dimension</rt></ruby>＞        //=> 沒有出口的維度
  </code></pre>

  <p>在此我們簡單介紹一下裏面提到的<ruby>覆蓋<rt>Covering</rt>算法<rt>Algorithm</rt></ruby>，這是<a href="https://baike.baidu.com/item/数据挖掘/216477">數據挖掘</a>當中面對分類任務，常用的一種模型。</p>

  <p>其實這個模型比起<a href="https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression">邏輯回歸</a>、<a href="https://scikit-learn.org/stable/modules/naive_bayes.html">樸素Bayes</a>或<a href="https://scikit-learn.org/stable/modules/svm.html#classification">SVM</a>這些在<a href="https://baike.baidu.com/item/机器学习/217599">機器學習</a>中常見的分類模型，它更像是一種<code>挑選機制</code>(雖説單就這點而言也有點<a href="https://scikit-learn.org/stable/modules/tree.html#classification">決策樹</a>的感覺)：具體地説這個模型的訓練過程的話，則是通過不斷地在全體個體中，<strong>逐個挑選</strong>符合條件的個體，<strong>提取它們的特徵</strong>，提取過特徵的個體會<strong>在使用後立即遺棄</strong>的方式，綜合生成適用於某一類個體的共同挑選規則，而不符合這一規則的個體即被視爲另類，所以説這個比起前面提到的常用模型，更像是一種<strong>規則驅動</strong>的機制。</p>

  <p>如若使用僞代碼的話，大概會表述如下：</p>

  <figure class="highlight cpp"><figcaption><span>覆蓋算法僞C++/js代碼</span></figcaption><table><tr><td class="code"><pre><span class="line">(D, Att_Vals) =&gt; &#123;</span><br><span class="line">    Rule_Set = &#123;&#125;; <span class="comment">//學習的規則集初試為空</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="class"><span class="keyword">class</span> <span class="title">do</span> &#123;</span></span><br><span class="line">        repeat &#123;</span><br><span class="line">            Rule = <span class="built_in">Learn_One_Rule</span>(D, Att_Vals, class);</span><br><span class="line">            <span class="comment">//根據特徵提取新的規則，然後刪除使用過的個體</span></span><br><span class="line">            從D中刪除被Rule覆蓋的元組;</span><br><span class="line">        &#125; <span class="built_in">until</span> (終止條件被滿足);</span><br><span class="line">        Rule_Set += Rule;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Rule_Set;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
  </details>

  <h3 id="phi-extra">Extra</h3>

</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>萌娘百科詞條 上原 步夢: <a href="https://zh.moegirl.org.cn/上原步梦">https://zh.moegirl.org.cn/上原步梦</a></li>
<li>萌娘百科詞條 Say Good-Bye 涙: <a href="https://zh.moegirl.org.cn/Say_Good-Bye_泪">https://zh.moegirl.org.cn/Say_Good-Bye_泪</a></li>
<li>萌娘百科詞條 Break the System: <a href="https://zh.moegirl.org.cn/Break_The_System">https://zh.moegirl.org.cn/Break_The_System</a></li>
<li>萌娘百科詞條 大西亞玖璃 (阿兔嘭): <a href="https://zh.moegirl.org.cn/大西亚玖璃">https://zh.moegirl.org.cn/大西亚玖璃</a></li>
<li>「中日双语字幕」虹咲三专 步梦solo Say Good-Bye 涙 <a href="https://www.bilibili.com/video/av498391399/">av498391399</a> 2020-06-04</li>
<li><code>leeshum</code> -「数据挖掘课程笔记」基于规则的分类-顺序覆盖算法（sequential covering algorithm）<a href="https://www.cnblogs.com/leeshum/p/4876025.html">https://www.cnblogs.com/leeshum/p/4876025.html</a></li>
<li><code>09120912zhang</code> - Covering Algorithms: Constructing Rules <a href="https://www.cnblogs.com/09120912zhang/p/7249574.html">https://www.cnblogs.com/09120912zhang/p/7249574.html</a></li>
<li><code>qq_42714369</code> - 第四章 算法：基础方法 覆盖算法 <a href="https://blog.csdn.net/qq_42714369/article/details/92228761/">https://blog.csdn.net/qq_42714369/article/details/92228761/</a></li>
</ol>
<p>文字內容引用遵守《知識共享 署名-非商業性使用-相同方式共享 3.0》協議。</p>
<style>/*NexT*/main.main>div.main-inner>div.content-wrap>div.content>article.post-block>div.post-body>ul{list-style-type:hebrew}main.main>div.main-inner>div.content-wrap>div.content>article.post-block>div.post-body>ul>li::marker{font-size:1.6em}</style>
]]></content>
      <tags>
        <tag>Virtual Artists (虛擬藝人)</tag>
      </tags>
  </entry>
  <entry>
    <title>找到了！把图像染上葱色的方法！</title>
    <url>/next-nest/2022/01/18/color-trans/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>一種調色方法，基於<code>RGB</code>理論。<br>我嬾得說太多了抱歉。</p>
<span id="more"></span>
<h2 id="Goal"><a href="#Goal" class="headerlink" title="Goal"></a>Goal</h2><p>例如把圖片<img src="/next-nest/2022/01/18/color-trans/Windows.jpeg" alt>變換爲<img src="/next-nest/2022/01/18/color-trans/Winmiku.jpeg" alt>亦即染色為葱色<code>#39c5bb</code>。</p>
<h2 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h2><p>聲明模塊：</p>
<figure class="highlight py"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> keras</span><br><span class="line"><span class="keyword">from</span> keras.preprocessing <span class="keyword">import</span> image <span class="keyword">as</span> img</span><br></pre></td></tr></table></figure>
<p>其中：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>模塊</th>
<th>版本</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Anaconda</code></td>
<td><code>5.2.0</code></td>
</tr>
<tr>
<td><code>Python</code></td>
<td><code>3.6.5</code></td>
</tr>
<tr>
<td><code>NumPy</code></td>
<td><code>1.14.3</code></td>
</tr>
<tr>
<td><code>TensorFlow</code></td>
<td><code>1.11.0</code></td>
</tr>
<tr>
<td><code>Keras</code></td>
<td><code>2.1.6</code></td>
</tr>
</tbody>
</table>
</div>
<p>先計算色相的偏差值：</p>
<figure class="highlight py"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Constants</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    DEV = (<span class="number">0xbb</span> - <span class="number">0x39</span>) / (<span class="number">0xc5</span> - <span class="number">0x39</span>)</span><br></pre></td></tr></table></figure>
<p>導入需要的圖片並轉化爲張量：</p>
<figure class="highlight py"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line">rawimg = img.load_img(<span class="string">&quot;./Windows.jpeg&quot;</span>)</span><br><span class="line">rawarr = img.img_to_array(rawimg)</span><br></pre></td></tr></table></figure>
<p>此處需要審察待變換圖像的主體是否大部分為黑白，分爲兩種情況：</p>
<ol>
<li><p>如若主體大部分為黑白色，則需要在保持亮度不變的前提下，先把最大值（偏白色）拉到最亮或者把最小值（偏黑色）拉到最暗，然後中間量由最大與最小值的綫性組合得到，類似定比分點：</p>
 <figure class="highlight py"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">transcolor</span>(<span class="params">rawcolor</span>):</span></span><br><span class="line">    elesum = rawcolor.<span class="built_in">max</span>() + rawcolor.<span class="built_in">min</span>()</span><br><span class="line">    <span class="keyword">if</span> elesum &lt;= <span class="number">255</span>:</span><br><span class="line">        elemin, elemax = <span class="number">0</span>, elesum</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        elemin, elemax = elesum - <span class="number">255</span>, <span class="number">255</span></span><br><span class="line">    elemid = (<span class="number">1</span> - DEV) * elemin + DEV * elemax</span><br><span class="line">    <span class="keyword">return</span> np.array([ elemin, elemax, elemid ])</span><br></pre></td></tr></table></figure>
</li>
<li><p>否則可以直接計算中間量：</p>
 <figure class="highlight py"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">transcolor</span>(<span class="params">rawcolor</span>):</span></span><br><span class="line">    elemax = rawcolor.<span class="built_in">max</span>()</span><br><span class="line">    elemin = rawcolor.<span class="built_in">min</span>()</span><br><span class="line">    elemid = (<span class="number">1</span> - DEV) * elemin + DEV * elemax</span><br><span class="line">    <span class="keyword">return</span> np.array([ elemin, elemax, elemid ])</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>新建一個零張量，並用剛才定義的函數對每個像素點進行顔色變換，然後保存爲新的圖片：</p>
<figure class="highlight py"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line">newarr = np.zeros(rawarr.shape)</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(rawarr.shape[<span class="number">0</span>]):</span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(rawarr.shape[<span class="number">1</span>]):</span><br><span class="line">        newarr[k, l] += transcolor(rawarr[k, l])</span><br><span class="line">newimg = img.array_to_img(newarr)</span><br><span class="line">newimg.save(<span class="string">&quot;./Winmiku.jpeg&quot;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Samples"><a href="#Samples" class="headerlink" title="Samples"></a>Samples</h2><p>更多的例子：</p>
<ol>
<li><p><code>Leo/need</code>的logo<img src="/next-nest/2022/01/18/color-trans/Leoneed.jpeg" alt><img src="/next-nest/2022/01/18/color-trans/Leomiku.jpeg" alt></p>
</li>
<li><p><code>livetune(kz)</code>的logo，此前已經嵌入了<code>MNIST</code>的圖像<img src="/next-nest/2022/01/18/color-trans/MNIST_Livetune.jpeg" alt><img src="/next-nest/2022/01/18/color-trans/MNIST_Livemiku.jpeg" alt></p>
</li>
<li><p><code>Hachioji-P</code>的logo<img src="/next-nest/2022/01/18/color-trans/Hachioji.jpeg" alt><img src="/next-nest/2022/01/18/color-trans/Hachmiku.jpeg" alt></p>
</li>
</ol>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「Superstar】Eps#12插入曲 Starlight Prologue 曲推</title>
    <url>/next-nest/2021/11/01/comments-starprologue/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><div class="note warning">
            <h2 id="Attention"><a href="#Attention" class="headerlink" title="Attention!!"></a>Attention!!</h2><p>第一次寫非VOCALOID曲目的曲推，有覺得寫得不好的地方請歡迎來懟我，<br>當然對於我覺得你說得不對的地方，我不保證不會懟回來</p>
          </div>
<blockquote><!-- lyrics in codeblock -->
<pre><code>Looking for light
いま動き始めた僕らの物語
どんな奇跡だって 起こすのさ
</code></pre><footer><strong>Liella!</strong><cite><a href="https://zh.moegirl.org.cn/Starlight_Prologue">Starlight Prologue</a></cite></footer></blockquote>
<p><img src="/next-nest/2021/11/01/comments-starprologue/starprologue-moment.jpeg" alt="Cover of &quot;Starlight Prologue&quot;, from av336162034"></p>
<p>(Cover Image from <a href="https://www.bilibili.com/video/av336162034/"><code>av336162034</code></a>)</p>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><a href="https://zh.moegirl.org.cn/Starlight_Prologue" title="萌娘百科詞條 Starlight Prologue"><strong><em>Starlight Prologue</em></strong></a> <sup><a href="#fn_1" id="reffn_1">1</a></sup> 是《<a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!">LoveLive!Superstar!!</a>》电视动画第12囘的插曲，由 <a href="https://zh.moegirl.org.cn/Liella!" title="萌娘百科詞條 Liella!"><strong><em>Liella!</em></strong></a> <sup><a href="#fn_2" id="reffn_2">2</a></sup> 演唱，收录于动画第三张插入曲单曲《<a href="https://zh.moegirl.org.cn/Nonfiction!!_Starlight_Prologue">ノンフィクション!!/Starlight Prologue</a>》中。该单曲于2021年10月20日发售。</p>
<span id="more"></span>
<h2 id="Staff"><a href="#Staff" class="headerlink" title="Staff"></a>Staff</h2><ul>
<li>Lyrics (作詞): 宮嶋 淳子</li>
<li>Composition (作曲): 小幡 康裕</li>
<li>Arrangement (編曲): 山下 洋介</li>
<li>String Arrangement (管弦樂編曲): 兼松 眾</li>
</ul>
<h2 id="Miscellaneous"><a href="#Miscellaneous" class="headerlink" title="Miscellaneous"></a>Miscellaneous</h2><ol>
<li><p>本曲目爲番劇第12囘的Insertion，因此人們在對本曲目進行評價的時候經常與第12囘《Song for All》聯係在一起。<br> 該囘目因其中出現大量元素與<a href="https://zh.moegirl.org.cn/LoveLive!">LoveLive!</a><a href="https://zh.moegirl.org.cn/LoveLive!/TV动画作品#TV动画第二期">第二季</a><a href="https://www.bilibili.com/bangumi/play/ep80125/">第九囘《心之Melody》</a>衝撞性雷同，而被觀衆認定爲是編劇<a href="https://zh.moegirl.org.cn/花田十辉">花田十煇</a>複刻前作的產物。<br> 對應地，人們也常常把這首 <a href="https://zh.moegirl.org.cn/Starlight_Prologue" title="萌娘百科詞條 Starlight Prologue"><strong><em>Starlight Prologue</em></strong></a> 拿來和那一囘的插入曲目 <a href="https://zh.moegirl.org.cn/Snow_halation"><em>Snow Halation</em></a> <sup><a href="#fn_3" id="reffn_3">3</a></sup> 進行比較。<br> 在此，筆者不對劇情及與過往劇情相似部分作多餘評價。</p>
</li>
<li><p>這是本曲目在專輯中的封面:<img src="/next-nest/2021/11/01/comments-starprologue/cover-starprologue.jpeg" alt="Cover of the Album, Episode &quot;Starlight Prologue&quot;">封面的構圖與一單 <a href="https://zh.moegirl.org.cn/起始是你的天空"><strong><em>始まりは君の空</em></strong></a> <sup><a href="#fn_4" id="reffn_4">4</a></sup> <code>みんなで叶える物語盤(大家一起實現的故事盤)</code>封面的構圖完全一致;<img src="/next-nest/2021/11/01/comments-starprologue/始まりは君の空A.jpeg" alt="Cover of the Album &quot;Hajimari wa kimi no sora&quot; (始まりは君の空), Episode &quot;みんなで叶える物語&quot;">不僅如此，其與專輯<a href="https://zh.moegirl.org.cn/Nonfiction!!_Starlight_Prologue">Nonfiction!!/Starlight Prologue</a>兩款當中另一個盤的封面(曲目 <a href="https://zh.moegirl.org.cn/Nonfiction!!"><strong><em>Nonfiction!!</em></strong></a> <sup><a href="#fn_5" id="reffn_5">5</a></sup>)相比，<a href="https://zh.moegirl.org.cn/平安名堇"><strong>堇</strong></a>和<a href="https://zh.moegirl.org.cn/涩谷香音"><strong>香音</strong></a>所作的動作亦十分相近，皆是向紙面外方向伸出左手…<img src="/next-nest/2021/11/01/comments-starprologue/cover-nonfiction.jpeg" alt="Cover of the Album, Episode &quot;Nonfiction!!&quot;"></p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~">Liella! First LoveLive! Tour ~Starlines~</a><sup><a href="#fn_6" id="reffn_6">6</a></sup><a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#群马公演" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演)">群馬公演</a>的兩天(<a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day1（10.30）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day1)">Day1: Oct 30<sup>th</sup>, 2021</a> &amp; <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day2（10.31）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day2)">Day2: Oct 31<sup>st</sup>, 2021</a>)的節目單 <em><a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day1（10.30）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day1)">完</a> <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day2（10.31）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day2)">全</a> <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day1（10.30）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day1)">一</a> <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day2（10.31）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day2)">致</a></em> ，兩次都在第18首，亦即Encore前的倒數第二首的位置上。</p>
</li>
<li><p>截至筆者編輯時間(2021年11月2日)，本曲目已在<a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~">Liella! First LoveLive! Tour ~Starlines~</a> <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#群马公演" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演)">群馬公演</a>的兩天(<a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day1（10.30）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day1)">Day1: Oct 30<sup>th</sup>, 2021</a> &amp; <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day2（10.31）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day2)">Day2: Oct 31<sup>st</sup>, 2021</a>)各登場一次，在<a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day2（10.31）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day2)">Day2</a>的<strong>live現場、以及諸多民間轉播的場合</strong>，臺下的觀衆們通過應援棒變色自行復現了番劇中地面裝飾燈釋放金色輝光的瞬間，效果及其震撼——<strong>這是大家一起實現的故事！</strong><br> 下面的視頻為一處轉播點的觀衆實現變色的實錄<br> (官方主場當然也有實現變色啦…場外就有大佬在講解與組織變色的計劃，但是導播沒有錄上<del>建議和花田十煇一起放飛<span class="hidiv">，建議讓提出此囘高强度巡演的策劃駝著他倆飛，這家夥才是真的罪大惡極</span></del>。)</p>
 <iframe src="//player.bilibili.com/player.html?aid=933946661&bvid=BV1sT4y1d7Qg&cid=434180384&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

</li>
</ol>
<h2 id="My-Personal-Opinion"><a href="#My-Personal-Opinion" class="headerlink" title="My Personal Opinion"></a>My Personal Opinion</h2><p>(筆者在此淺談自己對這首曲目的看法。)</p>
<p>或許番劇劇情中有大量雷同、衝撞、致敬的成分，但與<em>Snow Halation</em>相比，<a href="https://zh.moegirl.org.cn/Starlight_Prologue" title="萌娘百科詞條 Starlight Prologue"><strong><em>Starlight Prologue</em></strong></a> 完全是背景、情感、風格、含義截然不同的另一首歌。<br>筆者在2015年入宅之時對<em>Snow Halation</em>有所耳聞，但當時并未深入研究，因此或許對於那支曲目并無太强的先入爲主之感。<br>在認真聽完兩首歌之後，在筆者個人看來，<em>Snow Halation</em>是<a href="https://zh.moegirl.org.cn/M&#39;s"><em>μ’s</em></a>成立已有較長時間，成員之間的羈絆趨於深厚，大家將自己的心願匯聚，共同化作的一首，大家共同完成的曲目，以此戰勝昔日的對手<a href="https://zh.moegirl.org.cn/A-RISE"><em>A-Rise</em></a>而挺進決賽。<br>但 <a href="https://zh.moegirl.org.cn/Starlight_Prologue" title="萌娘百科詞條 Starlight Prologue"><strong><em>Starlight Prologue</em></strong></a> 則是大家剛剛結成，準備出發的號角<span class="hidiv">(首 戰 敗 北)</span>，比起<em>Snow Halation</em>略帶悲傷的抒情<del>(在某些方面真的不輸通常意義上的情歌<span class="hidiv">，希：“計劃”通</span>)</del>，更多的是啓程時刻的希望與明亮之感。<br>如若真的要説這支曲目本身是在呼應誰的話，那麽筆者認爲應當是 <a href="https://zh.moegirl.org.cn/未来预报哈利路亚!"><strong><em>未来予報ハレルヤ！</em></strong></a> 。<br>正如歌詞中所説得一楊，如今， <a href="https://zh.moegirl.org.cn/Liella!" title="萌娘百科詞條 Liella!"><strong><em>Liella!</em></strong></a> 與<strong><em>喜歡Liella!的大家</em></strong>之間的故事才剛剛開始，到目前爲止，我們經厤著的有遺憾、有驚喜、也有滿足感，接下來，讓我們一起書寫下新的續篇。</p>
<h2 id="From-Comments"><a href="#From-Comments" class="headerlink" title="From Comments"></a>From Comments</h2><p>(在此，請允許筆者引用<a href="https://www.bilibili.com/video/av336162034/#comment"><code>av336162034</code>評論區</a>中，筆者認爲非常值得的幾條，分享給大家)</p>
<blockquote><p>开头每个人的solo都是在说自己和liella的故事啊！<br>可可:你我的相遇<br>香音:给予我莫大的勇气<br>堇:是你将我带到起跑线<br>千:但接下来就该轮到我了<br>恋:晴空万里的未来去创造吧！<br>我永远喜欢liella!</p>
<footer><strong>av336162034評論區</strong><cite><a href="https://www.bilibili.com/video/av336162034/#reply5602500769">@是南边呀</a></cite></footer></blockquote>
<blockquote><p>昨晚十二点半看完了最后一集…五味杂陈呀<br>目前（个人）认为曲调最好听的：私的幸福你≥wish song ≈ starlight≥未来预报<br>场面最震撼的：Tiny stars＝nonfiction ≥starlight<br>最有意义的：每一首歌</p>
<footer><strong>av336162034評論區</strong><cite><a href="https://www.bilibili.com/video/av336162034/#reply5609277803">@葫闹</a></cite></footer></blockquote>
<blockquote><p>随着12话的「Starlight Prologue」演出完成，星团的第一季圆满撒花，但真正的梦想不会止步于此的对吧？正如这集live的名字，星团在此刻唱响了星光般的「序曲」。每个人的信念，羁绊，成长，一点一点连结起来，转动着故事的齿轮，描绘着liella晴空万里的未来，想起最初看到朗读动画，看到第一集时对这次lovelive的期望与信心，如今我认为星团绝对做到了。尽管渺小，因为不是孤身一人，便能不放弃的向前，这样紧握着炽热信念的五人，追逐着同一个梦想，此般相遇如同是神赐予的吻。无论在哪一次元，liella的故事都刚刚翻开第一页，尽管会不安，犹豫，怀疑，但想要歌唱的心情将每一个团员心中怀抱的情感在五线谱上连结起来。而这个传递着热切希望的星团终会到达她们梦想中的彼方，school idol从第一话的无人问津到如今十二话登上梦中的舞台，她们最初的热爱便不再是虚构。<br>        感谢星团带给我的悸动，和永不言弃的决意<br>        撒，想要让歌声传达到宇的宙角落，那就在这片一切开始的天空迎接如风的未来，奏响梦想吧，liella！</p>
<footer><strong>av336162034評論區</strong><cite><a href="https://www.bilibili.com/video/av336162034/#reply5601840114">@星环Starring</a></cite></footer></blockquote>
<h2 id="Lyrics"><a href="#Lyrics" class="headerlink" title="Lyrics"></a>Lyrics</h2><figure class="highlight vocatag vocalyrics">
            <table>
                <tbody>
                    <tr>
                        <td class="gutter">
                            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre>
                        </td>
                        <td class="code">
                            <pre><span class="line">* 作詞: 宮嶋 淳子<br>* 作曲: 小幡 康裕<br>* 編曲: 山下 洋介<br>* 弦編曲: 兼松 衆<br><span class="base16colored-magenta"><br><span class="base16colored-orange">ちいさく瞬いた　胸の奥でまた<br>叶えにいこうよって憧れが騒ぐ</span><br><span class="base16colored-cyan">いそいで駆け出した　なんでもできるさ<br>出会いがくれた</span>大きな勇気<br><br><span class="base16colored-green">始まりは君から</span><br><span class="base16colored-red">でも次は僕から</span><br><span class="base16colored-blue">晴れわたる未来を創るよ</span><br>どこまでも走る<br><br>Looking for light<br>いま動き始めた僕らの物語<br><span class="base16colored-green">どんな奇跡だって</span><span class="base16colored-cyan">起こすのさ</span><br>キラキラ大空に舞い散る夢<br>かき集めてひとつひとつ<br>叶えてゆこう<br><br><span class="base16colored-blue">ぎゅっとね　結んでった僕らの願いは<br>思いもよらないカタチに変わってく</span><br><span class="base16colored-red">ときめきこぼれて　目と目あわせ笑った<br>どの瞬間も</span>宝物さ<br><br><span class="base16colored-green">振り返ればいつも</span><br><span class="base16colored-cyan">笑顔の君がいる</span><br><span class="base16colored-green">この時が続いて</span>ゆくように<br>もっと強くなる<br><br>Going the way<br>明日は何色に染まってゆくのだろう<br>果てしない希望があふれだす<br>キラキラ輝くセカイはきっと<br>まだ知らないはずむ鼓動<br>教えてくれる<br><br><span class="base16colored-red">信じる気持ちが揺らぐときは</span><br><span class="base16colored-blue">想いを歌にして伝えよう</span><br><span class="base16colored-green">涙は一番うれしい日に</span><br><span class="base16colored-cyan">とっておく</span>　そう決めたんだから<br><br><span class="base16colored-orange">Looking for light<br>いま動き始めた僕らの物語<br>どんな奇跡だって</span>起こすのさ<br>キラキラ大空に舞い散る夢<br>かき集めてひとつひとつ<br>叶えてゆこう<br><br><span class="base16colored-orange">君と煌めきを</span><br>描くよ　ずっと</span></span></pre>
                        </td>
                    </tr>
                </tbody>
            </table>
        </figure>
<h2 id="Extra"><a href="#Extra" class="headerlink" title="Extra"></a>Extra</h2><p>筆者在此謹代表筆者個人，預祝<a href="https://zh.moegirl.org.cn/Liella!" title="萌娘百科詞條 Liella!"><strong><em>Liella!</em></strong></a><a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~"><code>1<sup>st</sup>Live</code></a>後面的公演順利進行！</p>
<p><code>✿ヽ(°▽°)ノ✿</code></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>萌娘百科詞條 Starlight Prologue: <a href="https://zh.moegirl.org.cn/Starlight_Prologue">https://zh.moegirl.org.cn/Starlight_Prologue</a></li>
<li>萌娘百科詞條 Nonfiction!!/Starlight Prologue: <a href="https://zh.moegirl.org.cn/Nonfiction!!_Starlight_Prologue">https://zh.moegirl.org.cn/Nonfiction!!_Starlight_Prologue</a></li>
<li>「中字」Starlight Prologue（星光序言）-Liella!《LoveLive!Superstar!!》第12话插入歌 <a href="https://www.bilibili.com/video/av336162034/">av336162034</a> 2021-10-17</li>
</ol>
<blockquote id="fn_1">
<sup>1</sup>. <a href="https://zh.moegirl.org.cn/Starlight_Prologue">萌娘百科詞條 Starlight Prologue</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <a href="https://zh.moegirl.org.cn/Liella!">萌娘百科詞條 Liella!</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. <a href="https://zh.moegirl.org.cn/Snow_halation">萌娘百科詞條 Snow Halation</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_4">
<sup>4</sup>. <a href="https://zh.moegirl.org.cn/起始是你的天空">萌娘百科詞條 始まりは君の空</a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_5">
<sup>5</sup>. <a href="https://zh.moegirl.org.cn/Nonfiction!!">萌娘百科詞條 Nonfiction!!</a><a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_6">
<sup>6</sup>. <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~">萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~</a><a href="#reffn_6" title="Jump back to footnote [6] in the text."> &#8617;</a>
</blockquote>
<p>文字內容引用遵守《知識共享 署名-非商業性使用-相同方式共享 3.0》協議。</p>
]]></content>
      <tags>
        <tag>Virtual Artists (虛擬藝人)</tag>
      </tags>
  </entry>
  <entry>
    <title>駕考科目I 相關</title>
    <url>/next-nest/2022/01/17/driving-license-subject1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>如題，選擇判斷題需要記住關鍵數字，警告標識題需要培養常識。</p>
<span id="more"></span>
<h2 id="Numerical"><a href="#Numerical" class="headerlink" title="Numerical"></a>Numerical</h2><ol>
<li>連續駕駛超過<code>4小時</code></li>
<li>休息不得少於<code>20分鐘</code></li>
<li>不允許考駕照的情況: 假一吊二撤三醉五逃終身<ul>
<li>申領駕照期間提供虛假或偽造信息<code>一年</code>內禁考</li>
<li>吊銷資格後<code>二年</code>不能申請駕照</li>
<li>撤消資格後<code>三年</code>不能申請駕照</li>
<li>醉駕後<code>五年</code>不能申請駕照</li>
<li>駕車肇事逃逸，<code>終生</code>不能重新申請駕照</li>
</ul>
</li>
<li>實習期<code>12個月</code></li>
<li>駕照有效期分別由 <code>6年</code> <code>10年</code> <code>終身</code></li>
</ol>
<h2 id="Values"><a href="#Values" class="headerlink" title="Values"></a>Values</h2><ol>
<li>站<code>30</code> 口<code>50</code></li>
<li>能見度:<ul>
<li><code>200m</code>: 限速<code>60km/h</code>，車距<code>100m</code></li>
<li><code>100m</code>: 限速<code>40km/h</code>，車距<code>50m</code></li>
<li><code>50m</code>: 限速<code>20km/h</code>，儘快離開（但不要加速）</li>
</ul>
</li>
<li>同向<ul>
<li>三車道速度(從左至右): <code>110-120</code> / <code>90-110</code> / <code>60-90</code></li>
<li>雙車道速度: <code>100-120</code> / <code>60-100</code></li>
</ul>
</li>
<li>小車的公路車距<ul>
<li>大於<code>100km</code>: <code>100m</code>以上</li>
<li>小於<code>100km</code>: <code>50m</code>以上</li>
</ul>
</li>
<li>地面上是否有交通標識線的時候:<ul>
<li>無: 城區<code>30km/h</code>，公路<code>40km/h</code></li>
<li>有: 城區<code>50km/h</code>，公路<code>70km/h</code></li>
</ul>
</li>
<li>特殊道路一般限速<code>30km/h</code></li>
</ol>
<h2 id="Deductions"><a href="#Deductions" class="headerlink" title="Deductions"></a>Deductions</h2><ol>
<li>扣除<code>6分</code>: 車道燈<ul>
<li>不避讓校<strong>車</strong></li>
<li>違法佔用應急車<strong>道</strong></li>
<li>違反交通信號<strong>燈</strong></li>
</ul>
</li>
<li>扣除<code>12分</code>: 高準酒事號證五<ul>
<li><strong>高</strong>速公路倒車逆行</li>
<li>與<strong>準</strong>駕車型不符</li>
<li><strong>酒</strong>後、<strong>事</strong>故後逃逸，但不構成犯罪</li>
<li>偽造遮擋車牌<strong>號</strong></li>
<li>偽造或更改行駛<strong>證</strong></li>
<li>超過規定時速 <strong><code>50%</code></strong></li>
</ul>
</li>
</ol>
<h2 id="Traffic-Accident-Crime"><a href="#Traffic-Accident-Crime" class="headerlink" title="Traffic Accident Crime"></a>Traffic Accident Crime</h2><p>交通肇事罪:</p>
<ol>
<li>酒駕</li>
<li>毒駕</li>
<li>無駕駛資格證駕駛</li>
<li>車輛安全隱患</li>
<li>無車牌報廢車</li>
<li>肇事逃逸</li>
<li>嚴重超載</li>
</ol>
<h2 id="Tricks"><a href="#Tricks" class="headerlink" title="Tricks"></a>Tricks</h2><ol>
<li>左轉讓右轉，轉彎讓直行</li>
<li>判斷題出現 <code>觀察</code>、<code>避免</code> 等字樣的大多數時<strong>正確</strong></li>
<li>選擇題出現 <code>拘役</code> 字樣大多數時<strong>正確</strong></li>
</ol>
<h2 id="Extra"><a href="#Extra" class="headerlink" title="Extra"></a>Extra</h2><p>知識點：</p>
<ol>
<li>《中華人民共和國刑法》第一百三十三條<ul>
<li>違反交通運輸管理法規，因而發生重大事故，致人重傷、死亡或者使公私財產遭受重大損失的，處<code>三年以下有期徒刑</code>或者<code>拘役</code>；</li>
<li>交通運輸肇事後逃逸或者有其他特別惡劣情節的，處<code>三年以上七年以下有期徒刑</code>；</li>
<li>因逃逸致人死亡的，處<code>七年以上有期徒刑</code>。</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>考試</tag>
      </tags>
  </entry>
  <entry>
    <title>不同語言中節點結構的定義 I</title>
    <url>/next-nest/2021/11/27/different-nodes-01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>鏈表節點</p>
<span id="more"></span>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    ListNode *next;</span><br><span class="line">    <span class="built_in">ListNode</span>(<span class="keyword">int</span> x) : <span class="built_in">val</span>(x), <span class="built_in">next</span>(<span class="literal">NULL</span>) &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><figcaption><span>C#</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ListNode</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> val;</span><br><span class="line">    <span class="keyword">public</span> ListNode next;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ListNode</span>(<span class="params"><span class="built_in">int</span> x</span>)</span> &#123;</span><br><span class="line">        val = x;</span><br><span class="line">        next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><figcaption><span>Java</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    ListNode next;</span><br><span class="line">    ListNode(<span class="keyword">int</span> x) &#123;</span><br><span class="line">        val = x;</span><br><span class="line">        next = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><figcaption><span>JavaScript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ListNode</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.val = val;</span><br><span class="line">    <span class="built_in">this</span>.next = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Or in TypeScript ...</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span> </span>&#123;</span><br><span class="line">    <span class="attr">val</span>: number</span><br><span class="line">    <span class="attr">next</span>: ListNode | <span class="literal">null</span></span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">val?: number, next?: ListNode | <span class="literal">null</span></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.val = (val===<span class="literal">undefined</span> ? <span class="number">0</span> : val)</span><br><span class="line">        <span class="built_in">this</span>.next = (next===<span class="literal">undefined</span> ? <span class="literal">null</span> : next)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight py"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        self.val = x</span><br><span class="line">        self.<span class="built_in">next</span> = <span class="literal">None</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「文章】中文测试</title>
    <url>/next-nest/2019/03/13/essay-2019-0313/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><blockquote>
<p>是为本站一篇普通的post，但实质为中文测试。<br>是两篇我喜欢的文章，<br>曾在我几乎要放弃自己时为我带来过希望。</p>
</blockquote>
<span id="more"></span>
<h2 id="header2-1">木偶</h2>

<blockquote><p>阅读下面的材料，根据要求写一篇不少于800字的文章。</p>
<p>一位表演艺术家和一位剧作家就演员改动剧本台词一事，发表了不同的意见。</p>
<ul>
<li>表演艺术家说：演员是在演戏，不是念剧本，可以根据表演的需要改动台词。</li>
<li>剧作家说：剧本是一剧之本，体现了作者的艺术追求；如果演员随意改动台词，就可能违背创作的原意。</li>
</ul>
<p>要求选好角度，确定立意，明确文体(诗歌除外)，自拟标题，不要脱离材料内容及含意的范围作文：不要套作，不得抄袭，不得透露个人相关信息；书写规范，正确使用标点符号。</p>
<footer><strong>安徽省2014高考作文</strong></footer></blockquote>
<p>“生命是碧绿的滕蔓，四处蔓延无限生长；生命是脱缰的野马，日夜不歇拼命奔跑；生命是无尽的长河，昼夜不息奔流入海。生命是有活力的，不应因任何事而萎靡不振！”他的话如同战场上响起的号角，振奋人心，台下顿时掌声雷动，站在领奖台上的他，脸上挂满了自信与骄傲的微笑。</p>
<p>十几年前的他，极其普通，领着微薄的工资，每天重复着同样的生活，像是台老旧的电视机，只有黑白两种颜色。而他周围的人似乎也都过着同样的生活，就像是牵线木偶一样，掌控自己的并不是自己都是理想，而是来自生活的压力。</p>
<p>他有梦想，不相信自己只是个木偶，总幻想着某一天能实现自己的梦想，被万众瞩目。为了这个梦，他一直很努力。生活在他的眼里并不是单调的，因为他有一颗向上的心，他始终觉得，未来并不遥远。</p>
<p>可总有人要来打碎他的梦。</p>
<p>一个自称可以预知未来的人告诉他，命运的剧本早已写好，十年后的他依旧会如此碌碌无为。那人劝他安心生活，别为了所谓的梦想而试图改变。</p>
<p>一开始他并不相信，但当他的生活一步步与命运的剧本契合时，他有些泄气了。他想，也许自己注定平凡，也许自己只能重复黑白默片般的生活，也许自己只能庸碌一生。</p>
<p>命运的线提着他，他开始妥协，相信每个人的剧本都是既定的，并不会因为他的个性和梦想而有所改变，他只是个木偶而已。在他的脸上已然看不到任何憧憬，他梦想的火苗即将熄灭。</p>
<p>他一个人一直走，漫无目的，在生活的岔路口站立、徘徊、彷徨。</p>
<p>一天，当一丛藤蔓突然映入他的眼帘时，他震惊了！藤蔓四处蔓延，交相生长，满眼翠绿，透着旺盛的生命力！它们生在不起眼的角落，却在此拼命地展现着自己，也许曾枯萎过很多次，可每一次它们都战胜了命运，又茂盛起来，并且不断地疯长，努力地疯长！</p>
<p>他像被冷水泼了脑袋，清醒了，命运的剧本何不可改写？每个人都是不一样的，为什么要过着一样的生活？每个人都可以改写自己命运的剧本，让自己的生活丰满起来，我们不是木偶！</p>
<p>他重新振作了，又一次朝着梦想前进。他开始有所期待，期待草上晶莹的露珠，期待翩跹而至的蝴蝶，期待明天和煦的阳光，期待风雨过后的彩虹…他努力生活着，享受着一点一滴的改变。即使没能实现梦想，也至少为改变命运努力过，他想。</p>
<p>此刻的他站在颁奖台上，被一束专属于他的灯光照耀着，毫无疑问，他成功了。他成了一名著名作家，每天奋笔疾书。他用笔杆打破了命运的牢笼，谱写了崭新的人生剧本。</p>
<p>那个自称能预知命运的人告诉他――他十年后仍旧会庸碌无为，殊不知他十一年后成功了。</p>
<p>命运为我们设定好生老病死的情节，我们无法抗拒；但生命也给予我们创造的活力，我们应努力应用。我们是命运手上的脱线木偶，努力抗争，终会赢得属于自己的精彩人生。</p>
<h2 id="header2-2">水底的微光</h2>

<p>任紫钰</p>
<blockquote><p>阅读下面的文章，完成题目。</p>
<footer><strong>题目来源</strong><cite><a href="https://cd.jiajiaoban.com/e/20180521/5b02cda46ccd3.shtml">cd.jiajiaoban.com/e/20180521/5b02cda46ccd3.shtml</a></cite></footer></blockquote>
<p>他试了试水，温的。</p>
<p>一群孩子聚集在浅水区，水汽笼着他们，只能听见他们说笑的声音，像哗哗的流水。这个游泳馆有些年头儿了，暗沉的池水映着斑驳的墙壁，到处都雾蒙蒙的。来这里的多是周边在社会底层讨生活的工人，像他和他的工友们。这是个星期二，深水区空无一人，他对自己说：“很好，很完美。”此时在他的心里，游泳就是一种神圣的仪式，只有在无人之处，安静时分才显出意义。</p>
<p>只几秒的时河，水便淹没了他，从脚趾到头顶。在润滑的温暖里，他想起了四面环山的故乡，想起了大海。现在，他北上打工，离海更远了。他只能偶尔来这池水里想象大海，想象自己抓住了海的一片衣角。</p>
<p>他将头深埋进水里。水淹没了他的五官，阻断了他与世界那细若游丝的联系。拍拍耳廓，能听见孤独的声音。在这回声里，他不断下沉。终于，他的脊梁接触到池底，他的身体微微发颤。他竟然想起了社区的图书室。图书室不大，十几平方米的样子，里面逼仄地挤着几排书架。闲时，他总爱去那里看书，一看就是几个小时，阳光透过窗棂，照着空气中悠闲翻飞的尘埃，他竟觉得很美，美得如他的梦境。在那无数次出现的梦境里。他是一个手捧诗集的白衣少年。把他从梦境中惊醒的总是他那些粗鲁的工友、整日骂骂咧咧的食堂师傅、颐指气使的工头儿。就是在那间图书室里，他遇见了太宰治的《人间失格》。才翻上两页，他就觉得像腿上刚结痂的伤口瘙痒难耐。他边读边想，所谓的字字珠玑，说的就是这样的文字吧。读到一半，他用袖子遮住了满脸的泪水，在人们诧异的眼神中匆匆离开。他开始攒钱，两个月后，他买下了《人间失格》。他用干净的细白棉布把书包好，珍重地放好。</p>
<p>过了几个月，工头儿开始拖欠工资。他和工友急了，追着讨要。又怕因此丢了饭碗。他和几个人商量，要告，联名书签了好几页，到了站街那天，却只剩了他。他挥舞着名单，想抓住最后一根稻草。他说：“你们一起来啊！这是我们应得的！”工友们纷纷别过脸去，不看他。他感到有口气憋在嗓子里，憋得他胸口闷疼。他跑出了工棚，陪着他的只有身后的风。</p>
<p>他终归是无处可去。天黑了。他回到工棚。屋里人头攒动，地上一片狼藉。包书的细白棉布躺在地上，一片污浊。工头儿扭头看着他，半笑不笑地说：“还知道回来，能耐了啊？！”说着，他从一个工友手里拿过那本《人间失格》一撕两半，扔在地上。工头儿又环视工友们，吆喝着：“都愣着干嘛？”工友们互相看看，又看看他，看看工头儿。终于，有几个工友对他动手了。拳头落在他的背上，手掌推搡在他的臂上。说实话，并不重。可他，承受不了。他再次转身跑了，跑进了这个游泳池。</p>
<p>水继续淹没着他。他的胸膛感受到了压力，他体验到了一种生命的快感。他的耳边想起了太宰治的话：“<strong>幸福感，就是沉入悲哀之河的河底的那些闪着微光的金砂。就是那种感觉吧，经历过悲伤的极服，心情不可思议地，朦胧地明亮起来。</strong>”</p>
<p><em>他的胸腔撕裂般疼痛，他再也无法控制自己，他口鼻全张，水一股脑灌下去，顺过气管刀枪一样呛入。他的身子开始抽搐，水恣意地从四面八方挤进毛孔……黑暗应该如约而至了。就在黑暗来临前的瞬间，他看到了水底的微光。</em>在水底的微光中，他看见了工友们的脸孔，那些他再也不想见到的脸孔。他能感到工友们粗糙的手，一双一双锤在他的背上，按在他的胸前。说实话，这力道比在工棚打他的时候重多了。他甚至还听见他们透着痛惜的骂声：“这个闷憨书生，就知道他心里不痛快了会来这里，万没想到他会寻死！”“这个憨货要真见阎王了，我们这些人这辈子也别想安生了。”</p>
<p>他努力睁开眼，透过工友们的肩膀，看到了浅水区的孩子们。那些孩子都惊讶地站立在水中，他们明亮的面孔犹如开在晨雾中的新鲜花朵。</p>
<p>(选自《金山》2017年第4期，有删改)</p>
<p>题目如下:</p>
<ol>
<li><p>下列对小说相关内容和艺术特色的分析鉴赏，不正确的一项是(3分)<br>A. 第二段的环境描写既再现了这个“有些年头儿”的游泳馆陈旧破败、水汽迷蒙的特点，也烘托了主人公沉重黯淡的心情。<br>B. 读书读到满脸泪水、用干净的细白棉布包书、受了委屈选择轻生，这些情节都体现了小说主人公性格敏感脆弱的一面。<br>C. 虽然工友打得“并不重”，但“他”还是“承受不了”，说明“他”无法忍受的不是工友们的打击和推搡，而是他们的出卖和背叛。<br>D. 小说善于运用对比手法，如第四段中梦境与惊醒后的情景形成对比，表现主人公人生追求与现实之间的巨大反差，突出了其不幸遭遇。</p>
<ul>
<li>答案: B</li>
<li>解析: 用干净的细白棉布包书”体现的不是小说主人公性格的敏感脆弱，而是对书的珍视。</li>
</ul>
</li>
<li><p>小说在叙事谋篇方面很有特点，请简要说明。(5分)</p>
<ul>
<li>答案:<ol>
<li>运用插叙手法，插入主人公读书、讨薪等内容，交代事件的起因、人物的遭际（使情节的发生发展更合理）;</li>
<li>现实与回忆交织，把主人公在泳池里真实的感受与对故乡、大海、社区图书馆的回忆巧妙融合（巧妙推进故事情节，有利于展现人物心理，突出人物形象）;</li>
<li>时空集中，故事发生在“泳池”这一地点，“他”准备轻生到被工友救起这一时间段（情节紧凑）;</li>
<li>前后照应，如开头结尾都有对浅水区孩子们的描述，之前只能听见他们的说笑，后来看到了他们“明亮的面孔”。</li>
</ol>
</li>
<li>备注: 答出一点给2分，答出任意两点给5分；意思对即可。如有其他答案，可酌情给分。</li>
</ul>
</li>
<li><p>请结合全文，分析小说标题“水底的微光”的丰富意蕴。(6分)</p>
<ul>
<li>答案:<ol>
<li>水底的微光是指真实的光。“他”被救上岸时在濒临死亡的状态下感受到的光亮;</li>
<li>也指希望之光。“他”曾以为粗鲁软弱的工友背叛了自己，陷入到绝望的水底，但工友们的关爱和及时救助给轻生的“他”以希望;</li>
<li>指卑微人性中的善良之光。这些工友虽然临事怯懦、屈从权势、“助纣为虐”，却并非因为邪恶，而只是对现实的妥协，他们仍然怀着善良友爱之心;</li>
<li>还可指梦想之光。“他”虽然在社会底层讨生活，却仍酷爱读书，珍爱书籍，心存梦想;</li>
<li>指温暖之光。遥远大海边的故乡带给远离家乡、北上打工的“他”心灵的温暖。</li>
</ol>
</li>
<li>备注: 答出一点给2分，答出任意三点、意思对即可。</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>Essays (随笔)</tag>
      </tags>
  </entry>
  <entry>
    <title>「随笔】写在成人礼之后</title>
    <url>/next-nest/2019/05/18/essay-2019-0518/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>2019年5月18日，写在成人礼之后。</p>
<span id="more"></span>
<p>今晚在五四广场走了一遭, 看到了震撼人心的灯光表演</p>
<p>关于未来, 我想了很多</p>
<p>前几日刚刚参加了成人礼——我们已经长大成人了</p>
<p>未来, 我们将要面临很多压力</p>
<p>我们可能要为了家庭, 工作, 财产等等而放弃很多东西</p>
<p>可能包括梦想, 良知, 甚至是被感动的能力</p>
<p>我不想长大…可是我还没同意就…一切都已经定格了…</p>
<p>珍惜年少美好的时光吧, 可能就像这一闪光一样随风消逝了</p>

    <div id="aplayer-EbFyrGVk" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="562675543" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>
]]></content>
      <tags>
        <tag>Essays (随笔)</tag>
      </tags>
  </entry>
  <entry>
    <title>「日志】XRS集训I</title>
    <url>/next-nest/2019/07/15/essay-2019-0715/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>2019年7月15日，XRS数学集训Day1。</p>
<span id="more"></span>
<p>我差不多是在还有30min上课就到达教室了，当时教室里也就七八个人，除了某位学神在玩手机之外其他人都在肝作业。</p>
<p>今天见到了传说之中的刁文昊学神（本尊，说实话和想象中的有些出入）、前两天就见到的辛若沫学神和已有很久没有见到的栾澍学神。</p>
<p><strong>Day1复习的是解三角形和数列，后者包括裂项相消和差位相减。</strong></p>
<p>课后测该死地错了一大坨，真的是好久没复习这块内容了，加之一开始学的也不太好，所以做得很萎貌似可以预料。</p>
<p>（我们安利杨冰老师去听了《鸡你太美》（有一个著名的翻唱叫《只因你太美》），然后他就开始在我们班疯狂地播放这首歌。）</p>

    <div id="aplayer-wyaZiFnK" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1358620636" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>
]]></content>
      <tags>
        <tag>Essays (随笔)</tag>
      </tags>
  </entry>
  <entry>
    <title>「日志】XRS集训II</title>
    <url>/next-nest/2019/07/16/essay-2019-0716/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>2019年7月16日，XRS数学集训Day2。</p>
<span id="more"></span>
<p>今天早晨到教室的时间跟昨天差不多。</p>
<p><strong>Day2讲的是空间几何和矢量运算（@一方通行）。</strong></p>
<p>好久没做空间几何了，所以一开始在用纯几何方法（不建立空间直角坐标系）的时候做起题来非常吃力，不过做着做着就感觉好些了。</p>
<p>今天我发现是个学神都在玩手机，看来也就是我这样的菜鸡需要学习qaq。</p>
<p>今天上午还是阴天，下午的天气就好多了，令人想到<a href="https://baike.baidu.com/item/米津玄师/703289">米津玄师</a>的《Lemon》。</p>

    <div id="aplayer-AeWbWAeT" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="573747359" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>
]]></content>
      <tags>
        <tag>Essays (随笔)</tag>
      </tags>
  </entry>
  <entry>
    <title>「日志】XRS集训III</title>
    <url>/next-nest/2019/07/17/essay-2019-0717/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>2019年7月17日，XRS数学集训Day3。</p>
<span id="more"></span>
<blockquote>
<p>我虽然只有18岁，但我比较内向，我的内心住着一只小公举。<br>——杨冰</p>
</blockquote>
<p>蒸鹅心</p>
<p>今天感觉做的还可以，课后测也就一道大题最后的数学期望算错了，无伤大雅。</p>
<p><strong>Day3把空间解析几何收尾，主攻概率统计。</strong></p>
<p>明天圆锥曲线怕不是要干爆一批人，可能上来就能把我锤爆，耳边回响起了八爷的《LOSER》。</p>

    <div id="aplayer-xDMCoMCs" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1324466790" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>
]]></content>
      <tags>
        <tag>Essays (随笔)</tag>
      </tags>
  </entry>
  <entry>
    <title>「日志】XRS集训IV</title>
    <url>/next-nest/2019/07/18/essay-2019-0718/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>2019年7月18日，XRS数学集训Day4。</p>
<span id="more"></span>
<p>杨水大学四年差不多是白学了，竟然把 $\sigma$ (Sigma)读成了 $\epsilon$ (Epsilon)。</p>
<p>今天下了不小的雨，虽说是阵雨也还是引起了不小的紧张气氛，杨冰还格外殷勤地关心我们是否有带上之类的。</p>
<p><strong>Day4结束了椭圆的学习，明天开双曲线和抛物线。</strong>课后测不知为何难得一批，做起来也难受得一批。全班上下没有全对的，杨水决定奖励仅错了一道题的两位学神——于宜萌和刁文昊——帮他们分别实现一个愿望，然而前者许愿要100个愿望，后者想要帮忙氪金648.。。</p>
<p>好吧，我自己做得差得一批，错了三道题目，两道计算错一道审错题。</p>

    <div id="aplayer-uKIYxEMa" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="33223391" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>
]]></content>
      <tags>
        <tag>Essays (随笔)</tag>
      </tags>
  </entry>
  <entry>
    <title>「日志】写在第一次成功击穿次元壁之后</title>
    <url>/next-nest/2020/11/06/essay-2020-1106/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><blockquote><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">Whereof whats past <span class="keyword">is</span> prologue, what to come <span class="keyword">in</span> yours <span class="keyword">and</span> my discharge.</span><br></pre></td></tr></table></figure>
<p>凡此过往，皆为序章。（前方未知的未来，由你我的双手铺就。）</p>
<footer><strong>William Shakespeare</strong><cite>the Tempest</cite></footer></blockquote>
<span id="more"></span>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>前段时间承蒙导师信任，被安排前去参加曾经梦寐以求的数据科学界的<a href="https://kaggle.com/">Kaggle</a>竞赛，根据队中哥哥姐姐们的兴趣与他们选定了<a href="https://www.kaggle.com/c/titanic/">Titanic</a>与<a href="https://www.kaggle.com/c/digit-recognizer/">MNIST</a>两道题目，<del>虽然做的工作很少，但也算是为这两道（大水）题处心积虑煞费苦心</del>。</p>
<p>虽由于网络原因尚未提交submission，但这两个project的<code>accuracy</code>已经达到预期目标，可以告一段落。</p>
<p>而在后面，还有我们最终要做的<a href="https://www.kaggle.com/c/gan-getting-started/">基于<code>GAN</code>生成Monet作品</a>一项，目前征程尚未结束，我还需要继续努力。<del>（但是现在来考虑，至于还要不要做那道题目，可能是未知数，因为我们可能会换作进行别的project）</del></p>
<p><del>(最近要复习数学和代数的期中考试，因此一直没有整理这一块的内容QAQ)</del></p>

    <div id="aplayer-hpYrIgVw" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1294899575" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>
<h2 id="Neural-Style-Transfer"><a href="#Neural-Style-Transfer" class="headerlink" title="Neural Style Transfer"></a>Neural Style Transfer</h2><p>基于<code>VGG19</code>与<code>L-BFGS-B</code>优化算法的NST(神经样式迁移)。</p>
<h3 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h3><p>这个project最早是2018年年底在Keras之父所著的《Deep Learning with Python》上关于生成式深度学习一部分看到的，NST这个算法经常被与DeepDream算法一并提起，后者DeepDream是向给定的现实图像注入细节以生成魔幻（非）现实主义的“梦境”图像。</p>
<p>但我们今天讨论的重点在于前者亦即神经样式迁移，这是由Leon A. Gatys, Alexander S. Ecker, Matthias Bethge三人于文献《A Neural Algorithm of Artistic Style》提出的，与DeepDream拥有诸多相同之处。</p>
<p>其目标在于改变现实图像的细节，以使生成图像具备参考图像的画风，例如使一张现实中的青岛市中山路街道夜景变得像梵高画出来的一样，在像这样的过程之中便可以参考梵高的的《Starry Night》以进行变换。</p>
<p>下面这幅图生动传神地刻画了现实图像被注入目标风格的过程<del>(，虽说操作的对象并不是中山路街道夜景就是啦)</del></p>
<p><img src="/next-nest/2020/11/06/essay-2020-1106/nst_overview.jpeg" alt="Neural Style Transfer"></p>
<blockquote>
<p>Keywords:</p>
<ul>
<li>Neural Style Transfer (NST)</li>
<li>VGG19</li>
<li>Gram Matrix</li>
<li>L-BFGS-B</li>
</ul>
<p>…</p>
</blockquote>
<h3 id="Loss-Functions"><a href="#Loss-Functions" class="headerlink" title="Loss Functions"></a>Loss Functions</h3><p>作为文献作者的Gatys认为在convnet之中图像的<code>内容</code>与<code>样式</code>被在后面的层中分立表示，例如Gatys老哥用的VGG19中，最后一个block倒数第三个卷积层(即<code>block5_conv2</code>)被用于表示进入convnet被处理的现实图像的内容，而每一个block的第一个卷积层(<code>block1_conv1</code>，<code>block2_conv1</code>…一直到<code>block5_conv1</code>都是)皆被用于表示进入convnet被处理的现实图像的样式。</p>
<p>用convnet中不同的层的隐层输出表示内容和样式之后，可以定义相应的内容损失<code>content_loss</code>和样式损失<code>style_loss</code>，内容损失很好理解其实就是生成图像与现实图像的特征图之间的差量再平方，这就比较类似于我们所熟悉的mse，如若是绝对值的话(我觉得可能)也可以，就比较类似于mae。</p>
<p>与内容损失不同，样式损失通过一个叫做<a href="https://planetmath.org/grammatrix">Gram Matrix</a>的东西来进行刻画：</p>
<script type="math/tex; mode=display">G_{i,j}^l = F_{i,k}^l \cdot F_{j,k}^l</script><script type="math/tex; mode=display">\Delta(\alpha_1, \alpha_2, \dots, \alpha_k)

= A^T A

= \begin{bmatrix} \alpha_1^T \\ \alpha_2^T \\ \vdots \\ \alpha_k^T \end{bmatrix} \cdot (\alpha_1, \alpha_2, \cdots, \alpha_k)

= \begin{bmatrix}
\alpha_1^T \alpha_1 & \alpha_1^T \alpha_2 & \cdots & \alpha_1^T \alpha_k \\
\alpha_2^T \alpha_1 & \alpha_2^T \alpha_2 & \cdots & \alpha_2^T \alpha_k \\
\vdots              & \vdots              & \ddots & \vdots              \\
\alpha_k^T \alpha_1 & \alpha_k^T \alpha_2 & \cdots & \alpha_k^T \alpha_k \\
\end{bmatrix}</script><p>或是千言万语不及一幅图？</p>
<p><img src="/next-nest/2020/11/06/essay-2020-1106/grammat.jpeg" alt="Gram Matrix"></p>
<p>所以我们可以从公式或者图看出，这个Gram Matrix实质上就是把矩阵视为一个矢量组，让矢量组之间互相点积得到的结果，所以能够反映出矩阵内部矢量与矢量之间的<strong>自相关性</strong>。这样的相关性从convnet较高层一直保留到较低层，从而保留的是样式。特征相互关系捕捉到的是纹理(texture)，生成图像和参考图像纵使在不同的空间尺度上亦应当具有相同的纹理。</p>
<p>除内容与样式之外，我们还要考虑生成图像的连贯性或者说连续性，以避免生成的结果过度像素化以至于令人感到非常违和，因此Gatys老哥还定义了总变差损失<code>total_variation_loss</code>，简单地说就是：</p>
<blockquote>
<p>(这个project在梯度下降过程之前用到的只是一些简单的对张量的数值代数处理，因此我们</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> keras, keras.backend <span class="keyword">as</span> T</span><br></pre></td></tr></table></figure>
<p>)</p>
</blockquote>
<figure class="highlight py"><figcaption><span>Total Variation Loss</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">total_variation_loss</span>(<span class="params">x</span>):</span></span><br><span class="line">    a = T.square(</span><br><span class="line">        x[ : , : (img_height - <span class="number">1</span>) , : (img_width - <span class="number">1</span>) , : ] -</span><br><span class="line">        x[ : , <span class="number">1</span> :                , : (img_width - <span class="number">1</span>) , : ]</span><br><span class="line">        )</span><br><span class="line">    b = T.square(</span><br><span class="line">        x[ : , : (img_height - <span class="number">1</span>) , : (img_width - <span class="number">1</span>) , : ] -</span><br><span class="line">        x[ : , : (img_height - <span class="number">1</span>) , <span class="number">1</span> :               , : ]</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">return</span> T.<span class="built_in">sum</span>(T.<span class="built_in">pow</span>(a + b, <span class="number">1.25</span>))</span><br></pre></td></tr></table></figure>
<p>对生成图像取了从左上角到倒数第二列倒数第二行的窗口，分别与窗口向右、向下平移一格的窗口作差。这个新定义的损失与我们见过的各种损失同样不可能为零，毕竟除了纯色图之外不可能所有的点与其相邻的点颜色一模一样。明确了三类需要的损失之后，最终需要优化的损失便是三者之和：</p>
<script type="math/tex; mode=display">Loss = Loss_{content} + \sum Loss_{style} + Loss_{variation}</script><h3 id="Optimization"><a href="#Optimization" class="headerlink" title="Optimization"></a>Optimization</h3><p>采用<code>L-BFGS-B</code>算法进行优化，<code>BFGS</code>算法是由Broyden, Fletcher, Goldfarb, Shanno四名科学家提出的优化牛顿迭代法的产物，其改进版<code>L-BFGS</code>算法中的L指代<code>limited_memory</code>即对内存的限制，而再次改进的<code>L-BFGS-B</code>算法中的B指代<code>bound</code>即进一步使<code>L-BFGS</code>支持了极小化过程中对变量施加约束。总的来说这一套发展路程差不多就是<code>Newton -&gt; BFGS -&gt; L-BFGS -&gt; L-BFGS-B</code>，而牛顿迭代法可以通过下方的动图加以理解：</p>
<p><img src="/next-nest/2020/11/06/essay-2020-1106/newton.gif" alt="Newton Iteration"></p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>最后我们放一下代码：</p>
<figure class="highlight py"><figcaption><span>Neural Style Transfer</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env Python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">TensorFlow version: 1.11.0</span></span><br><span class="line"><span class="string">Keras version: 2.1.6</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> keras</span><br><span class="line"><span class="keyword">from</span> keras.preprocessing <span class="keyword">import</span> image</span><br><span class="line"><span class="keyword">from</span> keras.applications <span class="keyword">import</span> vgg19</span><br><span class="line"><span class="keyword">import</span> keras.backend <span class="keyword">as</span> T</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> optimize, misc</span><br><span class="line"><span class="keyword">import</span> time, os</span><br><span class="line"></span><br><span class="line"><span class="comment"># Constants</span></span><br><span class="line"></span><br><span class="line">TARGET_IMAGE_PATH = <span class="string">&quot;./images/target.jpeg&quot;</span></span><br><span class="line">REFERENCE_IMAGE_PATH = <span class="string">&quot;./images/amaterasu.jpeg&quot;</span></span><br><span class="line"></span><br><span class="line">WIDTH, HEIGHT = image.load_img(TARGET_IMAGE_PATH).size</span><br><span class="line">IMG_HEIGHT = <span class="number">508</span></span><br><span class="line">IMG_WIDTH = <span class="number">904</span> <span class="comment"># int(WIDTH * IMG_HEIGHT / HEIGHT)</span></span><br><span class="line"></span><br><span class="line">VGG19_MEAN_RGB = [ <span class="number">103.939</span>, <span class="number">116.779</span>, <span class="number">123.680</span> ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tool Functions</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preprocessing_image</span>(<span class="params">image_path</span>):</span></span><br><span class="line">    img = image.load_img(image_path, target_size=(IMG_HEIGHT, IMG_WIDTH))</span><br><span class="line">    img = image.img_to_array(img)</span><br><span class="line">    img = np.expand_dims(img, axis=<span class="number">0</span>)</span><br><span class="line">    img = vgg19.preprocess_input(img)</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    or process like this:</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; img = keras_applications.vgg19.preprocess_input(img, backend=keras.backend)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> img</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deprocess_image</span>(<span class="params">x</span>):</span></span><br><span class="line">    x[ : , : ] += VGG19_MEAN_RGB</span><br><span class="line">    x = x[ : , : , : : (-<span class="number">1</span>) ]</span><br><span class="line">    x = np.clip(x, <span class="number">0</span>, <span class="number">255</span>).astype(np.uint8)</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="comment"># Preprocessing</span></span><br><span class="line"></span><br><span class="line">target_image = preprocessing_image(TARGET_IMAGE_PATH)</span><br><span class="line">target_image = T.constant(target_image)</span><br><span class="line">reference_image = preprocessing_image(REFERENCE_IMAGE_PATH)</span><br><span class="line">reference_image = T.constant(reference_image)</span><br><span class="line">combination_image = T.placeholder([ <span class="number">1</span>, IMG_HEIGHT, IMG_WIDTH, <span class="number">3</span> ])</span><br><span class="line"></span><br><span class="line">input_tensor = T.concatenate([ target_image, reference_image, combination_image ], axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">model = vgg19.VGG19(<span class="literal">False</span>, <span class="string">&quot;imagenet&quot;</span>, input_tensor)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;VGG19 model loaded.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">content_loss</span>(<span class="params">base, combination</span>):</span></span><br><span class="line">    <span class="keyword">return</span> T.<span class="built_in">sum</span>(T.square(combination - base))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gram_matrix</span>(<span class="params">x</span>):</span></span><br><span class="line">    features = T.batch_flatten(T.permute_dimensions(x, (<span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>)))</span><br><span class="line">    gram = T.dot(features, T.transpose(features))</span><br><span class="line">    <span class="keyword">return</span> gram</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">style_loss</span>(<span class="params">style, combination</span>):</span></span><br><span class="line">    S = gram_matrix(style)</span><br><span class="line">    C = gram_matrix(combination)</span><br><span class="line">    channels = <span class="number">3</span></span><br><span class="line">    size = IMG_HEIGHT * IMG_WIDTH</span><br><span class="line">    <span class="keyword">return</span> T.<span class="built_in">sum</span>(T.square(S - C)) / (<span class="number">4.</span> * (channels ** <span class="number">2</span>) * (size ** <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">total_variation_loss</span>(<span class="params">x</span>):</span></span><br><span class="line">    a = T.square(x[ : , : (IMG_HEIGHT - <span class="number">1</span>) , : (IMG_WIDTH - <span class="number">1</span>) , : ] - x[ : , <span class="number">1</span> : , : (IMG_WIDTH - <span class="number">1</span>) , : ])</span><br><span class="line">    b = T.square(x[ : , : (IMG_HEIGHT - <span class="number">1</span>) , : (IMG_WIDTH - <span class="number">1</span>) , : ] - x[ : , : (IMG_HEIGHT - <span class="number">1</span>) , <span class="number">1</span> : , : ])</span><br><span class="line">    <span class="keyword">return</span> T.<span class="built_in">sum</span>(T.<span class="built_in">pow</span>(a + b, <span class="number">1.25</span>))</span><br><span class="line"></span><br><span class="line">outputs_dict = <span class="built_in">dict</span>([ (layer.name, layer.output) <span class="keyword">for</span> layer <span class="keyword">in</span> model.layers ])</span><br><span class="line"></span><br><span class="line">CONTENT_LAYER = <span class="string">&quot;block5_conv2&quot;</span></span><br><span class="line">STYLE_LAYERS = [<span class="string">&quot;block1_conv1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;block2_conv1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;block3_conv1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;block4_conv1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;block5_conv1&quot;</span>]</span><br><span class="line"></span><br><span class="line">TOTAL_VARIATION_WEIGHT = <span class="number">1e-04</span></span><br><span class="line">STYLE_WEIGHT = <span class="number">1.</span></span><br><span class="line">CONTENT_WEIGHT = <span class="number">.025</span></span><br><span class="line"></span><br><span class="line">loss = T.variable(<span class="number">0.</span>)</span><br><span class="line">layer_features = outputs_dict[CONTENT_LAYER]</span><br><span class="line">target_image_features = layer_features[ <span class="number">0</span> , : , : , : ]</span><br><span class="line">combination_features = layer_features[ <span class="number">2</span> , : , : , : ]</span><br><span class="line"></span><br><span class="line">loss = loss + content_loss(target_image_features, combination_features)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> layer_name <span class="keyword">in</span> STYLE_LAYERS:</span><br><span class="line">    layer_features = outputs_dict[layer_name]</span><br><span class="line">    reference_features = layer_features[ <span class="number">1</span> , : , : , : ]</span><br><span class="line">    combination_features = layer_features[ <span class="number">2</span> , : , : , : ]</span><br><span class="line">    sl = style_loss(reference_features, combination_features)</span><br><span class="line">    loss = loss + (STYLE_WEIGHT / <span class="built_in">len</span>(STYLE_LAYERS)) * sl</span><br><span class="line"></span><br><span class="line">loss = loss + TOTAL_VARIATION_WEIGHT * total_variation_loss(combination_image)</span><br><span class="line"></span><br><span class="line"><span class="comment"># grads</span></span><br><span class="line"></span><br><span class="line">grads = T.gradients(loss, combination_image)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">fetch_loss_and_grads = T.function([combination_image], [loss, grads])</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Evaluator</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.loss_value = <span class="literal">None</span></span><br><span class="line">        self.grad_values = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">loss</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        <span class="keyword">assert</span> self.loss_value <span class="keyword">is</span> <span class="literal">None</span></span><br><span class="line">        x = x.reshape([ <span class="number">1</span>, IMG_HEIGHT, IMG_WIDTH, <span class="number">3</span> ])</span><br><span class="line">        outs = fetch_loss_and_grads([x])</span><br><span class="line">        loss_value = outs[<span class="number">0</span>]</span><br><span class="line">        grad_values = outs[<span class="number">1</span>].flatten().astype(<span class="string">&quot;float64&quot;</span>)</span><br><span class="line">        self.loss_value = loss_value</span><br><span class="line">        self.grad_values = grad_values</span><br><span class="line">        <span class="keyword">return</span> self.loss_value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">grads</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        <span class="keyword">assert</span> <span class="keyword">not</span>(self.loss_value <span class="keyword">is</span> <span class="literal">None</span>)</span><br><span class="line">        grad_values = np.copy(self.grad_values)</span><br><span class="line">        self.loss_value = <span class="literal">None</span></span><br><span class="line">        self.grad_values = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> grad_values</span><br><span class="line"></span><br><span class="line">evaluator = Evaluator()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Evaluator loaded!&quot;</span>)</span><br><span class="line"></span><br><span class="line">RESULT_PREFIX = <span class="string">&quot;result&quot;</span></span><br><span class="line">NUM_ITERATIONS = <span class="number">20</span></span><br><span class="line"></span><br><span class="line">x = preprocessing_image(TARGET_IMAGE_PATH)</span><br><span class="line">x = x.flatten()</span><br><span class="line"></span><br><span class="line">SAVE_DIR = <span class="string">&quot;results.%s&quot;</span> % time.time()</span><br><span class="line">os.system(<span class="string">&quot;mkdir %s&quot;</span> % SAVE_DIR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> idx_iteration <span class="keyword">in</span> <span class="built_in">range</span>(NUM_ITERATIONS):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Iteration %s:&quot;</span> % idx_iteration)</span><br><span class="line">    start_time = time.time()</span><br><span class="line">    x, min_val, info = optimize.fmin_l_bfgs_b(evaluator.loss, x, fprime=evaluator.grads, maxfun=<span class="number">20</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Current loss value: %s&quot;</span> % min_val)</span><br><span class="line">    img = x.copy().reshape([ IMG_HEIGHT, IMG_WIDTH, <span class="number">3</span> ])</span><br><span class="line">    img = deprocess_image(img)</span><br><span class="line">    misc.imsave(<span class="string">&quot;./%s/iter_%d.jpeg&quot;</span> % (SAVE_DIR, idx_iteration), img)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Current image saved!&quot;</span>)</span><br><span class="line">    end_time = time.time()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Iteration completed in %dsec!&quot;</span> % (end_time - start_time))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><!--p>
  <img id="RawTarget-and-NSTResults" src="raw_target.jpeg" alt="Target" />
  <script>
    $(document).ready(function () {
      $("#RawTarget-and-NSTResults").click(function () {
        if ($("#RawTarget-and-NSTResults").attr("alt") == "Target") {
          $("#RawTarget-and-NSTResults").attr("alt", "Results");
          $("#RawTarget-and-NSTResults").attr("src", "/2020/11/06/notes/2020-1106/nst_results.gif");
        } else {
          $("#RawTarget-and-NSTResults").attr("alt", "Target");
          $("#RawTarget-and-NSTResults").attr("src", "/2020/11/06/notes/2020-1106/raw_target.jpeg");
        }
      });
    });
  </script>
</p-->
<p><img src="/next-nest/2020/11/06/essay-2020-1106/raw_target.jpeg" alt="Target"><img src="/next-nest/2020/11/06/essay-2020-1106/nst_results.gif" alt="Results"></p>
<p>在2018年年底看到之后我于2019年1月28日进行第一次实验，但是第一次实验的结果非常不尽人意，现在回想原因大致是设反了参数，于是得到了一个横版图像被挤压为竖版的效果：<img src="/next-nest/2020/11/06/essay-2020-1106/nst_result_atiter_0_20190128.jpeg" alt="Failure on 28 Jan 2019"></p>
<p>这个project持续了将近两年，期间因高考而鸽置，然而在将近两年之后的某一个平凡无奇的清晨，终于得到了结果：<img src="/next-nest/2020/11/06/essay-2020-1106/nst_result_20201113.jpeg" alt="Result on 13 Nov 2020"></p>
<h2 id="Latent-Space-Generating"><a href="#Latent-Space-Generating" class="headerlink" title="Latent Space Generating"></a>Latent Space Generating</h2><p>基于VAE(Variational AutoEncoder, 变分自编码机)的手写数字图片(MNIST)潜在连续空间生成。</p>
<h3 id="Abstract-1"><a href="#Abstract-1" class="headerlink" title="Abstract"></a>Abstract</h3><p>这个project最早是2019年年初在Keras之父所著的《Deep Learning with Python》上关于生成式深度学习一部分看到的。VAE的原型，AutoEncoder即自编码机，经常被与GAN(Generative Adversarial Networks, 生成对抗网络)一并提起，因为两者皆是兼具类似于生成与类似于预测两套模型的组合。</p>
<p>但是AutoEncoder为<code>Encoder</code>(编码机)和<code>Decoder</code>(解码机)的组合，GAN为<code>Generator</code>(生成机)和<code>Discriminator</code>(判别机)的组合，可以认为后者GAN偏向于一个自带数据增强的预测模型。而且在结构上AutoEncoder把两个子结构合二为一一并使用，以最后输出的图像尽可能还原输入的图像为目标，隐层的节点数先逐渐递减再逐渐增加，因此AutoEncoder经常被用于降维任务；而GAN则是轮流训练Generator与Discriminator，直到二者达到动态平衡，因此GAN经常被用于数据增强。另外，二者各有缺点，AutoEncoder的容易生成失真，GAN的容易保留噪声。</p>
<p>除了VAE之外AutoEncoder还有Denoising AutoEncoder和Sparse AutoEncoder两个亚种，感兴趣的话可以上网搜一下，但是内容预算有限，在此暂不赘述。</p>
<blockquote>
<p>Keywords:</p>
<ul>
<li>AutoEncoder</li>
<li>VAE</li>
</ul>
<p>…</p>
</blockquote>
<h3 id="AutoEncoder"><a href="#AutoEncoder" class="headerlink" title="AutoEncoder"></a>AutoEncoder</h3><p>我们先从VAE的原型，即AutoEncoder讲起。</p>
<p><img src="/next-nest/2020/11/06/essay-2020-1106/what_the_autoencoder.jpeg" alt="AutoEncoder...?"></p>
<p><del>这就是AutoEncoder（大误</del></p>
<p>没错，AutoEncoder说穿了无非就是先压缩再解压回去，或者说先降维再升回去，因此朴素AutoEncoder可以用Keras简单刻画如下：</p>
<figure class="highlight py"><figcaption><span>Naive AutoEncoder</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> keras, keras.backend <span class="keyword">as</span> T</span><br><span class="line">img_shape = (<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>,) <span class="keyword">if</span> T.image_data_format() == <span class="string">&quot;channels_first&quot;</span> <span class="keyword">else</span> (<span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">AutoEncoder = keras.models.Sequential([</span><br><span class="line">    <span class="comment"># Encoder</span></span><br><span class="line">    keras.layers.Flatten(input_shape=img_shape),</span><br><span class="line">    keras.layers.Dense(<span class="number">224</span>, activation=<span class="string">&quot;relu&quot;</span>),</span><br><span class="line">    keras.layers.Dense(<span class="number">28</span>, activation=<span class="string">&quot;relu&quot;</span>),</span><br><span class="line">    keras.layers.Dense(<span class="number">2</span>, activation=<span class="string">&quot;relu&quot;</span>), <span class="comment"># Latent Bottleneck</span></span><br><span class="line">    <span class="comment"># Decoder</span></span><br><span class="line">    keras.layers.Dense(<span class="number">16</span>, activation=<span class="string">&quot;relu&quot;</span>),</span><br><span class="line">    keras.layers.Dense(<span class="number">196</span>, activation=<span class="string">&quot;relu&quot;</span>),</span><br><span class="line">    keras.layers.Dense(<span class="number">1024</span>, activation=<span class="string">&quot;relu&quot;</span>),</span><br><span class="line">    keras.layers.Dense(<span class="number">784</span>, activation=<span class="string">&quot;sigmoid&quot;</span>), <span class="comment"># Output</span></span><br><span class="line">    keras.layers.Reshape(img_shape) <span class="comment"># Post-processing</span></span><br><span class="line">    ])</span><br></pre></td></tr></table></figure>
<p>如代码中所示一样，以MNIST为例，输入一张28x28的灰度图像在中间的Bottleneck会被压缩为一个二维矢量，这直接就可以在一个二维平面上把某张图片所在潜在连续空间中的位置表示出来。在学习较大输入数据的时候可以先把大的输入数据压缩为一个较短的低维矢量进行表示，然后学习被压低的这一块“精髓”。如同下面图片的这张图片：</p>
<p><img src="/next-nest/2020/11/06/essay-2020-1106/autoencoder.jpeg" alt="AutoEncoder"></p>
<h3 id="VAE"><a href="#VAE" class="headerlink" title="VAE"></a>VAE</h3><p>既然AutoEncoder这么流弊，那么为什么还要出这么个亚种呢？</p>
<p><img src="/next-nest/2020/11/06/essay-2020-1106/why_vae.jpeg" alt="Purpose of VAE"></p>
<p>如上图所示，我们拿满月和弦月的图片训练AutoEncoder，对于AutoEncoder而言，在满月编码的点附近的一块邻域内解码出的图片都是与满月类似，在弦月附近的一块领域内解码出的也都与弦月类似。但是如若我们取两个领域正中间的点进行解码，那么可能什么都解不出来。于是我们对解码过程的起手注入随机噪声，这一块噪声的构成方式是由模型学习得到的，且服从于常态分布，使得在两点之间可以解出介于满月与弦月之间的点，从而构造手写数字图片(MNIST)的潜在连续空间。</p>
<p><img src="/next-nest/2020/11/06/essay-2020-1106/vae.jpeg" alt="Variational AutoEncoder"></p>
<p>这幅图对比了AutoEncoder与VAE。</p>
<h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><p>最后我们还是要放一下代码：</p>
<figure class="highlight py"><figcaption><span>Variational AutoEncoder</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env Python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">TensorFlow version: 1.13.1</span></span><br><span class="line"><span class="string">Keras version: 2.3.1</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> norm</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> keras, keras.backend <span class="keyword">as</span> T</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">&quot;solarized-light&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Constants</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    IMG_SHAPE = (<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>) <span class="keyword">if</span> T.image_data_format() == <span class="string">&quot;channels_first&quot;</span> <span class="keyword">else</span> (<span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>)</span><br><span class="line">    NUM_EPOCHES = <span class="number">10</span></span><br><span class="line">    BATCH_SIZE = <span class="number">16</span></span><br><span class="line">    LATENT_DIM = <span class="number">2</span> <span class="comment"># Dimensionality of the latent space: a plane</span></span><br><span class="line">    NUM_DIGITS = <span class="number">15</span>  <span class="comment"># figure with 15x15 digits</span></span><br><span class="line">    DIGIT_SIZE = <span class="number">28</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Loading MNIST Dataset</span></span><br><span class="line">(x_train, y_train), (x_test, y_test) = keras.datasets.mnist.load_data()</span><br><span class="line">x_train = x_train.reshape((x_train.shape[<span class="number">0</span>],) + Constants.IMG_SHAPE).astype(<span class="string">&quot;float32&quot;</span>) / <span class="number">255.</span></span><br><span class="line">x_test = x_test.reshape((x_test.shape[<span class="number">0</span>],) + Constants.IMG_SHAPE).astype(<span class="string">&quot;float32&quot;</span>) / <span class="number">255.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Creating &amp; Building Encoder</span></span><br><span class="line">input_img = keras.Input(shape=Constants.IMG_SHAPE)</span><br><span class="line">x = keras.layers.Conv2D(<span class="number">32</span>, <span class="number">3</span>, padding=<span class="string">&quot;same&quot;</span>, activation=<span class="string">&quot;relu&quot;</span>)(input_img)</span><br><span class="line">x = keras.layers.Conv2D(<span class="number">64</span>, <span class="number">3</span>, padding=<span class="string">&quot;same&quot;</span>, activation=<span class="string">&quot;relu&quot;</span>, strides=<span class="number">2</span>)(x)</span><br><span class="line">x = keras.layers.Conv2D(<span class="number">64</span>, <span class="number">3</span>, padding=<span class="string">&quot;same&quot;</span>, activation=<span class="string">&quot;relu&quot;</span>)(x)</span><br><span class="line">x = keras.layers.Conv2D(<span class="number">64</span>, <span class="number">3</span>, padding=<span class="string">&quot;same&quot;</span>, activation=<span class="string">&quot;relu&quot;</span>)(x)</span><br><span class="line"></span><br><span class="line">shape_before_flattening = T.int_shape(x)[ <span class="number">1</span> : ]</span><br><span class="line"></span><br><span class="line">x = keras.layers.Flatten()(x)</span><br><span class="line">x = keras.layers.Dense(<span class="number">32</span>, activation=<span class="string">&quot;relu&quot;</span>)(x)</span><br><span class="line"></span><br><span class="line">z_mean = keras.layers.Dense(Constants.LATENT_DIM)(x)</span><br><span class="line">z_log_var = keras.layers.Dense(Constants.LATENT_DIM)(x)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sampling</span>(<span class="params">args</span>):</span></span><br><span class="line">    z_mean, z_log_var = args</span><br><span class="line">    eps = T.random_normal(</span><br><span class="line">        shape = (T.shape(z_mean)[<span class="number">0</span>], Constants.LATENT_DIM),</span><br><span class="line">        mean=<span class="number">0.</span>, stddev=<span class="number">1.</span></span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">return</span> z_mean + T.exp(<span class="number">.5</span> * z_log_var) * eps</span><br><span class="line">z = keras.layers.Lambda(sampling)([z_mean, z_log_var])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Creating &amp; Building Decoder</span></span><br><span class="line">decoder = keras.Sequential(layers=[</span><br><span class="line">    <span class="comment"># Upsampling to the correct number of units</span></span><br><span class="line">    keras.layers.Dense(np.prod(shape_before_flattening), activation=<span class="string">&quot;relu&quot;</span>, input_shape=T.int_shape(z)[ <span class="number">1</span> : ]),</span><br><span class="line">    <span class="comment"># Reshape into an image of the same shape as before our last `Flatten` layer</span></span><br><span class="line">    keras.layers.Reshape(shape_before_flattening),</span><br><span class="line">    <span class="comment"># We then apply then reverse operation to the initial stack</span></span><br><span class="line">    <span class="comment">#   of convolution layers: a `Conv2DTranspose` layers</span></span><br><span class="line">    <span class="comment">#   with corresponding parameters.</span></span><br><span class="line">    keras.layers.Conv2DTranspose(<span class="number">32</span>, <span class="number">3</span>, padding=<span class="string">&quot;same&quot;</span>, activation=<span class="string">&quot;relu&quot;</span>, strides=<span class="number">2</span>),</span><br><span class="line">    <span class="comment"># We end up with a feature map of the same size as the original input.</span></span><br><span class="line">    keras.layers.Conv2D(<span class="number">1</span>, <span class="number">3</span>, padding=<span class="string">&quot;same&quot;</span>, activation=<span class="string">&quot;sigmoid&quot;</span>)</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line"><span class="comment"># We then apply it to `z` to recover the decoded `z`.</span></span><br><span class="line">z_decoded = decoder(z)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomVariationalLayer</span>(<span class="params">keras.layers.Layer</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Custom Layer for Computing Loss of VAE...&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">vae_loss</span>(<span class="params">self, x, z_decoded</span>):</span></span><br><span class="line">        x, z_decoded = T.flatten(x), T.flatten(z_decoded)</span><br><span class="line">        xent_loss = keras.metrics.binary_crossentropy(x, z_decoded)</span><br><span class="line">        k1_loss = T.mean(<span class="number">1</span> + z_log_var - T.square(z_mean) - T.exp(z_log_var), axis=-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> T.mean(xent_loss + (-<span class="number">5e-4</span>) * k1_loss)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">call</span>(<span class="params">self, inputs</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Customizing Layer via `call` method&quot;&quot;&quot;</span></span><br><span class="line">        x = inputs[<span class="number">0</span>]</span><br><span class="line">        z_decoded = inputs[<span class="number">1</span>]</span><br><span class="line">        loss = self.vae_loss(x, z_decoded)</span><br><span class="line">        self.add_loss(loss, inputs=inputs)</span><br><span class="line">        <span class="comment"># We don&#x27;t use this output.</span></span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="comment"># We call our custom layer on the input and the decoded output,</span></span><br><span class="line"><span class="comment">#   in order to obtain the final model output.</span></span><br><span class="line">y = CustomVariationalLayer()([input_img, z_decoded])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Training</span></span><br><span class="line">vae = keras.models.Model(input_img, y)</span><br><span class="line">vae.<span class="built_in">compile</span>(</span><br><span class="line">    keras.optimizers.RMSprop(),</span><br><span class="line">    loss=<span class="literal">None</span></span><br><span class="line">    )</span><br><span class="line">history = vae.fit(</span><br><span class="line">    x_train, <span class="literal">None</span>,</span><br><span class="line">    batch_size = Constants.BATCH_SIZE,</span><br><span class="line">    epochs = Constants.NUM_EPOCHES,</span><br><span class="line">    validation_data = (x_test, <span class="literal">None</span>),</span><br><span class="line">    shuffle = <span class="literal">True</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="comment"># Displaying a 2D manifold of the digits</span></span><br><span class="line">figure = np.zeros((Constants.DIGIT_SIZE * Constants.NUM_DIGITS, Constants.DIGIT_SIZE * Constants.NUM_DIGITS))</span><br><span class="line"><span class="comment"># Linearly spaced coordinates on the unit square were transformed</span></span><br><span class="line"><span class="comment">#   through the inverse CDF (ppf) of the Gaussian</span></span><br><span class="line"><span class="comment">#   to produce values of the latent variables z,</span></span><br><span class="line"><span class="comment">#   since the prior of the latent space is Gaussian</span></span><br><span class="line">grid_x = norm.ppf(np.linspace(<span class="number">0.05</span>, <span class="number">0.95</span>, Constants.NUM_DIGITS))</span><br><span class="line">grid_y = norm.ppf(np.linspace(<span class="number">0.05</span>, <span class="number">0.95</span>, Constants.NUM_DIGITS))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, yi <span class="keyword">in</span> <span class="built_in">enumerate</span>(grid_x):</span><br><span class="line">    <span class="keyword">for</span> j, xi <span class="keyword">in</span> <span class="built_in">enumerate</span>(grid_y):</span><br><span class="line">        z_sample = np.array([[xi, yi]])</span><br><span class="line">        z_sample = np.tile(z_sample, Constants.BATCH_SIZE).reshape(Constants.BATCH_SIZE, <span class="number">2</span>)</span><br><span class="line">        x_decoded = decoder.predict(z_sample, batch_size=Constants.BATCH_SIZE)</span><br><span class="line">        digit = x_decoded[<span class="number">0</span>].reshape(Constants.DIGIT_SIZE, Constants.DIGIT_SIZE)</span><br><span class="line">        figure[i * Constants.DIGIT_SIZE: (i + <span class="number">1</span>) * Constants.DIGIT_SIZE,</span><br><span class="line">               j * Constants.DIGIT_SIZE: (j + <span class="number">1</span>) * Constants.DIGIT_SIZE] = digit</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line">plt.imshow(figure, cmap=<span class="string">&quot;hot&quot;</span>)</span><br><span class="line">plt.imsave(<span class="string">&quot;./result.%s.jpeg&quot;</span> % time.time(), figure, cmap=<span class="string">&quot;hot&quot;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="Summary-1"><a href="#Summary-1" class="headerlink" title="Summary"></a>Summary</h3><p>从2019年4月开始尝试到现在，这个project大概持续了一年半，重构程式的时候非常顺利，所以也没什么令人惊喜之感。</p>
<p><img src="/next-nest/2020/11/06/essay-2020-1106/vae_result.jpeg" alt="VAE Result"></p>
<h2 id="Summary-2"><a href="#Summary-2" class="headerlink" title="Summary"></a>Summary</h2><!--
$$ A

= \left| \begin{matrix}
a_1    &        &        & \cdots &        \\
       & a_2    &        & \cdots &        \\
       &        & a_3    & \cdots &        \\
\vdots & \vdots & \vdots & \ddots & \vdots \\
       &        &        & \cdots & a_n    \\
\end{matrix} \right|

= a_1 \cdot a_2 \cdot a_3 \cdots a_n

= \prod_{i=1}^n a_i $$

$$ A

= \left| \begin{matrix}
       & \cdots &        &        & a_1    \\
       & \cdots &        & a_2    &        \\
       & \cdots & a_3    &        &        \\
\vdots & \ddots & \vdots & \vdots & \vdots \\
a_n    & \cdots &        &        &        \\
\end{matrix} \right|

= (-1)^{\frac{n(n-1)}{2}} \cdot a_1 \cdot a_2 \cdot a_3 \cdots a_n

= (-1)^{\frac{n(n-1)}{2}} \prod_{i=1}^n a_i $$
-->
<blockquote><p><em>この空をあの星を 奇跡さえ超えて君の元へ</em><br><em>超越這片天空那顆星星 超越奇蹟穿梭到你身邊</em><br>翔べるよ何処までも 今ならきっと大丈夫<br>不論到何處都展翅翱翔 若是現在肯定沒有問題<br>この歌はこの声は いつも君の隣にある<br>這首歌曲和這份歌聲 一直都存在你身邊<br>届けたい 終わりのない空を翔ける星のメロディ<br>想要傳達 在這無盡的天空飛翔的星之旋律<br>★﹣ ﹦ ≡☆﹣ ﹦ ≡★﹣ ﹦ ≡☆﹣ ﹦ ≡★﹣ ﹦ ≡☆﹣ ﹦ ≡★﹣ ﹦ ≡☆﹣ ﹦ ≡<br>巡り会うこの場所で 君と二人の夜空を見る<br>在相逢的這個地點 與你一起仰望兩人的夜空<br>駆け出して それだけできっと夢は叶うから<br>只要開始向前奔跑 夢想就一定能夠實現<br>この歌をこの声を ずっと忘れないでいてね<br>這首歌曲和這份歌聲 請永遠不要忘記喔<br>届けたい 遥か遠いミライ<br>想要傳達 直到遙遠的未來<br>★﹣ ﹦ ≡☆﹣ ﹦ ≡★﹣ ﹦ ≡☆﹣ ﹦ ≡★﹣ ﹦ ≡☆﹣ ﹦ ≡★﹣ ﹦ ≡☆﹣ ﹦ ≡<br>翔ける<br>飛翔吧<br>★﹣ ﹦ ≡☆﹣ ﹦ ≡★﹣ ﹦ ≡☆﹣ ﹦ ≡★﹣ ﹦ ≡☆﹣ ﹦ ≡★﹣ ﹦ ≡☆﹣ ﹦ ≡<br>翔ける<br>飛翔吧<br>★﹣ ﹦ ≡☆﹣ ﹦ ≡★﹣ ﹦ ≡☆﹣ ﹦ ≡★﹣ ﹦ ≡☆﹣ ﹦ ≡★﹣ ﹦ ≡☆﹣ ﹦ ≡<br>全速力のメロディ<br>全速的旋律</p>
<footer><strong>Divela(feat. 初音MIKU)</strong><cite><a href="https://www.bilibili.com/video/av24556700/">METEOR (Magical Mirai 2018 Contest Champion)</a></cite></footer></blockquote>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><h3 id="NST-Neural-Style-Transform"><a href="#NST-Neural-Style-Transform" class="headerlink" title="NST (Neural Style Transform)"></a>NST (Neural Style Transform)</h3><ul>
<li>[1]:  <a href="https://arxiv.org/abs/1508.06576/">https://arxiv.org/abs/1508.06576/</a></li>
<li>[2]:  <a href="https://www.jianshu.com/p/9f03b61fdeac">https://www.jianshu.com/p/9f03b61fdeac</a></li>
<li>[3]:  <a href="https://blog.csdn.net/Cowry5/article/details/81037767">https://blog.csdn.net/Cowry5/article/details/81037767</a></li>
<li>[4]:  <a href="https://blog.csdn.net/level_code/article/details/94631322">https://blog.csdn.net/level_code/article/details/94631322</a></li>
</ul>
<h3 id="Gram-Matrix"><a href="#Gram-Matrix" class="headerlink" title="Gram Matrix"></a>Gram Matrix</h3><ul>
<li>[5]:  <a href="https://planetmath.org/grammatrix">https://planetmath.org/grammatrix</a></li>
<li>[6]:  <a href="https://www.cnblogs.com/yifanrensheng/p/12862174.html">https://www.cnblogs.com/yifanrensheng/p/12862174.html</a></li>
</ul>
<h3 id="L-BFGS-B"><a href="#L-BFGS-B" class="headerlink" title="L-BFGS-B"></a>L-BFGS-B</h3><ul>
<li>[7]:  <a href="http://sepwww.stanford.edu/data/media/public/docs/sep117/antoine1/paper_html/node6.html">http://sepwww.stanford.edu/data/media/public/docs/sep117/antoine1/paper_html/node6.html</a></li>
<li>[8]:  <a href="https://blog.csdn.net/weixin_39445556/article/details/84502260/">https://blog.csdn.net/weixin_39445556/article/details/84502260/</a></li>
<li>[9]:  <a href="http://users.iems.northwestern.edu/~nocedal/software.html">http://users.iems.northwestern.edu/~nocedal/software.html</a></li>
<li>[10]: <a href="http://sobereva.com/538/">http://sobereva.com/538/</a></li>
</ul>
<h3 id="AE-AutoEncoder"><a href="#AE-AutoEncoder" class="headerlink" title="AE (AutoEncoder)"></a>AE (AutoEncoder)</h3><ul>
<li>[11]: <a href="https://www.bilibili.com/video/av15998800/">https://www.bilibili.com/video/av15998800/</a></li>
<li>[12]: <a href="https://blog.csdn.net/leida_wt/article/details/85052299/">https://blog.csdn.net/leida_wt/article/details/85052299/</a></li>
<li>[13]: <a href="https://www.alwa.info/2016/Autoencoder-详解.html">https://www.alwa.info/2016/Autoencoder-详解.html</a></li>
<li>[14]: <a href="https://www.cnblogs.com/yangmang/p/7530463.html">https://www.cnblogs.com/yangmang/p/7530463.html</a></li>
</ul>
<h3 id="divela-meteor"><a href="#divela-meteor" class="headerlink" title="divela - meteor"></a>divela - meteor</h3><ul>
<li>[15]: <a href="https://www.bilibili.com/video/BV1MW411P7PU/">https://www.bilibili.com/video/BV1MW411P7PU/</a></li>
<li>[16]: <a href="https://music.163.com/#/song?id=1294899575">https://music.163.com/#/song?id=1294899575</a></li>
</ul>
]]></content>
      <tags>
        <tag>Essays (随笔)</tag>
      </tags>
  </entry>
  <entry>
    <title>「日志】写在51mcm之后：最终发现无需追忆昨天</title>
    <url>/next-nest/2021/05/05/essay-2021-0505/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><blockquote><p><img src="/next-nest/2021/05/05/essay-2021-0505/稻荷崎.jpeg" alt="稻荷崎"></p>
<p style="text-align: center; display: none;">
  <ruby><span>思い出</span><rp>(</rp><rt>无需</rt><rp>)</rp></ruby>
  <ruby><span>なんか</span><rp>(</rp><rt>追忆</rt><rp>)</rp></ruby>
  <ruby><span>いらん</span><rp>(</rp><rt>昨天</rt><rp>)</rp></ruby>
</p>

<p class="h1" style="text-align: center;">
  <ruby>思い出なんかいらん<rp>(</rp><rt>无需追忆昨天</rt><rp>)</rp></ruby>
</p>
<footer><strong>兵库县代表——稻荷崎高中男子排球部赛场横幅</strong><cite>古馆春一作品「ハイキュー！！」（排球少年！！）</cite></footer></blockquote>
<span id="more"></span>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>大概是这次的劳动节兼青年节假期，我与计划于秋天一起参加<a href="http://www.mcm.edu.cn/"><code>cumcm</code></a>的前辈们参加了<a href="http://51mcm.cumt.edu.cn/"><code>51mcm</code></a>，是中国矿业大学组织的数学建模竞赛。我们所选的题目，是关于运筹与规划的题目A，疫苗生产问题：</p>
<blockquote>
<p>新冠肺炎肆虐全球，给世界带来了深重的灾难。各国为控制疫情纷纷研发新冠疫苗。假定疫苗生产需要经过 $CJ_1$ 工位、 $CJ_2$ 工位、 $CJ_3$ 工位以及 $CJ_4$ 工位等4个工艺流程。每个工艺流程一次性均能处理100剂疫苗，这100剂疫苗装进一个加工箱一起送进工位的设备进行处理。而且，只有按照 $CJ_1 \rightarrow CJ_2 \rightarrow CJ_3 \rightarrow CJ_4$ 的顺序在4个工位都进行了加工以后，才算完成生产。为防止疫苗包装出现混乱，某疫苗生产公司生产部门规定，每个工位不能同时生产不同类型的疫苗，疫苗生产不允许插队，即进入第一个工位安排的每类疫苗的生产顺序一旦确定就要一直保持不变，而且前一种类型的疫苗离开某个工位后，后一种类型的疫苗才能进入这个工位。</p>
<p>现有 $YM_1$ 至 $YM_{10} $ 等10种不同类型的疫苗需要生产。为安全起见，每种类型每箱（内装疫苗100剂）疫苗在每个工位上均进行了50次模拟生产。发现，由于生产设备、疫苗纯化等多种原因，每个工位生产不同类型的每箱疫苗所需的时间并不稳定，详细的数据见附件1。</p>
<p>T1: 请对每箱疫苗在所有工位上的生产时间进行均值、方差、最值、概率分布等统计分析，以方便疫苗生产公司管理者能够直观的掌握每个工位生产疫苗的能力水平，为疫苗生产提供参考。</p>
<p>T2: 某国疫苗检测部门紧急需要 $YM_1 \rightarrow YM_{10} $ 各100剂疫苗进行检测。为赶时间，疫苗生产公司需要对疫苗的生产顺序进行规划，以便能在最短时间内交付，以每个工位生产每箱疫苗平均时间为依据。请建立数学模型，制定疫苗生产顺序，初始时刻为00:00，计算生产总时间<del>，并将结果填入表1</del>。<br>…</p>
</blockquote>

    <div id="aplayer-QXRXCZCF" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="518426" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>
<h2 id="Model-Building"><a href="#Model-Building" class="headerlink" title="Model Building"></a>Model Building</h2><p>在<code>pandas</code>库的帮助下，T1我们几乎是秒杀的，顺便完成了所有数据的初步清洗与预处理。但是我们来到T2时便遇上了麻烦。</p>
<p>面对T2我们首先想到的是<a href="https://blog.csdn.net/a493823882/article/details/78209512/">排队论</a>，但在梳理了排队论的基本方法与使用情况之后，转而想到<a href="https://baike.baidu.com/item/动态规划/529408">dp (Dynamic Programming, 动态规划)</a>，但奈何状态转移方程死活写不出来，最终放弃了dp，决定沿用前人的「零件加工」思路：</p>
<p>设疫苗 $YM_k$ 在工位 $l$ 加工所需时间为 $t_{k, l} $ ，从加工系统开始运作直到疫苗 $YM_k$ 在工位 $CJ_l$ 加工<strong>完成</strong>所需时间为 $s_{k, l} $ ，如若预先指定加工顺序，则进入加工的第 $k$ 类疫苗在工位 $CJ_l$ 加工所需时间设为 $\tau_{k, l} $ ，其在工位 $l$ 加工<strong>完成</strong>所需时间设为 $\sigma_{k, l} $。</p>
<ol>
<li><p>指定顺序的方式有 $A_{10}^{10} = 10!$ 种，可以在原本的类型编号与指定顺序之间建立在数集 $\{1, 2, 3, 4, 5, 6, 7, 8, 9, 10\}$ 上的 <ruby>映<rp>(</rp><rt>一一</rt><rp>)</rp>射<rp>(</rp><rt>对应</rt><rp>)</rp></ruby> 关系 $k^{(1)} = \phi(k)$ ，满足</p>
<script type="math/tex; mode=display">t_{\phi(k), l} = \tau  _{k, l}</script><script type="math/tex; mode=display">s_{\phi(k), l} = \sigma_{k, l}</script></li>
<li><p>考虑指定顺序后的加工过程：工位 $CJ_1$ 中上一类进行加工的疫苗在完成加工后，紧接着可以安排下一类疫苗进入该工位进行加工，由此可知进入加工的第 $k$ 类疫苗完成在工位 $CJ_1$ 加工<strong>完成</strong>所需时间为</p>
<script type="math/tex; mode=display">\sigma_{k, 1} = \sigma_{(k - 1), 1} + \tau_{k, 1}</script></li>
<li><p>而对于在工位 $CJ_2$ 上的疫苗进行加工的情况而言，需要分情况讨论：</p>
<ul>
<li><p>$ \sigma_{k, 1} &lt; \sigma_{(k - 1), 2} $<br>此时第 $k$ 类疫苗需等待至第 $(k - 1)$ 类疫苗在工位 $CJ_2$ 加工完成之后，方能进入该工位开始加工，因此再考虑其在工位 $CJ_2$ 上进行加工所需时间，第 $k$ 类疫苗在工位 $CJ_2$ <strong>完成</strong>加工所需时间</p>
<script type="math/tex; mode=display">\sigma_{k, 2} = \sigma_{(k - 1), 2} + \tau_{k, 2}</script></li>
<li><p>$ otherwise $<br>此时第 $k$ 类疫苗无需等待即可直接进入工位 $CJ_2$ 进行加工，因此其在工位 $CJ_2$ <strong>完成</strong>加工所需时间</p>
<script type="math/tex; mode=display">\sigma_{k, 2} = \sigma_{k, 1}       + \tau_{k, 2}</script></li>
</ul>
<p>综上所述，第 $k$ 类疫苗在工位 $CJ_2$ <strong>完成</strong>加工所需时间</p>
<script type="math/tex; mode=display">\sigma_{k, 2} = max\{ \sigma_{(k - 1), 2}, \sigma_{k, 1} \} + \tau_{k, 2}</script></li>
<li><p>同理，对于在工位 $CJ_3$ 与 $CJ_4$ 的疫苗，完成加工所需时间分别为</p>
<script type="math/tex; mode=display">
   \sigma_{k, 3} = max\{ \sigma_{(k - 1), 3}, \sigma_{k, 2} \} + \tau_{k, 3}
   \\
   \sigma_{k, 4} = max\{ \sigma_{(k - 1), 4}, \sigma_{k, 3} \} + \tau_{k, 4}</script></li>
<li><p>由此，如若我们 <ruby>定<rp>(</rp><rt>强行</rt><rp>)</rp>义<rp>(</rp><rt>规定</rt><rp>)</rp></ruby> 索引为零的情况：</p>
<script type="math/tex; mode=display">k = 0 时, \phi(0) = 0, 且满足
   \\
   t_{0, l} = \tau  _{0, l} \equiv 0
   \\
   s_{0, l} = \sigma_{0, l} \equiv 0</script><p>根据题意，所有疫苗在进入加工前所占用时间不在题目的考虑范围之内，因此 $\forall k \in \{1, 2, 3, 4, 5, 6, 7, 8, 9, 10\}$ 有</p>
<script type="math/tex; mode=display">
   s_{k, 0} \equiv 0
   \\
   \sigma_{k, 0} = s_{\phi(k), 0} \equiv 0</script></li>
<li><p>在上一步的简化下，加工过程中所有时间的计算可以简化为</p>
<script type="math/tex; mode=display">\sigma_{k, l} = max\{ \sigma_{(k - 1), l}, \sigma_{k, (l - 1)} \} + \tau_{k, l}</script></li>
</ol>
<p>经过以上各步，最后一类（即第十类）在最后的工位 $CJ_4$ <strong>完成</strong>加工所需时间 $\sigma_{10, 4} $ 即为我们所求的加工所用的总时间。</p>
<h2 id="Programming"><a href="#Programming" class="headerlink" title="Programming"></a>Programming</h2><p>进入加工的第 $k$ 类疫苗在工位 $CJ_l$ 加工时间（即上文定义的 $\tau_{k, l} $ ）设为变量<code>producing_time[k, l]</code>，在工位 $CJ_l$ 加工完成所需时间设为递归函数<code>processing_time(k, l)</code>，则上述过程用程式表述如下</p>
<figure class="highlight py"><figcaption><span>proctime.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">processing_time</span>(<span class="params">k = <span class="number">10</span>, l = <span class="number">4</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">max</span>(processing_time(k - <span class="number">1</span>, l), processing_time(k, l - <span class="number">1</span>)) + producing_time[k, l]) <span class="keyword">if</span> (k <span class="keyword">and</span> l) <span class="keyword">else</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>正如上文所说，共有 $10!$ 种排列方法，我们在此回给出的解决方案便是枚举这 $10!$ 种排列方法。</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <code>Norstc</code>的CSDN文章 <a href="https://blog.csdn.net/a493823882/article/details/78209512/">排队论简介</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <code>Leetcode力扣</code>的知乎回答 <a href="https://www.zhihu.com/question/291280715/answer/1492289717">怎样学好动态规划？</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. <code>阮行止</code>的知乎回答 <a href="https://www.zhihu.com/question/23995189/answer/613096905">什么是动态规划（Dynamic Programming）？动态规划的意义是什么？</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_4">
<sup>4</sup>. <code>pks-LOVING</code>的洛谷博客 <a href="https://www.luogu.com.cn/blog/pks-LOVING/junior-dynamic-programming-dong-tai-gui-hua-chu-bu-ge-zhong-zi-xu-lie">Junior Dynamic Programming——动态规划初步·各种子序列问题</a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_5">
<sup>5</sup>. <code>sunyueqinghit</code>的CSDN文章 <a href="https://blog.csdn.net/sunyueqinghit/article/details/81562138/">数学建模之排队论</a><a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_6">
<sup>6</sup>. <a href="https://baike.baidu.com/item/动态规划/529408">百度百科词条 动态规划</a><a href="#reffn_6" title="Jump back to footnote [6] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>Essays (随笔)</tag>
      </tags>
  </entry>
  <entry>
    <title>敬啓，世界。</title>
    <url>/next-nest/2019/01/28/holax-sekai/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

    <div id="aplayer-IPEWQvzM" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="430026356" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;Greenlights&quot;</span>    <span class="comment"># also `hexo n`</span></span><br><span class="line">$ hexo server               <span class="comment"># also `hexo s`</span></span><br><span class="line">$ hexo generate             <span class="comment"># also `hexo g`</span></span><br><span class="line">$ hexo deploy               <span class="comment"># also `hexo d`</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p>
<h2 id="Markdown-Test"><a href="#Markdown-Test" class="headerlink" title="Markdown Test"></a>Markdown Test</h2><h3 id="Codeblock-amp-Lyrics’-Render-Test"><a href="#Codeblock-amp-Lyrics’-Render-Test" class="headerlink" title="Codeblock &amp; Lyrics’ Render Test"></a>Codeblock &amp; Lyrics’ Render Test</h3><figure class="highlight plaintext"><figcaption><span>Sumire-rap</span><a href="https://zh.moegirl.org.cn/Day1">Day1</a></figcaption><table><tr><td class="code"><pre><span class="line">作詞：KEN THE 390　作曲：めんま、KEN THE 390　編曲：家原正樹</span><br><span class="line"></span><br><span class="line">閉まったままのアンサーを解き放つよ今日</span><br><span class="line">ここから世界中へ　大きい夢</span><br><span class="line">一緒に叶えに行こう　手を繋いで　あの角の向こう</span><br><span class="line">いつも通りの景色　変えるレシピ　見つけられたよ</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">繰り返しのルーティンに色をつけるミュージック</span><br><span class="line">僕らだけがわかる合図　合わせていくチューニング</span><br><span class="line">唯一無二　それぞれ　代わりなんていない</span><br><span class="line">代わり映えしない　今　変えてきたい</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><figcaption><span>liella-starter.js</span><a href="https://liella.tv/">星象馆传送门</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> hostname = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">1337</span>;</span><br><span class="line">http.createServer(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.writeHead(<span class="number">200</span>, &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/plain&quot;</span> &#125;);</span><br><span class="line">  res.end(<span class="string">&quot;できっこないよって思ってたことも 踏みだせばほら叶うんだ\n&quot;</span>);</span><br><span class="line">&#125;).listen(port, hostname, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`At http://<span class="subst">$&#123;hostname&#125;</span>:<span class="subst">$&#123;port&#125;</span>/ 今、始まるよSymphony`</span>);</span><br><span class="line">&#125;);</span><br><span class="line">(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> liella = <span class="built_in">require</span>(<span class="string">&quot;Liella&quot;</span>);</span><br><span class="line">    liella.restart(<span class="string">&quot;Generation II!&quot;</span>);</span><br><span class="line">    &#125;)();</span><br></pre></td></tr></table></figure>
<h3 id="Atunemic-Recommendations"><a href="#Atunemic-Recommendations" class="headerlink" title="Atunemic Recommendations"></a>Atunemic Recommendations</h3><ol>
<li><p><a href="https://zh.moegirl.org.cn/末日DISCO">末日Disco</a></p>
<blockquote>
<p>當明日消失，末日到來，世界至此開始毀滅倒數。如果下一秒就是世界末日，你，該怎麼做？</p>
<pre><code>如果沒有明天 該怎麼告別
怎麼跟過去的我 說一句再見
就讓我靠近 你冰冷的臉
看這世界 在一瞬間毀滅
</code></pre></blockquote>
 <!-- split -->
<blockquote>

    <div id="aplayer-OkyEPXof" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="28830335" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av415362/">Bilibili: <code>av415362</code></a></p>
</blockquote>
<p> 世界最後的狂歡　末日最後的頌歌</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/明日DISCO">明日Disco</a></p>
<blockquote>
<p>當末日過去，明日到來，世界至此進入新的紀元。在這萬物復甦的嶄新時刻，你，有何願望？</p>
<pre><code>燃燒的夢想是 最初的歌
相信自己 其實你眼光仍清澈
就在你許下 願望的那刻
讓那天空 鋪上絢麗的顏色
</code></pre></blockquote>
 <!-- split -->
<blockquote>

    <div id="aplayer-oBUbrGXa" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="28830336" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av424616/">Bilibili: <code>av424616</code></a></p>
</blockquote>
<p> 世界最初的重生　明日最初的頌歌</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/I_LOVE_U">I LOVE U</a></p>
<blockquote>
<p>在下定了決心以後，在一切都太晚以前，我，只想要對你說!…<br>… I LOVE U</p>
<pre><code>如果你可以肯定我的一片心意　如果你可以回應我的一個問題
如果你能夠願意請坐下來聆聽　這一份在我心底最深處的秘密
</code></pre></blockquote>
 <!-- split -->
<blockquote>

    <div id="aplayer-YGvaRNpP" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="427016438" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av540768/">Bilibili: <code>av540768</code></a></p>
</blockquote>
<p> 告白P 告白三部曲之二</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/心加心">Hear the Heart (心加心)</a></p>
<blockquote>
<pre><code>看白色花瓣飄逸　像星星落在水里
祝福的鐘聲響起　讓我們走向幸福的結局
</code></pre></blockquote>
 <!-- split -->
<blockquote>

    <div id="aplayer-coBhbFod" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="427016439" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av4704467/">Bilibili: <code>av4704467</code></a></p>
</blockquote>
<p> 告白P 告白三部曲之三</p>
</li>
</ol>
<ul>
<li><p><a href="https://zh.moegirl.org.cn/CONNECT~心的连接~">CONNECT~心的連接~</a></p>
<blockquote>
<pre><code>找尋自己　存在的目的　再次相信你就是唯一
...
勇敢的心　勾繪著夢境　現在追就不要再猶豫
</code></pre></blockquote>
<!-- split -->
<blockquote>

    <div id="aplayer-CHgXXnEt" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="2902209" data-server="netease" data-type="album" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av1231151/">Bilibili: <code>av1231151</code></a></p>
</blockquote>
<p>本曲目初登場於2014拜年祭</p>
</li>
</ul>
<h3 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h3><p><img src="https://liella-gen2.github.io/imagehost/青春追梦人.jpeg" alt="青春追夢人 封面"></p>
<h3 id="Footnote"><a href="#Footnote" class="headerlink" title="Footnote"></a>Footnote</h3><ul>
<li><p>Code:</p>
<figure class="highlight md"><figcaption><span>Footnote in Markdown</span><a href="https://segmentfault.com/a/1190000040651943/">usage</a></figcaption><table><tr><td class="code"><pre><span class="line">Markdown[^1] 可以提高排版效率，並將文本轉換為 HTML[^html]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^1</span>]: <span class="link">Markdown 是一種純文本標記語言</span></span><br><span class="line">[<span class="symbol">^html</span>]: <span class="link">HyperText Markup Language 超文本標記語言</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Preview:</p>
<p>Markdown<sup><a href="#fn_1" id="reffn_1">1</a></sup> 可以提高排版效率，并将文本转换为 HTML<sup><a href="#fn_html" id="reffn_html">html</a></sup></p>
<blockquote id="fn_1">
<sup>1</sup>. Markdown 是一种纯文本标记语言<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_html">
<sup>html</sup>. HyperText Markup Language 超文本标记语言<a href="#reffn_html" title="Jump back to footnote [html] in the text."> &#8617;</a>
</blockquote>
</li>
</ul>
]]></content>
      <tags>
        <tag>洛天依</tag>
        <tag>Atunemic (阿良良木健)</tag>
        <tag>Minco_P (歷歷路路)</tag>
        <tag>蒼十三</tag>
        <tag>測試Testing!</tag>
      </tags>
  </entry>
  <entry>
    <title>「日志】VU&amp;ACGN们的回忆藏匿于一块微不足道的 tag 之中</title>
    <url>/next-nest/2021/05/10/essay-2021-0510/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><blockquote>
<figure class="highlight html"><figcaption><span>bilibili首页源代码节选</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Bilibili,哔哩哔哩,哔哩哔哩动画,哔哩哔哩弹幕网,弹幕视频,B站,弹幕,字幕,AMV,MAD,MTV,ANIME,动漫,动漫音乐,游戏,游戏解说,二次元,游戏视频,ACG,galgame,动画,番组,新番,初音,洛天依,vocaloid,日本动漫,国产动漫,手机游戏,网络游戏,电子竞技,ACG燃曲,ACG神曲,追新番,新番动漫,新番吐槽,巡音,镜音双子,千本樱,初音MIKU,舞蹈MMD,MIKUMIKUDANCE,洛天依原创曲,洛天依翻唱曲,洛天依投食歌,洛天依MMD,vocaloid家族,OST,BGM,动漫歌曲,日本动漫音乐,宫崎骏动漫音乐,动漫音乐推荐,燃系mad,治愈系mad,MAD MOVIE,MAD高燃&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/next-nest/2021/05/10/essay-2021-0510/bili_keywords.jpeg" alt="bili_keywords"></p>
</blockquote>
<span id="more"></span>
<p>今天偶然在睿站翻出来了首页的源代码，上面一段的 <code>&lt;meta name=&quot;keywords&quot; /&gt;</code> 标签是写在睿站的源码 <code>index.php</code> 里面的。</p>
<p>我们先通过菜鸟教程上的相关文档，康康在一个网页当中， <code>&lt;meta name=&quot;keywords&quot; /&gt;</code> 标签起着什么样的作用：</p>
<blockquote><h2 id="header2-1">标签定义及使用说明</h2>

<p>元数据（Metadata）是数据的数据信息。</p>
<p><code>&lt;meta&gt;</code> 标签提供了 HTML 文档的元数据。元数据不会显示在客户端，但是会被浏览器解析。</p>
<p>META元素通常用于指定网页的描述，关键词，文件的最后修改时间，作者及其他元数据。</p>
<p>元数据可以被使用浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他 Web 服务调用。</p>
<h2 id="header2-2">提示和注释</h2>

<p>注意：<code>&lt;meta&gt;</code> 标签通常位于 <code>&lt;head&gt;</code> 区域内。</p>
<p>注意： 元数据通常以键值对的形式出现。</p>
<p>注意： 如果没有提供 <code>name</code> 属性，那么键值对中的「键」会采用 <code>http-equiv</code> 属性的值。</p>
<footer><strong>HTML meta 标签, 菜鸟教程</strong><cite><a href="https://www.runoob.com/tags/tag-meta.html">www.runoob.com/tags/tag-meta.html</a></cite></footer></blockquote>
<h2 id="Sowhat"><a href="#Sowhat" class="headerlink" title="Sowhat"></a>Sowhat</h2><p>由此可见，主页面的 <code>&lt;meta name=&quot;keywords&quot; /&gt;</code> 标签甚至可以说是整个网站的象征，</p>
<p>成为睿站之前的 bilibili 或者说 mikufans ，与其说是曾经以这些元素为主体，不如说其能够受人们喜爱之处尽皆在于这些。</p>
<p>我们曾经喜欢的 bilibili 已然不复存在，但它至少存在过，这块被遗忘的、未被修改过的 tag 便是其存在过的证明，</p>
<p>我们无法奢求 bilibili 变回曾经的 VU&amp;ACGN 网站，但是我们可以把曾经得到的感动与置信铭记于心，砥砺前行。</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">bilibili (゜-゜)つロ 乾杯~</span><br><span class="line">bilibili.sayonara</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Essays (随笔)</tag>
      </tags>
  </entry>
  <entry>
    <title>圖像測試</title>
    <url>/next-nest/2019/03/12/image-testing/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>圖像測試，沒什麼好說的。 。 。</p>
<span id="more"></span>
<p><img src="/next-nest/2019/03/12/image-testing/350x150.jpeg" alt><br><img src="/next-nest/2019/03/12/image-testing/Eagle.jpeg" alt><img src="/next-nest/2019/03/12/image-testing/Station.jpeg" alt><img src="/next-nest/2019/03/12/image-testing/Trains.jpeg" alt><br><img src="/next-nest/2019/03/12/image-testing/Sunset-1.jpeg" alt><img src="/next-nest/2019/03/12/image-testing/Buildings.jpeg" alt><img src="/next-nest/2019/03/12/image-testing/Sunset-2.jpeg" alt><br><img src="/next-nest/2019/03/12/image-testing/Cat.jpeg" alt></p>
<hr>
<p><img src="/next-nest/2019/03/12/image-testing/pixiv/1.jpeg" alt><img src="/next-nest/2019/03/12/image-testing/pixiv/2.jpeg" alt><br><img src="/next-nest/2019/03/12/image-testing/pixiv/3.jpeg" alt><img src="/next-nest/2019/03/12/image-testing/pixiv/4.jpeg" alt><br><img src="/next-nest/2019/03/12/image-testing/pixiv/5.jpeg" alt><img src="/next-nest/2019/03/12/image-testing/pixiv/6.jpeg" alt></p>
<blockquote class="pullquote left"><p>這一刻的夢想，一定能聽到！ </p>
</blockquote>
<p>最後一張, 是我最喜歡的VC曲<code>Hear Me</code>的截圖, 來自 <a href="https://www.bilibili.com/video/av42386818/"><code>av42386818</code></a></p>
<p><img src="/next-nest/2019/03/12/image-testing/Hearme.jpeg" alt></p>
]]></content>
      <tags>
        <tag>測試Testing!</tag>
      </tags>
  </entry>
  <entry>
    <title>記錄了一點在青島下雪時的景象</title>
    <url>/next-nest/2021/12/26/images-snow-qingdao-2021/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p><del>無需<code>tiktok</code>也能記錄的美好生活</del></p>
<span id="more"></span>
<h2 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h2><ol>
<li>平安夜當天<code>(Dec 24<sup>th</sup>)</code>已經開始降雪。當天在<code>QUST</code><sup><a href="#fn_1" id="reffn_1">1</a></sup>的午後冬陽，看來并沒能還原當時的景象。冬日的晴空往往更加清澈湛藍，一如寒風將層雲吹散，只剩下太陽懸挂在空中一般。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211224_123709.jpeg" alt="IMG_20211224_123709"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211224_151809.jpeg" alt="IMG_20211224_151809"></li>
<li>次日<code>(Dec 25<sup>th</sup>)</code>早晨，市南區某處的街道上不僅已有積雪，但部分已被清掃。不論怎樣，感謝環衛崗位的師傅們爲我們城市辛苦工作。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_091944.jpeg" alt="IMG_20211225_091944"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_091954.jpeg" alt="IMG_20211225_091954"></li>
<li>大型超商家樂福、地鐵2號綫站點浮山所<sup><a href="#fn_2" id="reffn_2">2</a></sup>、以及串聯它們的香港中路，香港中路車行道上中間部分，很有可能已被化雪車優先清掃，作爲青島市最重要的主幹路之一，需要時刻保證其正常通行。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_092058.jpeg" alt="IMG_20211225_092058">超商銀座附近的綠化區域。觀察可以發現灌木葉片上的積雪，甚是好玩。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_092147.jpeg" alt="IMG_20211225_092147"></li>
<li>世奧大廈，<code>學而思培優</code>青島站總部所在地。我曾經在此與在青島站的中山路部度過無數中學時代的青春、曾經因無知而癡迷於理科的青春。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_092536.jpeg" alt="IMG_20211225_092536">從這裏也能看見遠處的家樂福。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_092552.jpeg" alt="IMG_20211225_092552">世奧大廈樓前的地面，比起車輪碾壓過的痕跡，更像是環衛崗位的師傅們用拖把清掃的痕跡。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_092651.jpeg" alt="IMG_20211225_092651"></li>
<li>越過世奧大廈，向五四廣場<sup><a href="#fn_4" id="reffn_4">4</a></sup>方向深入。陽光照耀之下，積雪略微汎著金色，這是從視覺上也能感受到的溫暖。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_093357.jpeg" alt="IMG_20211225_093357"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_093427.jpeg" alt="IMG_20211225_093427"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_093608.jpeg" alt="IMG_20211225_093608">道路上對積雪的清掃也是以讓出行車路綫優先，其他的地方還沒有處理。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_093655.jpeg" alt="IMG_20211225_093655">這個地方似乎還沒有掃到。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_093737.jpeg" alt="IMG_20211225_093737"></li>
<li>五四廣場附近，綠化帶的灌木葉片上也存有積雪。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_093833.jpeg" alt="IMG_20211225_093833">五四廣場，雕塑<code>五月的風</code><sup><a href="#fn_5" id="reffn_5">5</a></sup>附近也是只有行車道被進行了清掃。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094019.jpeg" alt="IMG_20211225_094019"><code>五月的風</code>雕塑下的花壇中灌木葉片積雪意外的少。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094152.jpeg" alt="IMG_20211225_094152">可能出於人行道過寬的緣故，環衛師傅們優先清掃出了人行之路。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094218.jpeg" alt="IMG_20211225_094218"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094313.jpeg" alt="IMG_20211225_094313"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094322.jpeg" alt="IMG_20211225_094322">辛苦了，真的辛苦師傅們了（<code>π/2==90°</code>鞠躬）。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094328.jpeg" alt="IMG_20211225_094328"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094339.jpeg" alt="IMG_20211225_094339">這裏的噴泉設施，地面上積雪並不多，但是很均匀不像是被人爲削減的樣子。初步推斷是被<strong><em>優先而且徹底</em></strong>地清掃過一回，然後又經歷過一段時間的積雪導致的。之所以要優先清掃，大概是噴泉區域多通水結構，更易結冰。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094414.jpeg" alt="IMG_20211225_094414"></li>
<li>來到一家<code>便利蜂</code>便利店，玻璃鏡片上的溫度使遇到的水蒸氣瞬間液化，形成了這一層“水霧”<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_095210.jpeg" alt="IMG_20211225_095210"></li>
<li>回到世奧大廈附近，這應該才是車輪留下的痕跡。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_095852.jpeg" alt="IMG_20211225_095852">年少的朋友們，走向輔導班，一如三年前的我自己。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_100143.jpeg" alt="IMG_20211225_100143"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_100859.jpeg" alt="IMG_20211225_100859"></li>
</ol>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://www.qust.edu.cn/">青島科技大學 官網</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <a href="https://baike.baidu.com/item/浮山所站/23305085">百度百科詞條 青島地鐵(2號綫) 浮山所站</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_4">
<sup>4</sup>. <a href="https://baike.baidu.com/item/五四广场/1111704">百度百科詞條 五四廣場</a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_5">
<sup>5</sup>. <a href="https://baike.baidu.com/item/五月的风/5900119">百度百科詞條 五月的風</a><a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>「宵宮（原神）同人EP】剎那如夢人生</title>
    <url>/next-nest/2021/11/04/mons-dreamin-moment-life/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><pre><code>咲いて咲いて咲いて
夜空に舞った
セツナチックジンセー
歓声を頂戴
</code></pre><p>綻放！綻放！綻放！<br>在夜空中舞蹈，<br>給這剎那如夢的一生，<br>添上一點歡鬧。</p>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><a href="https://music.163.com/#/song?id=1871029743" title="網易雲音樂 セツナチックジンセー"><strong><em><ruby>剎那<rt>セツナ</rt>如夢<rt>チック</rt>人生<rt>ジンセー</rt></ruby></em></strong></a> 是由 <a href="https://space.bilibili.com/530682/">夢鼠計劃 (Project Mons)</a> 製作，於2021年8月16日投稿至Bilibili的原神 <a href="https://zh.moegirl.org.cn/宵宮" title="萌娘百科詞條 宵宮"><strong><em>長野原 宵宮</em></strong></a> 同人EP曲目，本曲目由與夢鼠長期合作的日本歌手 <a href="https://space.bilibili.com/2130520151/">空柚(くゆ)</a> 演唱。</p>
<span id="more"></span>
<blockquote>

    <div id="aplayer-HbTXMdoa" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1871029743" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p>Bilibili: <a href="https://www.bilibili.com/video/av547299837/"><code>av547299837</code></a></p>
</blockquote>
<h2 id="About-Naganohara-Yoimiya"><a href="#About-Naganohara-Yoimiya" class="headerlink" title="About Naganohara Yoimiya"></a>About <a href="https://zh.moegirl.org.cn/宵宮" title="萌娘百科詞條 宵宮"><strong><em>Naganohara Yoimiya</em></strong></a></h2><p>——關於 <a href="https://zh.moegirl.org.cn/宵宮" title="萌娘百科詞條 宵宮"><strong><em>長野原 宵宮</em></strong></a></p>
<p><a href="https://zh.moegirl.org.cn/宵宮" title="萌娘百科詞條 宵宮"><strong><em>宵宮</em></strong></a> 是由<a href="https://zh.moegirl.org.cn/MiHoYo">miHoYo</a>研發的遊戲《<a href="https://zh.moegirl.org.cn/原神">原神</a>》及其衍生作品的登場角色。</p>
<blockquote>
<pre><code>慶典開場，煙花綻放！
</code></pre></blockquote>
<p>才華橫溢的煙花工匠。<br>「長野原菸花店」現任店主，被譽為「夏祭的女王」，在稻妻城內可謂是家喻戶曉。<br>稻妻城每年舉辦的各式慶典都會用到宵宮精心製作的煙花，她有著焰火般旺盛的創造力，總能為人們帶來無與倫比的驚喜。<br>宵宮童心未泯，時常與孩子們一同玩些簡單又不失趣味的小遊戲，或是陪他們一起去找亮晶晶的小玩意兒。<br>孩童的純粹讓她感到無比快樂。<br>她也熱衷於社交，總是抓住一切機會與人攀談，似乎有著無盡的逸聞和想法亟待分享。<br>原則與匠心，是宵宮最為珍重之物——煙花雖然轉瞬即逝，絢爛的光影卻能永遠留存於人們心中。<br><strong>既是一瞬，也是永恆。</strong><br>這份短暫的奇蹟，便是她給予周圍人的「守護」。<br>「正是因為有大家的寄託，煙花才能以如此美妙的姿態一直存在下去吧。」</p>
<h3 id="Character-Experience"><a href="#Character-Experience" class="headerlink" title="Character Experience"></a>Character Experience</h3><ul>
<li><strong>第二章 第一幕 「不動鳴神，恆常樂土」</strong><br>給半四郎假神之眼並讓他躲過了眼狩令，與旅行者一起前往「町奉行所」救援製作假神之眼的正勝師傅。<br>在「町奉行所」裡看到正在對正勝師傅動私刑的守衛們被九條裟羅禁止。<br>宵宮用煙花吸引了守衛們，上前營救正勝師傅，九條裟羅發現並默許其行為。<br>然後與旅行者分離開，帶著正勝師傅去求醫。</li>
<li><strong>琉金之章 第一幕</strong><br>大人們為了三個孩子不亂跑而講了一個「大貉妖」的故事，宵宮也配合著並給這三個孩子煙花作為打敗「大貉妖」的武器。<br>和旅行者一起回到長野原舉辦煙花會。<br>藏匿偷渡回稻妻正被天領奉行通緝的朔次郎，幫助他逃出稻妻。<br>和旅行者為朔次郎準備逃出稻妻的船隻，為煙花會準備煙花材料，朔次朗對於是否再次離開稻妻猶豫不決。<br>宵宮和旅行者一起找一對老顧客，讓他們的兒子——在天領奉行作官的今谷佳祐幫忙，了解到今谷佳祐和朔次郎曾經發生過矛盾。<br>回到長野原，聽到今谷佳祐帶天領奉行的人來抓朔次朗，連忙追過去。<br>詢問孩子們線索，擊敗攔路的天領奉行眾，與今谷佳祐打賭，戰勝今谷佳祐為朔次郎贏得單獨坦白的機會，今谷佳祐與朔次朗和解。<br>最後長野岩煙花會開始，與旅行者觀看煙花，並給旅行者一張「長野原菸花店」的紙條。</li>
<li><strong>第二章 第三幕 「千手百眼，天下人間」</strong><br>給旅行者一個「特大號煙花」。</li>
</ul>
<h3 id="About-the-Character"><a href="#About-the-Character" class="headerlink" title="About the Character"></a>About the Character</h3><ul>
<li>由於日語CV植田佳奈的代表角色為<a href="https://zh.moegirl.org.cn/遠坂凜">遠坂凜</a>且為<a href="https://zh.moegirl.org.cn/伊什塔爾(Fate">弓系角色</a>)，且宵宮擁有<a href="https://zh.moegirl.org.cn/關西腔">關西腔</a>，因此宵宮得到了“關西遠坂凜”“關西腔弓凜”的外號。</li>
<li>宵宮所在家族的姓為“長野原”，父親為長野原龍之介，因此其全名應該是“長野原 宵宮”，與<a href="https://zh.moegirl.org.cn/芭芭拉">芭芭拉</a>、<a href="https://zh.moegirl.org.cn/香菱">香菱</a>一樣，官方提供了理論上的姓氏，但是沒有提及全名。</li>
<li>跟踪導彈真君<ul>
<li>在蓄力時產生3枚 <em>焰硝矢</em> ，這些 <em>焰硝矢</em> 起到跟踪作用，因此得名。</li>
</ul>
</li>
<li>宵宮有個相關的每日委託「煙花試玩計劃」，旅行者可以放有各種圖案花樣的煙花。</li>
</ul>
<h2 id="Staff"><a href="#Staff" class="headerlink" title="Staff"></a>Staff</h2><ul>
<li>Music/Lyrics: U-DON</li>
<li>Arrangement: あずきどん。</li>
<li>Vocal: 空柚_official</li>
<li>Illustration: 阿稳同学_</li>
<li>PV: K_Lacid</li>
<li>Management: Mizuyo</li>
</ul>
<h2 id="Lyrics"><a href="#Lyrics" class="headerlink" title="Lyrics"></a>Lyrics</h2><figure class="highlight plaintext"><figcaption><span>セツナチックジンセー 歌詞</span></figcaption><table><tr><td class="code"><pre><span class="line">- Project Mons 2021 -</span><br><span class="line">A)</span><br><span class="line">しかと思い込め火を付けろ</span><br><span class="line">浮世飾る刹那</span><br><span class="line">後の祭りとか要らへんで</span><br><span class="line">騒げ 恥を捨てて</span><br><span class="line">B)</span><br><span class="line">あー酔いに酔って馬鹿げた夢を見る</span><br><span class="line">そういうもんやってカッコつけて</span><br><span class="line">よりによって素面で恋に泣く</span><br><span class="line">ぐしゃぐしゃでも見上げりゃ ほら</span><br><span class="line">「綺麗やろ？」</span><br><span class="line">C)</span><br><span class="line">咲いて咲いて咲いて</span><br><span class="line">夜空に舞った</span><br><span class="line">セツナチックジンセー</span><br><span class="line">歓声を頂戴</span><br><span class="line">なあ この絶景に涙は似合わんで</span><br><span class="line">吸って吐いて吸って</span><br><span class="line">思いっきり吐いて</span><br><span class="line">冴え渡った脳内</span><br><span class="line">心配はオーライ！</span><br><span class="line">さあ どの瞬間もまばたき御免や</span><br><span class="line">D)</span><br><span class="line">躊躇ってなどくれるなよ</span><br><span class="line">派手に咲き誇れ夏の花</span><br><span class="line">まだまだ今宵は旅の途中 託すんや輝きを</span><br><span class="line">何度でも「もう一度！」</span><br><span class="line">C2)</span><br><span class="line">咲いて咲いて咲いて</span><br><span class="line">夜空に舞った</span><br><span class="line">セツナチックジンセー</span><br><span class="line">お手を拝借</span><br><span class="line">なあ 無理難題が丁度ええやんか</span><br><span class="line">吸って吐いて吸って</span><br><span class="line">思いっきり吐いて</span><br><span class="line">打ち上がった正体</span><br><span class="line">気分はどうなん？</span><br><span class="line">さあ ほな永遠にまばたき御免や</span><br><span class="line">まだ消えないで</span><br></pre></td></tr></table></figure>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>萌娘百科詞條 宵宮: <a href="https://zh.moegirl.org.cn/宵宮">https://zh.moegirl.org.cn/宵宮</a></li>
</ol>
]]></content>
      <tags>
        <tag>Genshin Impact (原神)</tag>
      </tags>
  </entry>
  <entry>
    <title>It NEVER Entered my Mind</title>
    <url>/next-nest/2021/10/24/it-never-entered-my-mind/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><h1 id="It-NEVER-Entered-my-Mind"><a href="#It-NEVER-Entered-my-Mind" class="headerlink" title="It NEVER Entered my Mind"></a>It NEVER Entered my Mind</h1><p><code>SwannsWay</code></p>
<blockquote>
<p>Summary:<br>Christmas is, pretty obviously, a romantic affair; Shioriko knew, and perhaps it was this fact alone that kept her mind running faster than it ever had.</p>
</blockquote>
<span id="more"></span>
<blockquote>
<p>Notes:<br>(See the end of the work for notes.)</p>
</blockquote>
<h2 id="Chapter-I"><a href="#Chapter-I" class="headerlink" title="Chapter I"></a>Chapter I</h2><p>“On Christmas, huh?” Kaoruko had said. Shioriko figured her sister would get a kick out of that. “Well, a proper date might actually do you some good. I’m glad you were ‘ tricked into this. ’”</p>
<p>“I was tricked into this,” Shioriko protested, but her sigh signaled obvious weak resistance. “At any rate, it’s not a date. She’s just a friend from class.”</p>
<p>“Is she cute?” Kaoruko asked, almost indifferently.</p>
<p>“Don’t be ridiculous,” Shioriko quipped, feeling splotches of heat forming on her face. “She’s a girl. We’re both girls.”</p>
<p>“Uh, okay? When has that ever stopped anyone before?” Kaoruko asked. “It has certainly never stopped me before.”</p>
<p>“Kaoruko!” Shioriko hissed, and looked around as if her sister had just divulged a millennium-old secret. “If mother and father knew that, they would…”</p>
<p>“They would what? Disown me? Please, Shioriko,” Kaoruko laughed. “I know enough family secrets to bankrupt their entire operation tomorrow if I wanted to.”</p>
<p>Shioriko sighed, pinching the bridge of her nose. “I can’t tell if you’re being serious or not, Kaoruko.”</p>
<p>Kaoruko hummed a note into the receiver. “Maybe it’s better that way, sweetie. So, where are you guys going?”</p>
<p>“Shimokitazawa,” Shioriko said, rolling her eyes. “It was her suggestion, as neither of us really goes there very often.”</p>
<p>“Ooooh, trendy,” Kaoruko said, sounding genuinely impressed, which irritated Shioriko. “I’ll shoot some recommendations your way later. You should stay at the Shinjuku apartment if you’re planning to go all the way there.”</p>
<p>“That was my intention. I might offer her to stay in your be—“ Shioriko started, before she had absolutely any time to think about how her words could be construed (or misconstrued). She could not even think of a fall-back. “Um, yeah. I’m looking forward…to it.”</p>
<p>Shioriko could practically hear her older sister break into a grin.</p>
<p>“My bedroom, huh? Nice,” Kaoruko sang, sounding pleased. “It’s soundproof, you know? Just clean up after you two are done.”</p>
<p>Which were the last words Shioriko heard before she summarily ended the call, walking over to the kitchen sink and splashing cold water on her face.</p>
<p>Shioriko can’t seem to make her heart stop beating at the speed of sound, light, and other such fast things, combined and multiplied by another very large number. That’s how she reckons it, mostly because it stops her from being angry at herself for not understanding why it even beats like this in the first place.</p>
<p>And why am I here this early? She wonders, as she swings her body on the heels of her brown loafers near the entrance of the metro station—their agreed rendezvous. She could look at her watch, but she already knows it will be a while, so she walks over to a nearby outdoor café ( isn’t it winter? ) and orders some tea. It smells of a spring meadow, she thinks, as the steaming liquid envelops her and makes her brain fire signals through every corner of her nervous, freezing existence.</p>
<p>Ayumu Uehara.</p>
<p>It’s not exactly that she had lied to Kaoruko either, save maybe by omission. She had fully intended to spend Christmas by herself, curled up in bed and reading a book, or maybe even getting ahead in her classes. As her first holiday break not spent at the main Kyoto house, in the company of her family, she did not (indeed, could not) consider this season any different than any other regular vacation. And as with every other vacation of her life, she would spend it either studying, volunteering somewhere, or in quiet repose—in the solitude of her room. That is, until the last day of class.</p>
<p>“Shioriko, is that your family?” Ayumu had said, pointing at Shioriko’s laptop wallpaper. “I’m sorry. I didn’t mean to look.”</p>
<p>“Ayu—Uehara,” she stuttered. Why had she stuttered? “Yes, I…those are my parents, and she is my sister.”</p>
<p>“Wow, she’s gorgeous,” Ayumu said, eyes wide open. Shioriko was used to that reaction and yet, for perhaps the first time in her life, felt only something unpleasant from it. “Looks like it runs in the family.”</p>
<p>Oh.</p>
<p>“I…,” Shioriko tried, failed, and tried again. “I used to have long hair like her, as well.”</p>
<p>What? Who cares, Shioriko?</p>
<p>Ayumu hummed happily, hands in her coat pockets, giving Shioriko’s hair a once-over, as if imagining it flowing down her tense shoulders. Much like Shioriko had been earlier, she swung her weight on the heels of her boots.</p>
<p>“Yes, I…I usually…,” Shioriko could not think of anything to say under such scrutiny. Had Ayumu’s eyes always been so pretty? “This is the first time we are not spending the holidays together. They will be in Kyoto and…well, I will be in the dorms.”</p>
<p>“Oh,” Ayumu said, suddenly stopping. “You mean, like, Christmas and stuff?”</p>
<p>And the rest, it should go without saying, is history.</p>
<p>Christmas in their country is, pretty obviously, more of a romantic affair; Shioriko knew, and perhaps it was this fact alone that kept her mind running faster than it ever had. She watches swaths of couples stroll hand in hand out through the station turnstiles, no doubt on their way to some romantic hole-in-the-wall that was sure to impress. Shioriko hasn’t come up with much of a “plan”—she has some ideas of things they could do, sure, but nothing she might call date-worthy ( as if I knew what that even meant , she thinks)—and yet, she figures that, given the perfectly-platonic nature of this…meet-up…there might not be much harm in a little spontaneity. </p>
<p>She reckons that, given her reasoning of this whole thing, it isn’t no wonder she didn’t have many friends in high-school.</p>
<p>Or maybe—oh, my god—or maybe this is a date, and I am preposterously unprepared for it , is her first thought as she watches Ayumu swipe her card on the electronic turnstile and look around. From across the street, Shioriko finds herself rendered immobile by who-knows-what invisible force.</p>
<p>Shioriko doesn’t know too much about fashion outside of what Kaoruko teaches her, but even she knows enough to recognise Ayumu as a stylish person. Unlike herself, Ayumu looks to be fairly popular with her classmates, and Shioriko reckons that Ayumu may have never as much looked her way if they hadn’t been paired up for a short project halfway through the semester. What Shioriko sometimes finds funny (though not so much now), was that she didn’t find it particularly difficult to talk to Ayumu at first. It had been just a project for a class, after all, and sure, Shioriko would never be dubbed as particularly friendly, but even she could hold herself up in conversation (especially if it was about school). It became difficult to talk to Ayumu as the barriers of formality slowly gave way to a surprisingly warm acquaintanceship; it reminds Shioriko of the smell of cypress, dissipating into the chilly, diaphanous refractions of a winter morning’s light. She thinks of several other metaphorical suggestions as she freezes on Ayumu catching sight of her, and waving excitedly before crossing the street to catch up to her. She wears a slim tartan skirt, with a threaded sweater stylishly tucked at the waist. Matching wool coat and beret, Shioriko guesses, and dark tights meeting under Chelsea boots. A classic, feminine getup that looks like it was made for Ayumu—like it was meant to knock out anybody that had as much as a pair of eyes.</p>
<p>And a pair of eyes Shioriko does indeed have.</p>
<p>“I’m sorry, I hope you weren’t waiting for long…” Ayumu says, her sentence fading as she gives Shioriko a slow, painfully long once-over. “Wow, Shioriko. Wow. You look so…different.”</p>
<p>‘ Different’ is a word for it , Shioriko thinks, chastising herself for not opting for something— anything —else in her very limited selection of western-styled clothing. She had decided, against her usual infallible judgement, to listen to Kaoruko and go for something her sister picked. Never one for dresses, she wears a pair of faded skinny jeans of Kaoruko’s, its waist circumscribing a tucked-in black turtleneck sweater. Tokyo is cold this year, so both a gray, fine tweed blazer underneath a black wool peacoat completes Shioriko’s outfit, like a bow on a very monochrome Christmas present.</p>
<p>“I…these are not all my…they’re…,” Shioriko starts, wondering if the Japanese language has always been so difficult. She lands, instead, on a sigh. “They’re a bit…boyish, are they not?”</p>
<p>She awkwardly shoves her hands in her peacoat pocket, too quickly for it to appear like a natural gesture. Ayumu takes a moment to smile a radiant display that puts the city’s holiday decorations to shame, eclipsing the cold of the December wind with a warmth that hails from the pit of Shioriko’s stomach, spreading in elegant swirls throughout her body—a single drop of rose-coloured ink landing on Shioriko’s once-crystalline conscience.</p>
<p>“They are boyish,” Ayumu says and, before Shioriko has any time to react, holds out her open palm. Shioriko forgets how to breathe. “And it suits you. Let’s go eat something?”</p>
<p>A nod, which is all Shioriko can offer apart from her balmy hand ( thank goodness for gloves ), and then they’re on their way.</p>
<p>“Vice-president?” Ayumu says, eyes wide in obvious surprise. “Of the student council? Like, of the whole school?”</p>
<p>Shioriko can’t help a bit of a proud, almost wry, smile. This wouldn’t be the first time somebody hadn’t felt that particular piece of information coming a bit out of left-field. She knew most, including Ayumu, did not mean any harm, but it always feels peculiar to her that nobody sees it coming.</p>
<p>By now, they’ve moved to a little restaurant, a few ways up a gentle hill off one of the main streets, that specializes in curry. She hardly knows, and tries not to think about, the romantic value of a curry shop, but Kaoruko had strongly recommended it and Ayumu seemed genuinely excited at the prospect. Besides, Shioriko muses, judging by both their immediate neighbors (two couples speaking to each other with tangible intimacy that makes Shioriko just the smallest bit uncomfortable), not even a working-class ramen shop could escape the romanticism of the holiday.</p>
<p>Why exactly do I care if this place is romantic, again?</p>
<p>“That’s so cool!” Ayumu says, clasping her hands below her chin. Shioriko feels prouder than ever for something that, at least for her, has always been par for the course. “Wait a second. That would mean that you work with Setsuna, no?”</p>
<p>Shioriko cocks her head just a tiny bit, not recognizing the name.</p>
<p>“Oh, uh,” Ayumu says, correcting course and looking a bit sheepish. “With um…Nana, I mean.”</p>
<p>“Oh,” Shioriko says, with a perk. “President Nakagawa? Yes, of course. Are you friends with her?”</p>
<p>“You…could say that?” Ayumu says, making a face. “We’re coworkers…of sorts.”</p>
<p>“What do you—,“ Shioriko starts.</p>
<p>“Hello! Welcome to Rojiura,” The waitress chirps, suddenly occupying the whole of Ayumu’s attention. “May I take your order?”</p>
<p>Ayumu, looking visibly relieved, begins discussing her options when a flash catches Shioriko’s eye. Turning, she realises it to be Ayumu’s phone which, facing up, lit up at a notification for a text message. Much as Shioriko, out of prudence and propriety, willed herself not to look at the contents of the message, she did not manage to turn her head in time to miss the name of its sender:</p>
<p>❤️ Yuu ❤️</p>
<p>A feeling hitherto unknown to Shioriko springs from a dusty alcove in her chest, quickly running laps down her spine and up her arms, freshly clamming up her palms and fogging her brain. When she tries to push the feeling back down the pit of her stomach, it retaliates with such fervor that the sensation makes her want to cry out.</p>
<p>Shioriko had known and understood, at least to a clinical degree, the meaning of jealousy, but she figures nothing could have so starkly illustrated its experience than the feeling that now pullulated her body.</p>
<p>“Shioriko?” she hears. “Are you okay?”</p>
<p>She snaps out of it, and looks up to find both Ayumu and their waitress looking at her—the former with heartbreakingly candid concern.</p>
<p>Jealousy doesn’t mix well with guilt, Shioriko learns.</p>
<p>“Y-yes. Yes, of course,” Shioriko manages, clearing her throat with some effort. “I must be really hungry. I’ll have the vegetable curry, please.”</p>
<p>“Understood,” the waitress says, with expert cordiality. “And please do not hesitate to let me know if you need anything else.”</p>
<p>Ayumu waits for the waitress to be out of earshot before she reaches out and gently grasps Shioriko’s forearm with her hand.</p>
<p>“Are you sure you’re okay? You looked really pale for a second there,” Ayumu says, cautiously. And then, smiling: “That’s more like it. The colour is returning to your face.”</p>
<p>“Oh,” Shioriko musters, reckoning the heat that splotched her cheeks must have something to do with that. “That’s…good.”</p>
<p>“Anyway,” Ayumu says, looking satisfied and finally removing her hand. “Speaking of Nana, she actually recommended I check out a place around here that she likes going to.”</p>
<p>“She did?” Shioriko asks, genuinely surprised. President Nakagawa comes to Shimokitazawa? Shioriko makes a mental note to ask her ever-serious superior about that after the holidays.</p>
<p>“M-hm!” Ayumu sings, and Shioriko feels like she would happily listen to the voice forever. “You like music, right?”</p>
<p>The shop is unassuming, off one of the main streets, and sparsely decorated with nautical accents. A pretty redhead welcomes them from the counter and invites them to take their time looking around before sitting down. Shioriko hadn’t been to a record shop in a while, not since she used to accompany her sister to shop for used vinyls in Shimogyō, but those old, dusty shops didn’t resemble the subtle chicness of the place Ayumu had suggested, which seemed to be equipped with a sort of bar and several tables. Nonetheless, the sight of record players felt homely and familiar. Kaoruko would like her , Shioriko thinks with a smile, before she catches herself and shakes her head.</p>
<p>“So, this is how the place works,” Ayumu starts excitedly, spinning on her heels to face Shioriko, and the latter’s breath hitches for the thousandth time that night. “Go look for a record or two that you’d like to listen to. I’ll order us drinks in the meantime. Once you’re back, we both listen to the record wearing headphones that play from the same turntable, while we drink. We can, of course, just have our drinks and talk, right? But I read online that the charm of the place is relaxing at our table, and letting the music do the talking.”</p>
<p>Ayumu sounded so excited at the idea that, regardless of whether Shioriko may be into it as well (she was), she would do it in a heartbeat. She scans the room and spots a corner table, straddled by the store’s large front windows and a wooden display case, creating a secluded spot in the otherwise open space. It’s perfect, Shioriko thinks.</p>
<p>“Sounds fun,” Shioriko says, smiling; she points to the open table. “Let’s get that spot…before anyone else does.”</p>
<p>Ayumu orders them glasses of wine while Shioriko selects a couple of records for them to listen to. The selection is mostly not a contemporary fare, but she recognises a good amount of names from her childhood. She opts for a couple of ones that she remembers being pleasant, fetching a Beach Boys LP and a Nino Ferrer 7-inch 45 that she’s surprised to find anywhere else outside of her father’s eclectic collection. When she returns to the table, she’s surprised to find Ayumu waiting with a record already on the turntable, looking at her sweetly, resting her chin on one hand.</p>
<p>“I’m sorry, I saw this one on my way back from the bar and knew we had to listen to it,” Ayumu says, motioning at an old, dusty record sleeve bearing the picture of a trumpet player. Jazz, on Christmas, huh? “Let’s?”</p>
<p>The record begins with a sleepy, intimate rendition of a show tune from the 40s (at least, according to the back of the sleeve), recorded in 1954 in the United States. Shioriko finds it perfect for the mood, as she sinks deep into the padded chair opposite to Ayumu. It doesn’t do much to calm her nerves though; Ayumu raises her glass in a silent toast and takes a sip of the claret, not taking her eyes off Shioriko’s for even a moment. Shioriko, for a lack of some better response, does the same and takes a sip from her own cup.</p>
<p>She doesn’t drink very often, but she reckons she will need it tonight.                                           -Summary:<br>“Well, that was rather direct, wasn’t it?” Ayumu says, smiling. “Come here, Shioriko.”</p>
<blockquote>
<p>Notes:<br>(See the end of the chapter for notes.)</p>
</blockquote>
<h2 id="Chapter-II"><a href="#Chapter-II" class="headerlink" title="Chapter II"></a>Chapter II</h2><p>Shioriko struggled with even getting her wallet out of her bag and against the metro turnstile scanner. By the time she’s across, Ayumu is leaning against the station wall, watching her, and decidedly amused. Her cheeks are red, to be sure, but she seems to be handling the two glasses of wine that they each had better than Shioriko is.</p>
<p>“You okay, Shioriko?” Ayumu says, her smile softening. “Do you want me to get you some water?”</p>
<p>“I think I will be okay,” Shioriko says, as truthful as her inebriation allows. “I usually only drink saké, and even that is usually limited to my family’s new year celebrations.”</p>
<p>“That sounds nice,” Ayumu says, holding on to Shioriko’s arm as they climb the stairs down to their track. “Your family sounds cool.”</p>
<p>“I suppose, yes. I have not really thought about it too much,” Shioriko says, ignoring the heat radiating from Ayumu’s arm, through both their coats and right to Shioriko’s core. In her current state, however, she can’t bring herself to care too much.</p>
<p>They step onto a Shinjuku-bound train where, by some miracle, a couple rushes out of their seats. After mulling it over a bit, and at the behest of quite possibly the nicest salarymen in Tokyo, who insist they take the seats, they alight on the warm velvet; all the while, Ayumu does not let go of Shioriko’s arm.</p>
<p>“Well, I am used to people thinking Kaoruko is cool,” Shioriko says, not knowing where else to take the conversation, and in dire need of a distraction from a certain lot of unfamiliar, very intrusive thoughts. “I suppose she is what you would call the…cooler…sibling?”</p>
<p>Ayumu hums to herself thoughtfully. “I’m sure she’s cool. She certainly looks it.”</p>
<p>Yep, there it is , Shioriko thinks, and holds back a sigh.</p>
<p>“But I happen to like you better,” Ayumu says, shooting straight through Shioriko’s foggy conscience.</p>
<p>“Oh,” Shioriko manages, and can’t even imagine the shade of red that must be burning through her face at the moment. “Th-Thank you.”</p>
<p>She’s then surprised to hear Ayumu sigh in a peculiar way, which Shioriko doesn’t like. She turns to find Ayumu looking down at her hands crossing elegantly over her lap. She doesn’t look happy, that much is certain, and Shioriko begins to panic.</p>
<p>“Hey, Shioriko?” Ayumu begins, not looking her way. “I think I should apologise for today.”</p>
<p>Shioriko freezes. “Apologise? But why?”</p>
<p>Ayumu shrugs a bit, and uncoils her arm from Shioriko’s, who instantly misses it in possibly the most bittersweet way possible.</p>
<p>“I don’t know how to explain it, but I get the feeling that I’ve been making you uncomfortable all day today,” Ayumu says, sounding genuinely upset at this notion. “That was not my intention whatsoever. I’m not usually like this…this pushy , I guess.”</p>
<p>“Pushy?”</p>
<p>“You know, I’m not usually one to suggest things, or plans outings like this. I think this may be the first time I ask somebody on a…”</p>
<p>The train slows to a stop, and the doors open to the bustle of Yoyogi-Hachiman Station. Shioriko doesn’t notice, and holds her breath.</p>
<p>“…um, well. I’m really sorry if I’ve been making you uncomfortable,” Ayumu says, barely audible. “I hope you had some fun, at least.”</p>
<p>“Uehara?” Shioriko steels herself.</p>
<p>“Hm?”</p>
<p>“I…did not mind you asking me to do things,” Shioriko says. “I cannot think of the last time I was so happy to be out with someone. This…might be the best Christmas I have ever had.”</p>
<p>It was Ayumu’s turn to be rendered speechless, and instead looks at Shioriko with an intensity that has her breaking into cold sweat.</p>
<p>“But, um,” Shioriko continues. “If you are used to being more on the receiving end of requests, then…”</p>
<p>I’m so sorry, mom and dad.</p>
<p>“Odaiba is a bit far, so I was planning on spending the night at my family’s apartment in Shinjuku,” Shioriko says, not believing herself. “Why don’t we watch a movie there…or something?”</p>
<p>Ayumu’s lips part.</p>
<p>“You can stay over too. We have a spare room and…well, if you want to, anyway,” Shioriko says, and runs out of steam. “Sorry, I am not sure why I said that.”</p>
<p>Ayumu slinks her arm around Shioriko yet again, drawing a tiny, surprised gasp from her.</p>
<p>“That sounds like a lovely idea,” Ayumu says. “If I’m not imposing too much—and please, tell me if I am—then I’d be glad to.”</p>
<p>Shioriko is having a good amount of trouble breathing, and she figures the sight of Ayumu uncorking a bottle of wine at the kitchen counter, in the conspiratorial silence of the large, empty apartment, might have everything to do with it.</p>
<p>What the hell am I doing?</p>
<p>“That stereo is amazing,” Ayumu says, signaling to the old turntable set of Shioriko’s father’s. “Do you guys still use it?”</p>
<p>“Yes, definitely,” Shioriko says, thankful to have something else to think about. “If you open the drawers next to the cabinet speakers you’ll find some of my father’s records.”</p>
<p>Shioriko gets up and pads towards the stereo, sliding the drawers’ wooden door and revealing a set of carefully stored vinyls.</p>
<p>“It is not his main collection, but it has some good stuff,” Shioriko says, picking out a Joāo Gilberto record she likes. Without having to think about it, she slides the disk out of its protective sleeve, then out of the paper one, placing it carefully on the turntable and turning the system on. Before moving the needle to the first groves, she takes a soft brush with a wooden handle and lightly presses it on the spinning vinyl, removing a thin film of accumulated dust. Finally, sliding the arm to the first song of side A, she lets it alight. As the sentimental strings of the track stream from the speakers, Shioriko turns to find Ayumu sitting at the table, with two glasses of Merlot at the ready. Shioriko wills herself not to look at Ayumu’s legs—colour shifting from the dark of her tights and the gentle, suggestive pinks of her skin underneath.</p>
<p>“Wow,” Ayumu says, smiling with her chin resting on her palm, staring straight at Shioriko. “That was kind of amazing.”</p>
<p>Shioriko doesn’t know what it was that she did that was so amazing, but she certainly is glad that she did.</p>
<hr>
<p>They talk, with surprising ease, through about half of the bottle and some snacks. Shioriko finds herself really enjoying the warm, dulcet high of the wine. It feels of the carelessness of childhood, tinged with the intimacy and maturity of adulthood. And to be sharing it with one as Ayumu, who takes whatever topic Shioriko may bring up in vivid conversation, makes it all the better. As Shioriko takes another sip from her glass, sweet bossa nova dissipating her uncoiling inhibition, she finds herself meeting—and this time, for a very long time—Ayumu’s eyes, during one of the conversation’s natural pauses.</p>
<p>And then, Ayumu’s phone rings.</p>
<p>“Oh,” Ayumu says, looking at the screen, then at Shioriko. “Dang it. Do you mind if I take this on the balcony?”</p>
<p>“Not at all,” Shioriko says, a little confused. “Take your coat. It’s cold out.”</p>
<p>“Thanks,” Ayumu says, smiling sweetly. She gives Shioriko’s hand a gentle squeeze, and drags her fingers lightly on her skin as she removes it. “I’ll be right back.”</p>
<p>“Okay,” Shioriko says, temporarily losing her ability to construct a longer sentence.</p>
<p>And such a feeling would have remained, had she not picked up Ayumu’s first words into the phone, before she closed the balcony’s door. A sweet:</p>
<p>“Hi Yuu! I’m sorry I haven’t called.”</p>
<p>Oh.</p>
<hr>
<p>Shioriko steps into the bathroom and takes a few deep breaths; she is angry, she doesn’t know why, and she doesn’t like it.</p>
<p>She is being unreasonable, and she knew it, but somewhere in the confines of her young, inexperienced mind, she feels her anger to be oddly justifiable. There is a certain sobriety in her frustration that wrings her back to her usual logical self—the one who spelt danger on this whole date idea from the very beginning and to whom Shioriko refused to listen to, choosing instead to ignore every red flag hoisted around her heart’s most sensitive places. Those very same spots now reeled in a way Shioriko didn’t understand.</p>
<p>She looks in the mirror and discovers a few stray tears running down her face, thrown under the starkness of the bathroom’s harsh lights. Why is she so upset? She does not trust herself to face Ayumu in this state, so she furiously seeks a contingency plan. She figures, above everything else that plagued her mind, that her most urgent need was to find out where Ayumu stood with respect to her.</p>
<p>What, exactly, is Ayumu looking for? she asks herself.</p>
<p>If she figures this out, then, in her own time, she can help reconstruct her own reality, pulling whatever she can from the vestiges of what she hopes will not be heartbreak.</p>
<p>Heartbreak? Yes, that’s what this could turn into, and you know it.</p>
<p>This simple, unwavering admission calms Shioriko a good amount, and she realises that she may have been more angry at herself all this time than at Ayumu. She figures there will be time, later, to think about what it would imply with respect to her life, and what she should do about it.</p>
<p>But there were other things to be done for the time being.</p>
<p>She finds Ayumu back at the table. Stepping into view, Ayumu smiles sweetly, before it falls somewhat. Shioriko had tried to fix her makeup as best as possible, but who knows what she must look like.</p>
<p>“Shioriko?” Ayumu calls, with some caution. “Are you okay?”</p>
<p>“Yes,” Shioriko says, not trusting herself with more than that. Before sitting back down, she goes to the turntable and places the record on side B, taking a couple more discrete breaths on the way. She sits back down and finds a glass of water next to her glass of wine.</p>
<p>“Hydration is important,” Ayumu says, sounding sheepish.</p>
<p>The remark catches Shioriko by surprise, and she can’t help but laugh. Ayumu laughs with her, holding that dainty hand of hers in front of her mouth. Shioriko, for a moment, forgets why she was upset in the first place. The feeling is short lived, though, as she feels, below the table, the feeling of Ayumu’s foot drawing slow, languid circles on hers.</p>
<p>They are impossibly warm and, lest Shioriko pass out from a heat stroke, she skips several steps in her plan and blurts out:</p>
<p>“Um,” She starts. “Who…called earlier?”</p>
<p>“Huh?” Ayumu says, face flushed and clearly distracted. “Oh, just now?”</p>
<p>Shioriko nods.</p>
<p>“That was Yuu; we live together back at the dorms,” Ayumu responds. Roommates. Okay . A simple enough answer, but something about the way she avoids Shioriko’s eyes makes her uneasy. “She just wanted to ask why I wasn’t home yet. I forgot to tell her I wasn’t coming back tonight.”</p>
<p>“I see,” Shioriko says and hopes that she sounds casual enough. “She must really care about you.”</p>
<p>“Well,” Ayumu starts, a small smile tugging at her lips. “We’ve been together since we were kids. We’ve been looking out for each other ever since, so I can’t imagine not caring about her like that as well.”</p>
<p>It hits Shioriko like a speeding bullet and she doesn’t know how to react. Ayumu, too, seems to notice the sudden shift in the atmosphere, and turns to look at Shioriko. She feels fresh tears welling up from the depths of her asphyxiating world, and takes a large swig from her wine glass to hide as much of it as possible.</p>
<p>“Shioriko?” Ayumu says, suddenly alarmed.</p>
<p>“I’m okay,” Shioriko says, coughing a little. “I think it’s…wonderful to be together with somebody like that.”</p>
<p>Ayumu peers at her thoughtfully for a few moments, her eyes darting all over Shioriko’s face in search for something Shioriko couldn’t begin to understand. She finds it painful to meet Ayumu’s gaze, but something inside Shioriko alerts her of the importance of this moment—as if that delicate thread connecting her to Ayumu would be severed should she so much as blink.</p>
<p>“Oh,” Ayumu finally says, her eyes suddenly wide. “Oh, no. Yuu? No, no. It’s not like that. We’re very close friends—she’s my best friend—but nothing more. Nothing…like that, anyway.”</p>
<p>Ah.</p>
<p>“Ah,” Shioriko parrots herself, out loud, and feels as if the weight of all the water of all the oceans of the whole world had been lifted from her chest. “Yes, yes. That makes sense. That is a relief.”</p>
<p>Ayumu blinks twice, before Shioriko has time to realise why. A small, knowing, and puncturing smile makes its way across Ayumu’s mouth. “ What is a relief?”</p>
<p>“I…” Shioriko tries. “I don’t know why I said that.”</p>
<p>A terribly long (by Shioriko’s estimation, anyway) pause.</p>
<p>“Hey, Shioriko?”</p>
<p>“Yes?”</p>
<p>“Should we watch that movie?”</p>
<p>“Yes.”</p>
<p>They watch an old, British, Christmas comedy with so many characters that Shioriko has a hard time remembering all of their names, but that Ayumu seems to love. Just as well , Shioriko thinks to herself; given their close proximity on the couch, underneath a single blanket, there was not a story simple enough for Shioriko to have been able to focus on. The fact that the bottle of wine lay empty on the kitchen counter, its contents now performing chemical mischief through Shioriko’s small body, did not help in the least bit. At certain points during the movie, they laugh heartily and press their bodies against each other, making Shioriko wonder if this is what intimate friendship—shy not of a single platonic touch—is like.</p>
<p>The fact that Ayumu, then, does not move back to her original position and instead sinks her weight against Shioriko’s chest reminds her that this is likely something else entirely.</p>
<hr>
<p>When the movie ends and the credits start to roll, neither of them moves, nor says a word. Shioriko is at a complete loss, as she can’t see Ayumu’s face from her vantage point.</p>
<p>She wonders if Ayumu has fallen asleep, and if so, it would be impolite to wake her up. At the same time, she reasons, it would be less polite to have her sleep uncomfortably, when she could obviously offer better accommodations. What troubled her the most, however, was that she didn’t want Ayumu to move, and she wondered, at this point, if she was taking advantage of Ayumu.</p>
<p>That is not what she wants.</p>
<p>She continues this internal dialogue through the entirety of the credits, and the screen returns to the main menu. Still no word from Ayumu.</p>
<p>“Hey, Uehara?” Shioriko whispers, not knowing what else to do.</p>
<p>“Ayumu,” Ayumu says, in full voice, startling Shioriko. She turns up to look at Shioriko. “You can call me Ayumu by now, silly.”</p>
<p>“Ayumu,” Shioriko says, and it feels so good that she almost has to gasp it. “Should we…call it a night?”</p>
<p>“Hmm,” Ayumu hums, resting her chin but not taking her eyes off Shioriko. “If you want.”</p>
<p>Then, Shioriko remembers.</p>
<p>“Your present,” Shioriko says. “I forgot to give you your present.”</p>
<p>“Huh? You got me a present?” Ayumu says, rising a little. “You…what? You didn’t have to!”</p>
<p>“Well, um, it’s Christmas, right?” Shioriko says, feeling awkward. “Can I…go get it? I will be right back.”</p>
<p>“Okay,” Ayumu says, sounding almost sad. “But come back?”</p>
<p>Shioriko nods and slowly removes herself from the warmth of the blanket. Reaching for the plastic bag inside the leather backpack she’s had on all day, she takes a small, flat object, wrapped neatly in paper with little cartoon ships on them. She walks over to the couch, and hands it to Ayumu.</p>
<p>“Oh, Shioriko,” Ayumu says, beaming at her. “Thank you. I am so sorry; I didn’t know if getting you something would have made you uncomfortable. So I…I guess I opted for being safe.”</p>
<p>“Please, do not worry. I bought this rather last minute, myself,” Shioriko hurries to say. “Today, in fact.”</p>
<p>“Oh,” Ayumu says. “Can I open it?”</p>
<p>Shioriko nods, feeling suddenly self-conscious. It really had been a last-minute purchase—a lightning-fast consensus made between her, the pretty redhead at the store, and her colleague with the light grey-brown hair, before she came back from the bathroom.</p>
<p>“A record,” Ayumu says, and then gasps. “Don’t tell me. You got it at the store?”</p>
<p>“It’s by Otis Redding,” Shioriko stutters, feeling the need to justify herself. “I used to dance to this song all the time with my dad. I think you’ll like it. At least, I hope you do.”</p>
<p>A lull, and Shioriko holds her breath.</p>
<p>“God, you truly are too much for me to handle,” Ayumu says.</p>
<p>Before Shioriko has time to think of a response, Ayumu rises from the couch and heads toward the turntable. Wordlessly asking Shioriko for permission, she changes the settings to 7-inch 45, and lowers the needle onto the groves. These Arms Of Mine begins playing.</p>
<p>Walking back over to the couch, Ayumu sits next to Shioriko, listening to the music. Not knowing what else to do, Shioriko does the same, holding her left hand under her right and taking deep breaths again. The lyrics were, for a lack of a better word, incriminating. Shioriko hadn’t much thought about it when she bought the record, but she knew the words by heart and knew exactly what they meant in English. And now, hearing the smooth, pained crooning ride those gentle piano triplets, bringing stark clarity to her feelings, Shioriko knew that a lot—too much—was riding on how effectively they were being communicated to Ayumu.</p>
<p>When the record ends, Shioriko waits a few, silent moments before getting up to the turntable, and setting the needle back in place. Taking one last, long breath, she turns around and looks at Ayumu—whose eyes glisten under the little light that filters through the window, from the clear night outside.</p>
<p>“Well, that was rather direct, wasn’t it?” Ayumu says, smiling. “Come here, Shioriko.”</p>
<p>Shioriko awkwardly pads her way towards Ayumu, who takes her hand as soon as she’s close enough. Then, without warning, she pulls Shioriko down toward her, resulting in Shioriko landing directly on top of Ayumu, spread out down the length of the couch. Shioriko could not imagine the way fear and urgency churned their way down her chest and her stomach, rendering her breathless before she had any time to process the situation. She stood before a wide, endless precipice—one she knew she would never return from, and yet could not wait to jump into.</p>
<p>“Shioriko?” Ayumu asked, bringing her left index finger softly onto Shioriko’s lower lip. “I’m going to do something, and I want you to stop me if you don’t like it. Is that okay?”</p>
<p>Shioriko might have known that her first kiss wouldn’t go like they did in Kaoruko’s dramas, but nothing could have prepared her for the sensation of absolute catharsis—of unmitigated bliss—that came with kissing Ayumu Uehara. She might have rued the fact that she was not completely sober, for had her remaining drunkenness not propelled her to seek them again and again, she might have otherwise faltered. Was it the alcohol, then, that possessed her to lower the direction of her mouth, planting those kisses not on Ayumu’s lips, but onto her exposed neck? Perhaps , she thought, later. At any rate, she might also blame it for not hesitating before softly taking Ayumu’s skin between her teeth when Ayumu, between bated breaths, had asked her to.</p>
<p>There is a fair amount of hesitation. Shioriko, after all, could not be ignorant of the implication of Ayumu placing Shioriko’s hand on the belt of her skirt, gently pushing both down. Shioriko could not be blamed for being scared—possibly more than she had ever been in her life. It was not then, but rather at the point when all that remained of Ayumu’s clothes were her sweater and underwear, and when Ayumu reached to unclasp Shioriko’s bra from under her sweater, that Shioriko finally hit a block on the road and tensed up. Ayumu instantly stops.</p>
<p>“Should we stop?” Ayumu smiles, looking at Shioriko with an expression that promised infinite understanding under its aegis. Shioriko could have cried. “We can stop.”</p>
<p>“No,” Shioriko says. “It’s okay. I’m okay.”</p>
<p>“Hey, Shioriko,” Ayumu says, looking up and past Shioriko. “How about we move to your bedroom?”</p>
<p>Shioriko feels herself losing almost all semblance of self-control as she is pulled by Ayumu’s hand, who pads her way leisurely from the couch to Shioriko’s room—her bare legs a shadowed suggestion, and only barely, under her oversized sweater. Once inside her room, Shioriko closes the door and is met, under that oppressive silence, by Ayumu. Running her fingers through Shioriko’s hair, Ayumu breathes with such palpable urgency that Shioriko wants nothing more than to relieve her of whatever spell the night has cast on both of them.</p>
<p>Shioriko tries something, nudging her nose under Ayumu’s chin and planting a single kiss on her exposed neck. She is surprised by the results: Ayumu offers virtually no resistance and, much on the contrary, appears to collapse onto the simplicity of the gesture, as if asking Shioriko for more. Shioriko makes an important discovery then: That, for what could have been the whole night, Ayumu had been waiting for her to take the initiative; that it may have been much beyond Ayumu’s gentle disposition to force herself onto the headstrong Shioriko and, now that the latter had made her first advance onto the former’s expectant skin, it may as well have been a message of complete and utter capitulation.</p>
<p>It’s a short trip to Shioriko’s bed, and she doesn’t even bother with Ayumu’s sweater. That magnetic topography of Ayumu’s body gives Shioriko silent instructions: the heat of Ayumu’s pliancy providing the fuel—the little push of Ayumu’s hand on the back of Shioriko’s head the spark that lights it all. Ayumu throws her head back and lets herself be taken; Shioriko, nervous as she might have been, never lets her movements escape the rhythm of Ayumu’s bated breaths.</p>
<p>They shift their bodies before long.</p>
<p>Shioriko had never thought it possible to feel this way; celestial bodies moving towards alignment, casting wave after wave of light and sound over them and washing their combined chemistries into astral pastels. Ayumu, impressing onto Shioriko’s bare back the candour of her desire, pushes her fingers through the thick of the warming air until Shioriko, unable to withstand that insurmountable mountain, collapses into an infinitesimal ball of fire and calls out Ayumu’s name over and over again.</p>
<p>Ayumu was loving, and gentle, and patient, beyond Shioriko’s wildest expectations; Shioriko cries a little, surprising even herself, as they lay in bed afterwards. Without anything by way of hesitation, Ayumu holds Shioriko and strokes loving patterns on the younger girl’s back, being gentle on the marks inflicted only minutes before. Not even Shioriko knows what goes through her head for a few hazy moments, thinking of everything and nothing at all in the span of a single second. She feels lost in the abstract melancholy of loving but not quite knowing how.</p>
<p>But love she does, as she feels Ayumu’s fingers coil around hers, and she reckons she’ll have plenty of time later to work these things out.</p>
<p>Shioriko awakens from a deep sleep sometime in the early morning, alone. She thinks it a cruel trick of nature to have her, even for a second, think that what transpired the night before—the consummated dilution of a single drop of rose-coloured ink landing on Shioriko’s once-crystalline heart, giving it the most radiant of hues—had been just a dream. Ayumu breaks that spell when, walking out of the bathroom wearing only Ayumu’s black turtleneck, hugging the immaculate sinuosity of her figure, gives her a smile.</p>
<p>Whatever residual guilt dissipates from Shioriko almost instantly and, whenever it was to come back, she at least knew she’d have somebody to help her keep it at bay.</p>
<p>“So,” Kaoruko says, and Shioriko anticipates it. “How did it go? Did you get laid?”</p>
<p>“Hm…yup,” Shioriko decides, pretty much on the spot. “Four times, actually.”</p>
<p>“Good, good,” Kaoruko laughs, picking up on Shioriko’s nonchalance. “Wouldn’t expect anything less from my baby sister.”</p>
<p>On the other side of the receiver, Shioriko can hear the sound of running water, and the clinking of plates. She’s a little disappointed that Kaoruko doesn’t pry.</p>
<p>“I’m assuming mother and father aren’t around,” Shioriko says.</p>
<p>“Nah, they’re out visiting the neighbours. I’m gonna go meet them later,” Kaoruko says. “So, did the now-changed Shioriko Mifune learn something new about herself from her date with whatshername?”</p>
<p>“Ayumu,” Shioriko laughs, with the customary eye-roll. She thinks about it for a few moments, and finally makes up her mind. “Well, I guess I did learned that I am what they call a ‘top.’”</p>
<p>Shioriko hears what sounds like a splash of water on the other end of the receiver, and not long after, the sound of running water stops.</p>
<p>“Pardon?” says Kaoruko.</p>
<p>“Hm?” parries Shioriko.</p>
<p>“…Shioriko?” asks Kaoruko, slowly and evenly. “My Shioriko? Little Shiopi? The same Shiopi who used to cover my eyes whenever there was a kiss scene in one of my dramas until she was like, in high school? Student-council-vice-president Shioriko?”</p>
<p>“Could you…stop calling me Shiopi?” Shioriko sighs, bringing a hand to her forehead, and trying her hardest to hold back a smile.</p>
<p>“On second thought, I think I’ll be stopping by Tokyo after leaving Kyoto,” Kaoruko says, with some effort. “I don’t know if I want to interrogate this Ayumu girl or shake her hand.”</p>
<p>“Absolutely not. You do not touch her,” Shioriko says, adopting her best student council timbre. And then, so soft that the phone barely picks it up: “But…if you want to meet her, I’m sure she’d like that as well.”</p>
<p>“It’s set, then!” Kaoruko shrieks into the phone. “I’ll send you the details of my train later. I’m so happy for you!”</p>
<p>“Thanks,” Shioriko just says, and then:</p>
<p>“Wait…wait a second,” Kaoruko stops. “Did…did you say four times?”</p>
<p>Which were the last words Shioriko heard before she summarily ended the call, walking over to the kitchen sink and splashing cold water on her face.</p>
<ol>
<li><p>Notes I:</p>
<blockquote>
<p>This came…much later than expected lmao. Super sorry for the wait! I had the hardest time writing THE scene lmao. I essentially had the entire chapter written except for bits and pieces of that part. I think I’m relatively satisfied with it now, so I hope those who get around to reading it enjoy it. As always, any and all feedback is more than welcome!</p>
<p>By the way, the title of the fic is a reference to the jazz record they listen to in Shimokitazawa. It’s a Miles Davis recording from his Volume 3 album, if anybody is interested in checking that out!</p>
<p>ShioPomu is an entire mood tbh. Nijigasaki S2 announcement when??</p>
</blockquote>
</li>
<li><p>Notes II:</p>
<blockquote>
<p>I wanted to get the whole two chapters up by today, since it was Christmas, but the holidays were a bit busy, so I hope this first chapter is enough to keep those of you who think ShioPomu is criminally under-appreciated hooked for the rest! I will do my best to get the second one up by the new year. :)</p>
<p>I hope anybody who celebrated had a safe and wonderful holiday season, and thank you for reading! &lt;3 Any feedback is much welcome.</p>
</blockquote>
</li>
</ol>
]]></content>
      <tags>
        <tag>測試Testing!</tag>
      </tags>
  </entry>
  <entry>
    <title>歌詞測試</title>
    <url>/next-nest/2021/11/06/lyrics-block/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>如題，是歌詞<code>染色</code>模塊測試。<br>之前還是萬年巨坑，突然就很順利地填上了。</p>
<span id="more"></span>
<h2 id="Rendering-Results"><a href="#Rendering-Results" class="headerlink" title="Rendering Results"></a>Rendering Results</h2><ul>
<li>HarryP (針原 翼) (feat. RIN, MIKU) - 一閃光</li>
</ul>
<figure class="highlight vocatag vocalyrics">
            <table>
                <tbody>
                    <tr>
                        <td class="gutter">
                            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre>
                        </td>
                        <td class="code">
                            <pre><span class="line"><span class="base16colored-orange">とくとく流れているのは あなたに縋りついた血だ<br>鮮血汩汩流出 瞬間染紅了你的衣襟<br><br>涙の代わりに込み上げて <span class="base16colored-cyan">燃えさかる幻影の炎だろう</span><span class="base16colored-orange"><br>取而代之的是泣血椎心 </span><span class="base16colored-cyan">是燃燒後火焰的殘影</span></span></span></pre>
                        </td>
                    </tr>
                </tbody>
            </table>
        </figure>
<ul>
<li>人形兔 (feat. 五色戰隊(洛天依、樂正綾、樂正龍牙、墨清弦、徵羽摩柯)) - Hear me!</li>
</ul>
<pre class="vocalyricsblock"><code><span class="base16colored-blue">洛天依: 放學後空無一人的操場<br>拉勾以後就不許臨陣脫逃　好不好<br><span class="base16colored-red">樂正綾: 肩上的吉他和小小夢想<br>要為它們長出堅強的翅膀　我知道<br><br><span class="base16colored-blue">徵羽摩柯: Can you hear me now?　麥克風在手中握緊不放<br><span class="base16colored-yellow">墨清弦: 　Can you hear me now?　不用在意任何疑惑目光<br><span class="base16colored-cyan">樂正龍牙: Can you hear me now?　有你在一定能實現願望<br></span></span></span></span></span>讓淚水與歡笑　逆光也閃耀</code></pre>
]]></content>
      <tags>
        <tag>測試Testing!</tag>
      </tags>
  </entry>
  <entry>
    <title>「笔记】几种简单的排序</title>
    <url>/next-nest/2021/08/31/note-Algo-and-Datastruct-202108/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>如题。</p>
<span id="more"></span>
<figure class="highlight cpp"><figcaption><span>headers</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><figcaption><span>q2085</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> m, cur_val;</span><br><span class="line"><span class="keyword">int</span> min_val = <span class="number">2147483647</span>;</span><br><span class="line"><span class="keyword">int</span> max_inc = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> idx = <span class="number">0</span>; idx &lt; m; ++idx) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;cur_val);</span><br><span class="line">        max_inc = <span class="built_in">max</span>(cur_val - min_val, max_inc);</span><br><span class="line">        min_val = <span class="built_in">min</span>(cur_val, min_val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, max_inc);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><figcaption><span>q1075</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> m, val[<span class="number">101</span>], cnt_swap = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubblesort</span><span class="params">(<span class="keyword">int</span> *arr, <span class="keyword">int</span> arlength)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (arlength) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> idx = <span class="number">0</span>; idx &lt; arlength - <span class="number">1</span>; ++idx) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[idx] &gt; arr[idx + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="built_in">swap</span>(arr[idx], arr[idx + <span class="number">1</span>]);</span><br><span class="line">                ++cnt_swap;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">bubblesort</span>(arr, arlength - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> idx = <span class="number">0</span>; idx &lt; m; ++idx)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;val[idx]);</span><br><span class="line">    <span class="built_in">bubblesort</span>(val, m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> idx = <span class="number">0</span>; idx &lt; m; ++idx)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, val[idx]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%d\n&quot;</span>, cnt_swap);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><figcaption><span>q1076</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> m, val[<span class="number">101</span>], cnt_swap = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectsort</span><span class="params">(<span class="keyword">int</span> *arr, <span class="keyword">int</span> starter)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((m - <span class="number">1</span>) - starter) &#123;</span><br><span class="line">        <span class="keyword">int</span> idx_min = starter;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> idx = starter; idx &lt; m; ++idx)</span><br><span class="line">            idx_min = (arr[idx] &lt; arr[idx_min]) ? idx : idx_min;</span><br><span class="line">        <span class="keyword">if</span> (starter &lt; idx_min) &#123;</span><br><span class="line">            <span class="built_in">swap</span>(arr[starter], arr[idx_min]);</span><br><span class="line">            ++cnt_swap;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">selectsort</span>(arr, starter + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> idx = <span class="number">0</span>; idx &lt; m; ++idx)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;val[idx]);</span><br><span class="line">    <span class="built_in">selectsort</span>(val, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> idx = <span class="number">0</span>; idx &lt; m; ++idx)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, val[idx]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%d\n&quot;</span>, cnt_swap);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><figcaption><span>q1077</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> m, val[<span class="number">101</span>], cnt_swap = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> idx = <span class="number">0</span>; idx &lt; m; ++idx)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;val[idx]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; m; ++k) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> idx = <span class="number">0</span>; idx &lt; m; ++idx)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, val[idx]);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = k; l &gt; <span class="number">0</span>; --l)</span><br><span class="line">            <span class="keyword">if</span> (val[l] &lt; val[l - <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="built_in">swap</span>(val[l], val[l - <span class="number">1</span>]);</span><br><span class="line">                ++cnt_swap;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> idx = <span class="number">0</span>; idx &lt; m; ++idx)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, val[idx]);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><figcaption><span>q1078</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> m, val, buckets[<span class="number">10001</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> idx = <span class="number">0</span>; idx &lt; m; ++idx) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;val);</span><br><span class="line">        ++buckets[val];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;=<span class="number">10000</span>; ++k)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; buckets[k]; ++l)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, k);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>「笔记】一份代码带你了解C++面向对象中的神奇操作</title>
    <url>/next-nest/2019/04/25/note-Cpp-OOP-Tricks/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>一份代码带你了解<code>C++</code>面向对象中的神奇操作。</p>
<span id="more"></span>
<h2 id="Constructions"><a href="#Constructions" class="headerlink" title="Constructions"></a>Constructions</h2><p>我们先定义一个<code>OIer</code>类来看看如何初始化一个类对象, 一个初学面向对象的朋友一般会这么做:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OIer</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">bool</span> gender;    <span class="comment">// 1 for Female and 0 for Male</span></span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">char</span> region[<span class="number">16</span>];</span><br><span class="line">    <span class="keyword">char</span> lang[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setOIer</span><span class="params">(<span class="keyword">bool</span> _gender, <span class="keyword">int</span> _age, <span class="keyword">char</span> _region[], <span class="keyword">char</span> _lang[])</span> </span>&#123;</span><br><span class="line">        gender = _gender;</span><br><span class="line">        age = _age;</span><br><span class="line">        <span class="built_in">strcpy</span>(region, _region);</span><br><span class="line">        <span class="built_in">strcpy</span>(lang, _lang);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>事实上<code>C++</code>设计了一种<strong>专门用于初始化和销毁类对象的机制——构造函数和析构函数</strong>, 每一个新建的类对象用<code>类名</code>作为构造函数, 用<code>~类名</code>作为析构函数, 而且构造函数和析构函数的参数也可以赋初值, 于是上面的代码就可以改写如下:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OIer</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">/* ...... */</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">OIer</span>(<span class="keyword">bool</span> _gender, <span class="keyword">int</span> _age, <span class="keyword">char</span> _region[], <span class="keyword">char</span> _lang[]) &#123;</span><br><span class="line">        gender = _gender;</span><br><span class="line">        age = _age;</span><br><span class="line">        <span class="built_in">strcpy</span>(region, _region);</span><br><span class="line">        <span class="built_in">strcpy</span>(lang, _lang);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>而且可以使用<code>构造函数() : 类成员(初始化值), 类成员(初始化值)</code>的形式来初始化各项成员:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OIer</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">/* ...... */</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">OIer</span>(<span class="keyword">bool</span> _gender, <span class="keyword">int</span> _age, <span class="keyword">char</span> _region[], <span class="keyword">char</span> _lang[]) : <span class="built_in">gender</span>(_gender), <span class="built_in">age</span>(_age), <span class="built_in">region</span>(_region), <span class="built_in">lang</span>(_lang) &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="Constant-Members"><a href="#Constant-Members" class="headerlink" title="Constant Members"></a>Constant Members</h2><p>成员常量和我们熟知常量大同小异, 都是用<code>const</code>进行修饰的, <strong>但是必须在构造函数中赋初值</strong>:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OIer</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">/* ...... */</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> beginYear;    <span class="comment">// 这个OIer入坑入队的时间</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">OIer</span>(<span class="keyword">bool</span> _gender, <span class="keyword">int</span> _age, <span class="keyword">char</span> _region[], <span class="keyword">char</span> _lang[], <span class="keyword">int</span> _begin = <span class="number">2015</span>) : <span class="built_in">gender</span>(_gender), <span class="built_in">age</span>(_age), <span class="built_in">region</span>(_region), <span class="built_in">lang</span>(_lang), <span class="built_in">beginYear</span>(_begin) &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>常成员函数也用<code>const</code>进行修饰, <strong>它不能改变成员的值, 而且很鬼畜的是它的形式为</strong>:</p>
<pre><code>函数类型 函数名称() const &#123;&#125;
</code></pre><p>现在添加一个常成员函数:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OIer</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">/* ...... */</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">OIer</span>(<span class="comment">/* ...... */</span>) &#123; <span class="comment">/* ...... */</span> &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">timeExperience</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2018</span> - beginYear;    <span class="comment">// 例如今年是2018年</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="Virtual-Destructions"><a href="#Virtual-Destructions" class="headerlink" title="Virtual Destructions"></a>Virtual Destructions</h2><p>虚拟函数的意义在于<strong>由该类派生出来的子类不会覆盖虚拟函数</strong>, 这一点主要用在虚·析构函数上:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OIer</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">/* ...... */</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/* ...... */</span>;</span><br><span class="line">    <span class="keyword">virtual</span> ~<span class="built_in">OIer</span>() &#123; <span class="built_in">printf</span>(<span class="string">&quot;This OIer Has Gone...\n&quot;</span>); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ACMer</span> :</span> <span class="keyword">public</span> OIer &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    ~<span class="built_in">ACMer</span>() &#123; <span class="built_in">printf</span>(<span class="string">&quot;This ACMer Has Gone...\n&quot;</span>); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>比如我们新建一个<code>ACMer</code>的实例:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">ACMer <span class="title">ptx</span><span class="params">(<span class="literal">true</span>, <span class="number">16</span>, <span class="string">&quot;ShanDong&quot;</span>, <span class="string">&quot;cpp&quot;</span>, <span class="number">2017</span>)</span></span>;</span><br></pre></td></tr></table></figure>
<p>这样在程序结束时会有如下输出:</p>
<pre><code>This OIer Has Gone...
This ACMer Has Gone...
</code></pre><p>否则只会调用它本身的析构函数, 也就是只会输出第二行的文字:</p>
<pre><code>This ACMer Has Gone...
</code></pre><p>如果使用纯·虚·析构函数, 则该基类便会成为一个抽象类, 这样一来<strong>即使子类没有它自己的析构函数编译器也可以给它提供一个默认析构函数</strong>:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OIer</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">/* ...... */</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/* ...... */</span>;</span><br><span class="line">    <span class="keyword">virtual</span> ~<span class="built_in">OIer</span>() = <span class="number">0</span>;    <span class="comment">// 纯·虚·析构函数在类内声明并&quot;赋值为0&quot;, 且在类外定义</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">virtual</span> OIer::~<span class="built_in">OIer</span>() &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;This OIer Has Gone...\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>「笔记】CONDA</title>
    <url>/next-nest/2019/03/07/note-CONDA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>如题。</p>
<span id="more"></span>
<h2 id="Searching"><a href="#Searching" class="headerlink" title="Searching"></a>Searching</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt; anaconda search -t conda [PKG_NAME]</span><br><span class="line">&gt; conda search [PKG_NAME]</span><br></pre></td></tr></table></figure>
<p><code>PKG_NAME</code> 是你要找的扩展模块的名称, 如<code>keras</code>或者<code>tensorflow-gpu</code>等,</p>
<p>两者皆可, 前者的范围比后者要大一些, 信息更全面, 时间也更长。</p>
<h2 id="Adding-Channels"><a href="#Adding-Channels" class="headerlink" title="Adding Channels"></a>Adding Channels</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt; conda config --add channels [CHANNEL_URL]</span><br></pre></td></tr></table></figure>
<p><code>CHANNEL_URL</code> 是你要加入的<code>CONDA</code>源的url, 删除所有的外部<code>CONDA</code>源可以使用:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt; conda config --remove-key channels</span><br></pre></td></tr></table></figure>
<p>附上常见的<code>CONDA</code>源(<code>源名称</code> 加粗的为 <strong>官方源</strong> , 斜体的为 <em>第三方源</em>):</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>源名称</th>
<th>清华镜像</th>
<th>科大镜像</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong><code>FREE</code></strong></td>
<td><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</a></td>
<td><a href="https://mirrors.ustc.edu.cn/anaconda/pkgs/free/">https://mirrors.ustc.edu.cn/anaconda/pkgs/free/</a></td>
</tr>
<tr>
<td><strong><code>MAIN</code></strong></td>
<td><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</a></td>
<td><a href="https://mirrors.ustc.edu.cn/anaconda/pkgs/main/">https://mirrors.ustc.edu.cn/anaconda/pkgs/main/</a></td>
</tr>
<tr>
<td><em><code>conda-forge</code></em></td>
<td><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</a></td>
<td><a href="https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/">https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/</a></td>
</tr>
<tr>
<td><em><code>msys2</code></em></td>
<td><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</a></td>
<td><a href="https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/">https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/</a></td>
</tr>
<tr>
<td><em><code>bioconda</code></em></td>
<td><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/</a></td>
<td><a href="https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/">https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/</a></td>
</tr>
<tr>
<td><em><code>menpo</code></em></td>
<td><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/menpo/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/menpo/</a></td>
<td><a href="https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/">https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/</a></td>
</tr>
</tbody>
</table>
</div>
<h2 id="Listing"><a href="#Listing" class="headerlink" title="Listing"></a>Listing</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt; conda list</span><br></pre></td></tr></table></figure>
<h2 id="Showing-Channels"><a href="#Showing-Channels" class="headerlink" title="Showing Channels"></a>Showing Channels</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt; conda config --<span class="built_in">set</span> show_channel_urls yes</span><br></pre></td></tr></table></figure>
<h2 id="Direct-Installations"><a href="#Direct-Installations" class="headerlink" title="Direct Installations"></a>Direct Installations</h2><p><code>.whl</code>是<code>Python</code>扩展模块的安装文件, 你们下载的一切扩展模块都是由一个又一个<code>.whl</code>解压编译而来的, 所以有的时候我们直接安装<code>.whl</code>文件比让<code>CONDA</code>在网上现找来得快得多。</p>
<p>在网上手动下载下来<code>.whl</code>之后直接用<code>conda install</code>就行了, 这里附上一个可以免费下载<code>.whl</code>的网址:</p>
<p><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p>
<p>没错, 是<code>UCI</code>组织公开的一个资源库。</p>
]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>「笔记】GIT</title>
    <url>/next-nest/2019/03/14/note-GIT/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>如题。</p>
<span id="more"></span>
<h2 id="Preparations"><a href="#Preparations" class="headerlink" title="Preparations"></a>Preparations</h2><p>这些都是为了便于确认你的身份</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt; git config --global user.email <span class="string">&quot;you@example.com&quot;</span>          <span class="comment">#你的邮箱地址</span></span><br><span class="line">&gt; git config --global user.name <span class="string">&quot;Your Name&quot;</span>                 <span class="comment">#你的名字</span></span><br></pre></td></tr></table></figure>
<h2 id="Repo-Cloning"><a href="#Repo-Cloning" class="headerlink" title="Repo Cloning"></a>Repo Cloning</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt; git <span class="built_in">clone</span> <span class="string">&quot;https://github.com/username/repository.git&quot;</span>    <span class="comment">#你的仓库地址</span></span><br></pre></td></tr></table></figure>
<h2 id="Commitments"><a href="#Commitments" class="headerlink" title="Commitments"></a>Commitments</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt; git add --all                                             <span class="comment"># --all 添加所有改动</span></span><br><span class="line">&gt; git commit -m <span class="string">&quot;Commit Message&quot;</span>                            <span class="comment">#确认提交改动时的备注和提交信息</span></span><br><span class="line">&gt; git push -u origin master                                 <span class="comment"># origin 原始仓库, master 默认分支</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>「笔记】动态规划</title>
    <url>/next-nest/2021/05/09/note-DynamicProgramming/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>稍微写一点 <code>dp (Dynamic Programming, 动态规划)</code> 相关的…</p>
<span id="more"></span>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>说实话，从接触dp的高一上学期，一直到现在写关于dp的大一下学期，这四年从来都没有 真⭐正⭐理⭐解 dp，所以下面只是说一个能做出来dp基础题目的人是如何把那些题目水过去的。</p>
<p>先说说dp的几种基础问题类型：</p>
<ol>
<li><p>最长增减子序贯</p>
<ul>
<li>LIS: Longest Increasing Subsequence, 最长上升子序贯</li>
<li>LDS: Longest Decreasing Subsequence, 最长下降子序贯</li>
</ul>
</li>
<li><p>数字三角形 <code>(USACO1.5)</code> <code>(IOI1994)</code> <a href="https://www.luogu.com.cn/problem/P1216"><code>(P1216)</code></a></p>
</li>
<li><p>LCS: Longest Common Subsequence, 最长公共子序贯 <a href="https://www.luogu.com.cn/problem/P1439"><code>(P1439)</code></a></p>
</li>
<li><p>MSA: Maximum SubArray, 最大子段和 <a href="https://leetcode-cn.com/problems/maximum-subarray/"><code>(LC0053)</code></a></p>
</li>
<li><p>打家劫舍系列</p>
<ul>
<li>打家劫舍 <a href="https://leetcode-cn.com/problems/house-robber/"><code>(LC0198)</code></a></li>
<li>按摩师 <a href="https://leetcode-cn.com/problems/the-masseuse-lcci/"><code>(LC面试17-16)</code></a></li>
<li>打家劫舍 II <a href="https://leetcode-cn.com/problems/house-robber-ii/"><code>(LC0213)</code></a></li>
<li>打家劫舍 III <a href="https://leetcode-cn.com/problems/house-robber-iii/"><code>(LC0337)</code></a></li>
</ul>
</li>
</ol>
<h2 id="LDS"><a href="#LDS" class="headerlink" title="LDS"></a>LDS</h2><p>观察下面的数字金字塔。</p>
<p>写一个程序来查找从最高点到底部任意处结束的路径，使路径经过数字的和最大。每一步可以走到左下方的点也可以到达右下方的点。</p>
<pre><code>               [7]
              /
           [3]      8 
          /
       [8]      1       0 
          \
    2      [7]      4       4 
          /
4      [5]      2       6       5 
</code></pre><p>在上面的样例中，从 $7 \rightarrow 3 \rightarrow 8 \rightarrow 7 \rightarrow 5$ 的路径产生了最大。</p>
<h3 id="Other-Info"><a href="#Other-Info" class="headerlink" title="Other Info"></a>Other Info</h3><h4 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h4><p>第一个行一个正整数 $r$ ，表示行的数目。</p>
<p>后面每行为这个数字金字塔特定行包含的整数。</p>
<h4 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h4><p>单独的一行，包含那个可能得到的最大的和。</p>
<h4 id="IO-Example"><a href="#IO-Example" class="headerlink" title="IO Example"></a>IO Example</h4><pre><code>In [1]:
5
7
3 8
8 1 0
2 7 4 4
4 5 2 6 5
Out[1]:
30
</code></pre><h4 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h4><p>「数据范围：对于 $100\%$ 的数据， $1 \le r \le 1000$ ，所有输入在 $[0, 100]$ 范围内。</p>
<p>题目翻译来自 NOCOW / USACO Training Section 1.5 / IOI1994 Day1T1</p>
<h3 id="Script"><a href="#Script" class="headerlink" title="Script"></a>Script</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env Python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dp_recursion</span>(<span class="params">k, l</span>):</span></span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">max</span>(dp_recursion(k + <span class="number">1</span>, l), dp_recursion(k + <span class="number">1</span>, l + <span class="number">1</span>)) + arr[k, l]) <span class="keyword">if</span> k &lt; r <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    r = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    arr = np.zeros((r, r))</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(r):</span><br><span class="line">        arr[ k , : (k + <span class="number">1</span>) ] += [ <span class="built_in">int</span>(each) <span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">input</span>().split() ]</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">int</span>(dp_recursion(<span class="number">0</span>, <span class="number">0</span>)))</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>「笔记】Hexo图片问题</title>
    <url>/next-nest/2019/04/11/note-HexoAssetImage/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>如题。</p>
<span id="more"></span>
<h2 id="Install-Plugin"><a href="#Install-Plugin" class="headerlink" title="Install Plugin"></a>Install Plugin</h2><p>如果要在Hexo博客上插入图片, 首先要安装一个叫做<code>hexo-asset-image</code>的插件, 在博客生成文件的根目录下执行:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt; npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>
<h2 id="Bug-Fix"><a href="#Bug-Fix" class="headerlink" title="Bug Fix"></a>Bug Fix</h2><p>但是这个插件后来更新来更新去的出现了一个BUG, 这时我们需要进入<code>node_modules</code>把插件中的<code>index.js</code>更改为如下代码:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPosition</span>(<span class="params">str, m, i</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.config;</span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">    <span class="keyword">var</span> link = data.permalink;</span><br><span class="line">	<span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">	<span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line">	<span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class="line">        <span class="attr">ignoreWhitespace</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">xmlMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">lowerCaseTags</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line">        <span class="keyword">var</span> src = $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>).replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.test(src))&#123;</span><br><span class="line">		  <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">		  <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">		  <span class="keyword">var</span> linkArray = link.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">		    <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">		  &#125;);</span><br><span class="line">		  <span class="keyword">var</span> srcArray = src.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">		    <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">		  &#125;);</span><br><span class="line">		  <span class="keyword">if</span>(linkArray[linkArray.length - <span class="number">1</span>] == srcArray[<span class="number">0</span>])</span><br><span class="line">		    srcArray.shift();</span><br><span class="line">          src = srcArray.join(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">          $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;/&#x27;</span> + link + src);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>然后就可以正常使用了</p>
]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>「笔记】MathJax骚操作整理</title>
    <url>/next-nest/2021/05/09/note-MathJax/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>花体字符，以 <code>Awesome Hatsune MIKU desu !!!</code> 为例。</p>
<span id="more"></span>
<h2 id="Cal"><a href="#Cal" class="headerlink" title="Cal"></a>Cal</h2><p>常规花体。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ \mathcal&#123;Awesome Hatsune MIKU desu !!!&#125; $$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">\mathcal{Awesome Hatsune MIKU desu !!!}</script><h2 id="Scr"><a href="#Scr" class="headerlink" title="Scr"></a>Scr</h2><p>（伪）手写体，常见于线性变换。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ \mathscr&#123;Awesome Hatsune MIKU desu !!!&#125; $$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">\mathscr{Awesome Hatsune MIKU desu !!!}</script><h2 id="Bb"><a href="#Bb" class="headerlink" title="Bb"></a>Bb</h2><p>黑板粗体，常见于数域的表达。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ \mathbb&#123;Awesome Hatsune MIKU desu !!!&#125; $$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">\mathbb{Awesome Hatsune MIKU desu !!!}</script><h2 id="Bf"><a href="#Bf" class="headerlink" title="Bf"></a>Bf</h2><p>常规粗体。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ \mathbf&#123;Awesome Hatsune MIKU desu !!!&#125; $$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">\mathbf{Awesome Hatsune MIKU desu !!!}</script><h2 id="Sf"><a href="#Sf" class="headerlink" title="Sf"></a>Sf</h2><p>等线体。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ \mathsf&#123;Awesome Hatsune MIKU desu !!!&#125; $$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">\mathsf{Awesome Hatsune MIKU desu !!!}</script><h2 id="Frak"><a href="#Frak" class="headerlink" title="Frak"></a>Frak</h2><p>旧德式体，正常人看不清楚，慎用！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ \mathfrak&#123;Awesome Hatsune MIKU desu !!!&#125; $$</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">\mathfrak{Awesome Hatsune MIKU desu !!!}</script><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <code>liyuanbhu</code>的CSDN文章 <a href="https://blog.csdn.net/liyuanbhu/article/details/51474533/">MathJax 支持的 Latex 符号总结（各种数学字体）</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <code>heartlessly</code>的博客文章 <a href="https://heartlessly.github.io/others/latex-mathjax-gong-shi-zi-ti-mei-hua/">LaTeX/MathJax 字体美化</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>「笔记】常见IP代理与镜像汇总</title>
    <url>/next-nest/2019/05/09/note-Mirrors/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>都不多讲, 简单做个记录。</p>
<span id="more"></span>
<p>国内<code>高匿/免费</code>HTTP代理IP:</p>
<ul>
<li><code>快代理</code>: <a href="https://www.kuaidaili.com/free/">https://www.kuaidaili.com/free/</a></li>
<li><code>西刺代理</code>: <a href="https://www.xicidaili.com/nn/">https://www.xicidaili.com/nn/</a></li>
</ul>
<p>镜像以<code>/GnuEmacs/windows/emacs-25/</code>下载地址为例。</p>
<p>国内常见的有:</p>
<ul>
<li><code>清华镜像</code>: <a href="https://mirrors.tuna.tsinghua.edu.cn/gnu/emacs/windows/emacs-25/">https://mirrors.tuna.tsinghua.edu.cn/gnu/emacs/windows/emacs-25/</a></li>
<li><code>科大镜像</code>: <a href="https://mirrors.ustc.edu.cn/gnu/emacs/windows/emacs-25/">https://mirrors.ustc.edu.cn/gnu/emacs/windows/emacs-25/</a></li>
</ul>
<p>国外常见的有:</p>
<ul>
<li><a href="https://gnu.askapache.com/emacs/windows/emacs-25/">https://gnu.askapache.com/emacs/windows/emacs-25/</a></li>
<li><a href="http://mirror.keystealth.org/gnu/emacs/windows/emacs-25/">http://mirror.keystealth.org/gnu/emacs/windows/emacs-25/</a></li>
<li><a href="http://mirror.team-cymru.com/gnu/emacs/windows/emacs-25/">http://mirror.team-cymru.com/gnu/emacs/windows/emacs-25/</a></li>
<li><a href="https://mirrors.kernel.org/gnu/emacs/windows/emacs-25/">https://mirrors.kernel.org/gnu/emacs/windows/emacs-25/</a></li>
<li><a href="https://mirror.clarkson.edu/gnu/emacs/windows/emacs-25/">https://mirror.clarkson.edu/gnu/emacs/windows/emacs-25/</a></li>
<li><a href="https://mirror.us-midwest-1.nexcess.net/gnu/emacs/windows/emacs-25/">https://mirror.us-midwest-1.nexcess.net/gnu/emacs/windows/emacs-25/</a></li>
<li><a href="https://mirrors.syringanetworks.net/gnu/emacs/windows/emacs-25/">https://mirrors.syringanetworks.net/gnu/emacs/windows/emacs-25/</a></li>
<li><a href="https://mirrors.ocf.berkeley.edu/gnu/emacs/windows/emacs-25/">https://mirrors.ocf.berkeley.edu/gnu/emacs/windows/emacs-25/</a></li>
<li><a href="http://gnu.mirrors.hoobly.com/emacs/windows/emacs-25/">http://gnu.mirrors.hoobly.com/emacs/windows/emacs-25/</a></li>
<li><a href="http://gnu.mirrors.pair.com/emacs/windows/emacs-25/">http://gnu.mirrors.pair.com/emacs/windows/emacs-25/</a></li>
<li><a href="https://ftp.wayne.edu/gnu/emacs/windows/emacs-25/">https://ftp.wayne.edu/gnu/emacs/windows/emacs-25/</a></li>
<li><a href="http://mirror.rit.edu/gnu/emacs/windows/emacs-25/">http://mirror.rit.edu/gnu/emacs/windows/emacs-25/</a></li>
<li><a href="http://mirrors.ibiblio.org/gnu/ftp/gnu/emacs/windows/emacs-25/">http://mirrors.ibiblio.org/gnu/ftp/gnu/emacs/windows/emacs-25/</a></li>
</ul>
]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>「笔记】 Matplotlib Cheatsheets</title>
    <url>/next-nest/2021/05/14/note-Matplotlib-Cheatsheets/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>稍微写一点通过 <code>Matplotlib</code> 进行数据可视化相关的…</p>
<p>其实主要是从官方的 GitHub repo<sup><a href="#fn_1" id="reffn_1">1</a></sup> 上的搬运。</p>
<span id="more"></span>
<h2 id="Cheatsheets"><a href="#Cheatsheets" class="headerlink" title="Cheatsheets"></a>Cheatsheets</h2><p><img src="/next-nest/2021/05/14/note-Matplotlib-Cheatsheets/cheatsheets-1.png" alt="cheatsheets-1"><img src="/next-nest/2021/05/14/note-Matplotlib-Cheatsheets/cheatsheets-2.png" alt="cheatsheets-2"></p>
<h2 id="Handouts"><a href="#Handouts" class="headerlink" title="Handouts"></a>Handouts</h2><p><img src="/next-nest/2021/05/14/note-Matplotlib-Cheatsheets/handout-beginner.png" alt="ho-beginner"><img src="/next-nest/2021/05/14/note-Matplotlib-Cheatsheets/handout-intermediate.png" alt="ho-intermediate"><img src="/next-nest/2021/05/14/note-Matplotlib-Cheatsheets/handout-tips.png" alt="ho-tips"></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://github.com/matplotlib/cheatsheets/">matplotlib/cheatsheets: Official Matplotlib cheat sheets</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>「笔记】NPM</title>
    <url>/next-nest/2019/03/21/note-NPM/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>如题。</p>
<span id="more"></span>
<h2 id="Setting-Registry"><a href="#Setting-Registry" class="headerlink" title="Setting Registry"></a>Setting Registry</h2><p>如果你只想使用一次新的<code>NPM</code>源的话可以进行一次性换源, 在每次用<code>NPM</code>下东西的时候在最后加上一句<code>--registry=https://registry.npm.taobao.org</code>即可, 但如若要永久换源的话可以采用以下手段(以淘宝的<code>NPM</code>源( <a href="https://registry.npm.taobao.org">https://registry.npm.taobao.org</a> )为例):</p>
<ol>
<li><p>在终端控制台中输入:</p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt; npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<p> 其中 <a href="https://registry.npm.taobao.org">https://registry.npm.taobao.org</a> 为<code>NPM</code>源的url, 你也可以改为自己喜欢的<code>NPM</code>源, 虽然国内最大的<code>NPM</code>源也就是它了。</p>
</li>
<li><p>进入<code>nodejs\node_modules\npm\npmrc</code>文件添加下面一行代码:</p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
</li>
<li><p>体验阿里官方手工制作的淘宝<code>NPM</code>, 也就是传说之中的<code>CNPM</code></p>
<p> 在终端控制台中输入:</p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt; npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>然后以后用<code>NPM</code>下什么东西的时候就把<code>npm</code>改成<code>cnpm</code>好了</p>
<h2 id="Deleting-Registry"><a href="#Deleting-Registry" class="headerlink" title="Deleting Registry"></a>Deleting Registry</h2><p>到<code>nodejs\node_modules\npm\npmrc</code>文件文件中把<code>registry</code>一行删去即可。</p>
<h2 id="Checking-Registry"><a href="#Checking-Registry" class="headerlink" title="Checking Registry"></a>Checking Registry</h2><p>在终端控制台中输入:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt; npm config get registry</span><br></pre></td></tr></table></figure>
<p>即可。</p>
]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>「笔记】网易云音乐爬虫</title>
    <url>/next-nest/2019/03/28/note-NeteaseCrawler/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>如题。</p>
<span id="more"></span>
<h2 id="Music-Download"><a href="#Music-Download" class="headerlink" title="Music Download"></a>Music Download</h2><p>先从单曲页面的网址</p>
<pre><code>https://music.163.com/#/song?id=MUSICID
</code></pre><p>当中提取出单曲的<code>musicid</code>, 也就是<code>?id=</code>之后的那一串数字</p>
<p>然后再访问网址</p>
<pre><code>https://music.163.com/song/media/outer/url?id=MUSICID.mp3
</code></pre><p>也就是把刚才的<code>musicid</code>填到<code>?id=</code>和<code>.mp3</code>之间, 就可以下载单曲勒!!!</p>
<p>若要下载<code>id</code>为<code>1350304559</code>的单曲, 就应当访问网址</p>
<pre><code>https://music.163.com/song/media/outer/url?id=1350304559.mp3
</code></pre><p>就好了</p>
<h2 id="Lyrics-Download"><a href="#Lyrics-Download" class="headerlink" title="Lyrics Download"></a>Lyrics Download</h2><p>和I类似地, 向<code>url</code></p>
<pre><code>http://music.163.com/api/song/media?id=MUSICID
</code></pre><p>用你想要的<code>musicid</code>去发送请求</p>
<p>会返回类似如下的一个<code>JSON</code>文件(以<code>id</code>为<code>1382047560</code>的单曲为例)</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;songStatus&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;lyricVersion&quot;</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="attr">&quot;lyric&quot;</span>: <span class="string">&quot;[00:00.000]初心依然 \n[00:03.467]初音未来x洛天依-BML同台应援曲- \n[00:09.023]词曲编：米库喵 \n[00:14.570]贝司：人形兎 \n[00:18.620]混音：Digifan \n[00:22.198]当眼睛适应黑暗（依） \n[00:25.010]当回家变得困难 \n[00:27.823]当漂泊无法靠岸 \n[00:30.623]当人生已走过一半 \n[00:33.548]当生活没有答案（初） \n[00:36.384]当遗忘成为习惯 \n[00:39.399]独自闪耀着的最后灯盏 \n[00:42.999]如今还能否点燃 \n[00:46.137]插画：深雪、柴艾、P子、浅蓝、淇酱 \n[00:51.819]视频：猫の梦（TS映画） \n[00:56.497]当梦想开始灰暗（依） \n[00:59.322]当身心疲惫不堪 \n[01:02.235]当期待成为负担 \n[01:05.115]当快乐已不再简单 \n[01:07.950]当笑容逐渐消散（初） \n[01:10.763]当泪水偶尔泛滥 \n[01:13.643]曾经追逐着的那份灿烂 \n[01:17.164]是否还初心依然 \n[01:19.807] \n[01:22.823]仰望（依） \n[01:24.623]粲然的星河 \n[01:26.176]曾是我们一笔笔勾勒 \n[01:28.954]展开了翅膀 \n[01:31.486]去梦在的地方 \n[01:34.331]回想（初） \n[01:36.176]一路的坎坷 \n[01:37.515]也由我们一步步踏过 \n[01:40.406]未熄的心火 \n[01:42.903]仍在传递永不陷落 \n[01:52.275] \n[01:56.539]当梦想开始灰暗（依） \n[01:59.305]当身心疲惫不堪 \n[02:02.219]当期待成为负担 \n[02:05.043]当快乐已不再简单 \n[02:07.957]当笑容逐渐消散（初） \n[02:10.747]当泪水偶尔泛滥 \n[02:13.593]曾经追逐着的那份灿烂 \n[02:17.159]是否还初心依然 \n[02:19.784] \n[02:21.157]也会彷徨失措（依） \n[02:23.080]也会难过 \n[02:25.792]不知该做什么（初） \n[02:28.661]不知为什么在（初）坚持着（合） \n[02:31.956]当你对我说（依） \n[02:34.376]不必太看重结果（初） \n[02:37.277]于这一刻拯救我（合） \n[02:42.161] \n[02:42.847]仰望（依） \n[02:44.635]粲然的星河 \n[02:46.143]曾是我们一笔笔勾勒 \n[02:49.022]展开了翅膀 \n[02:51.543]去梦在的地方 \n[02:54.265]回想（初） \n[02:56.076]一路的坎坷 \n[02:57.573]也由我们一步步踏过 \n[03:00.431]未熄的心火 \n[03:02.917]仍在传递永不落 \n[03:05.919] \n[03:06.258]体会着普通的喜怒哀乐（合） \n[03:09.396]一半生命一半装订成册 \n[03:12.231]即使未来要做一人行者 \n[03:15.099]也不相信真会迎来那世末 \n[03:17.957]在深海中少女独自漂泊 \n[03:20.747]拼尽全力用爱言叶诉说 \n[03:23.661]不在现实中逃避着自我 \n[03:26.439]哪怕消失也为你而歌&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;code&quot;</span>: <span class="number">200</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>提取其中<code>lyric</code>一项即可</p>
]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>「学习笔记】 Selenium Python</title>
    <url>/next-nest/2019/04/04/note-SeleniumPY/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>如题。</p>
<span id="more"></span>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>用我们的<code>CONDA</code>, 或者<code>PIP</code>也行, 在终端控制台输入:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt; conda install selenium</span><br></pre></td></tr></table></figure>
<p>即可, 没什么特别的。</p>
<h2 id="First-Try"><a href="#First-Try" class="headerlink" title="First Try"></a>First Try</h2><p><strong>有巨坑警告</strong></p>
<p>按照官网的说法, 你下完<code>Selenium</code>就可以直接开始这样控制浏览器了:</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>browser = webdriver.Firefox()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>browser.get(<span class="string">&quot;https://www.bilibili.com/&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><strong>知道吗, 这么一搞你就离报错不远了!!!</strong></p>
<p>然后解释器就会提示你要把<code>GeckoDriver</code>什么的给放到环境变量(一般而且这里也就是<code>PATH</code>)里面,</p>
<p>而有些同学可能连<code>GeckoDriver</code>是什么都不知道,</p>
<h2 id="Webdriver"><a href="#Webdriver" class="headerlink" title="Webdriver"></a>Webdriver</h2><p>很简单, 如果你要<del>假冒</del><strong>模拟</strong>一个浏览器去网上浪的话, 必须有一个驱动程序, 我们称之为<code>Webdriver</code>, 而<code>Firefox</code>的叫做<code>GeckoDriver</code>, <code>Chrome</code>的叫做<code>ChromeDriver</code>, <code>Opera</code>的叫做等等等等……</p>
<p>所以<strong>你需要先下载一个<code>Webdriver</code></strong>, 而模拟这个浏览器不仅仅需要<code>Webdriver</code>, 还需要这个浏览器本身, 所以这个东西还是得看你计算机上有哪个浏览器(我们一如既往地推荐使用<code>Google</code>的<code>Chrome</code>), 你再去找, 下完之后, 需要解压, 然后把它移动到<code>Anaconda3\Scripts</code>文件夹下,</p>
<p>搞完上面这一套神乎其技的操作, 你就可以(正式)开始用<code>Selenium</code><del>搞事情</del><strong>做测试</strong>了, 撒花!!!</p>
<h2 id="Webdrivers"><a href="#Webdrivers" class="headerlink" title="Webdrivers"></a>Webdrivers</h2><div class="table-container">
<table>
<thead>
<tr>
<th>Browser</th>
<th>Webdriver Downloading URL</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Chrome</code></td>
<td><del><a href="https://sites.google.com/a/chromium.org/chromedriver/downloads/">https://sites.google.com/a/chromium.org/chromedriver/downloads/</a></del></td>
</tr>
<tr>
<td><code>Opera</code></td>
<td><a href="https://github.com/operasoftware/operachromiumdriver/releases/">https://github.com/operasoftware/operachromiumdriver/releases/</a></td>
</tr>
<tr>
<td><code>Firefox</code></td>
<td><a href="https://github.com/mozilla/geckodriver/releases/">https://github.com/mozilla/geckodriver/releases/</a></td>
</tr>
<tr>
<td><code>Edge</code></td>
<td><a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/">https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/</a></td>
</tr>
<tr>
<td><code>Safari</code></td>
<td><a href="https://webkit.org/blog/6900/webdriver-support-in-safari-10/">https://webkit.org/blog/6900/webdriver-support-in-safari-10/</a></td>
</tr>
</tbody>
</table>
</div>
<p>你们可以看到, <code>Chrome</code>的那一行被划掉了, 毕竟 google.com 被墙掉了除非你科学上网否则做梦都不一定能上去,</p>
<p>所以我们找到了两个用于替代的地址, 便于你不用办理签证去美国也可以用<code>Selenium</code>来驱动<code>Chrome</code>。</p>
<p><code>ChromeDriver</code>下载地址：</p>
<ul>
<li><code>Google</code>官方API: <a href="https://chromedriver.storage.googleapis.com/index.html">https://chromedriver.storage.googleapis.com/index.html</a></li>
<li>淘宝镜像: <a href="https://npm.taobao.org/mirrors/chromedriver/">https://npm.taobao.org/mirrors/chromedriver/</a></li>
</ul>
<p><code>ChromeDriver</code>对应浏览器版本一览：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Webdriver Version</th>
<th>Chrome Version</th>
</tr>
</thead>
<tbody>
<tr>
<td>v2.45</td>
<td>v70-72</td>
</tr>
<tr>
<td>v2.44</td>
<td>v69-71</td>
</tr>
<tr>
<td>v2.43</td>
<td>v69-71</td>
</tr>
<tr>
<td>v2.42</td>
<td>v68-70</td>
</tr>
<tr>
<td>v2.41</td>
<td>v67-69</td>
</tr>
<tr>
<td>v2.40</td>
<td>v66-68</td>
</tr>
<tr>
<td>v2.39</td>
<td>v66-68</td>
</tr>
<tr>
<td>v2.38</td>
<td>v65-67</td>
</tr>
<tr>
<td>v2.37</td>
<td>v64-66</td>
</tr>
<tr>
<td>v2.36</td>
<td>v63-65</td>
</tr>
<tr>
<td>v2.35</td>
<td>v62-64</td>
</tr>
<tr>
<td>v2.34</td>
<td>v61-63</td>
</tr>
<tr>
<td>v2.33</td>
<td>v60-62</td>
</tr>
<tr>
<td>v2.32</td>
<td>v59-61</td>
</tr>
<tr>
<td>v2.31</td>
<td>v58-60</td>
</tr>
<tr>
<td>v2.30</td>
<td>v58-60</td>
</tr>
<tr>
<td>v2.29</td>
<td>v56-58</td>
</tr>
<tr>
<td>v2.28</td>
<td>v55-57</td>
</tr>
<tr>
<td>v2.27</td>
<td>v54-56</td>
</tr>
<tr>
<td>v2.26</td>
<td>v53-55</td>
</tr>
<tr>
<td>v2.25</td>
<td>v53-55</td>
</tr>
<tr>
<td>v2.24</td>
<td>v52-54</td>
</tr>
<tr>
<td>v2.23</td>
<td>v51-53</td>
</tr>
<tr>
<td>v2.22</td>
<td>v49-52</td>
</tr>
<tr>
<td>v2.21</td>
<td>v46-50</td>
</tr>
<tr>
<td>v2.20</td>
<td>v43-48</td>
</tr>
<tr>
<td>v2.19</td>
<td>v43-47</td>
</tr>
<tr>
<td>v2.18</td>
<td>v43-46</td>
</tr>
<tr>
<td>v2.17</td>
<td>v42-43</td>
</tr>
<tr>
<td>v2.13</td>
<td>v42-45</td>
</tr>
<tr>
<td>v2.15</td>
<td>v40-43</td>
</tr>
<tr>
<td>v2.14</td>
<td>v39-42</td>
</tr>
<tr>
<td>v2.13</td>
<td>v38-41</td>
</tr>
<tr>
<td>v2.12</td>
<td>v36-40</td>
</tr>
<tr>
<td>v2.11</td>
<td>v36-40</td>
</tr>
<tr>
<td>v2.10</td>
<td>v33-36</td>
</tr>
<tr>
<td>v2.9</td>
<td>v31-34</td>
</tr>
<tr>
<td>v2.8</td>
<td>v30-33</td>
</tr>
<tr>
<td>v2.7</td>
<td>v30-33</td>
</tr>
<tr>
<td>v2.6</td>
<td>v29-32</td>
</tr>
<tr>
<td>v2.5</td>
<td>v29-32</td>
</tr>
<tr>
<td>v2.4</td>
<td>v29-32</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>「Omoi】君が飛び降りるのなら</title>
    <url>/next-nest/2021/11/05/omoi-kimigatobio/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><pre><code>君が飛び降りるのならば僕は　笑って一緒に飛び降りる
止めてくれるとでも思ったか！僕らの絆を見くびるか！
</code></pre><p>如若你要一躍而下　我會笑著和你一同躍下<br>別以為你能阻止我！別小看我們的羈絆啊！</p>
<p><img src="https://liella-gen2.github.io/imagehost/君が飛び降りるのなら.jpeg" alt="Cover of 君が飛び降りるのなら, from moegirl"></p>
<p>(Cover Image &amp; PV Background of 君が飛び降りるのなら, by <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> )</p>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><a href="https://zh.moegirl.org.cn/如若你跳落的話" title="萌娘百科词条 君が飛び降りるのなら"><strong><em>Kimi ga Tobioriru no Nara</em></strong></a> is an original VOCALOID work vocal-featuring Miku by <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a>, which was submitted to Niconico on June 13<sup>th</sup>, 2017, and later to YouTube &amp; Bilibili.<br>Its title in Chinese <strong>如若你跳落的話</strong> was translated by the mover, which was later adopted when <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> submitted the work to Bilibili on April 29<sup>th</sup>, 2019.<br>A new version titled <strong>君が飛び降りるのならば</strong> with reporduced PV by coalowl and rewritten lyrics, was submitted to the platforms mentioned above on Nov <sup>11th</sup>, 2020.<br><del>Nevertheless, its new title has a new character <code>ば</code>.</del></p>
<p><a href="https://zh.moegirl.org.cn/如若你跳落的話" title="萌娘百科词条 君が飛び降りるのなら"><strong><em>君が飛び降りるのなら</em></strong></a> 是 <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 於2017年6月13日投稿至niconico，後來投稿至YouTube和Bilibili的VOCALOID原創歌曲，由初音MIKU演唱。<br>其中文譯名為<strong>如若你跳落的話</strong>，是搬運者自行對標題進行翻譯得到的，後來在 <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 於2019年4月29日投稿至Bilibili時也採用了這個譯名。<br>2020年11月6日投稿了重填詞PV由coalowl重製版本的<strong>君が飛び降りるのならば</strong><del>然而這個版本的標題比原版多了一個<code>ば</code>字</del>。</p>
<span id="more"></span>
<blockquote>

    <div id="aplayer-XUDWLaoT" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1824854135" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av50818415/">Bilibili: <code>av50818415</code></a> (Niconico: <code>sm32358510</code>)</p>
</blockquote>
<ul>
<li>重製版<blockquote>

    <div id="aplayer-nbhyOHBF" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="123883355" data-server="netease" data-type="album" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av797684560/">Bilibili: <code>av797684560</code></a></p>
</blockquote>
</li>
</ul>
<h2 id="About-Omoi"><a href="#About-Omoi" class="headerlink" title="About Omoi"></a>About Omoi</h2><p><a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> is a male-female VOCALOID-producing duo formed by former high school classmates Sakurai<code>♂</code> and Kimura<code>♀</code>.<br>They specialized in producing synthesizer rock works.</p>
<p><a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 是一男一女的二人VOCALOID創作組合，成員櫻井(男生)和木村(女生)是高中時的同學。<br>他們的風格以合成搖滾爲主。</p>
<p>Sakurai is in charge of the songwriting (lyrics&amp;composition), instrumental (drum, synthesizer, guitar), as well as the tuning; Kimura is in charge of the instrumental (synthesizer, keyboard, guitar).</p>
<p>櫻井主要負責作詞曲、調聲、及打鼓等樂器，木村主要負責使用合成器、鋼琴、吉他等樂器。</p>
<p>Sakurai thought of singing songs with VOCALOID because he is not very good at singing.<br>Nevertheless, he didn’t know anything about chords and accompaniment, so he found Kimura, who was relatively good at these content, and started the combination activity in a semi-mandatory manner.</p>
<p>櫻井之所以會想到用VOCALOID來演唱歌曲，是因為自己不太擅長唱歌。但是他在和弦、伴奏等方面一竅不通，於是找到了相對十分擅長這些內容的木村，以半強制的方式開始了組合活動。</p>
<p>They started producing in 2012, and first debuted in 2013 with the song “Snow Drive”.<br>The VOCALOID mainly used in their songs is Hatsune Miku, yet they have also started to utilize Kagamine Rin, GUMI and IA for background chorus in their recent works.</p>
<p>兩人在2012年結成組合，2013年發表處女作《Snow Drive》。<br>他們使用的VOCALOID以初音MIKU爲主，後來也開始使用鏡音RIN、GUMI、IA來在他們的作品中進行和聲。</p>
<pre><code>Omoiと申します。
絶対の歌です。
</code></pre><p><a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> is used to describe their work in one sentence in the description when submitting the work.<br>The meaning of the sentence above is…</p>
<p><em>We’re Omoi, this a song of absoluteness.</em></p>
<p><a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 喜歡用一個詞來描述二人自己創作的曲目，並在投稿時放到簡介裡面，投這首歌的時候就曾在Niconico寫下上面的話，意為</p>
<p><em>我們是Omoi，這是一首絕對的歌曲。</em></p>
<ul>
<li><code>Omoi</code> Official Website: <a href="https://www.omoi3965.com/">https://www.omoi3965.com/</a></li>
<li><code>Omoi</code> Blog: <a href="https://omoi3965.blog.fc2.com/">https://omoi3965.blog.fc2.com/</a></li>
</ul>
<h2 id="Original-Work-av50818415"><a href="#Original-Work-av50818415" class="headerlink" title="Original Work av50818415"></a><a href="https://www.bilibili.com/video/av50818415/">Original Work <code>av50818415</code></a></h2><iframe src="//player.bilibili.com/player.html?aid=50818415&bvid=BV1w441187ES&cid=88977701&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="Staff"><a href="#Staff" class="headerlink" title="Staff"></a>Staff</h2><ul>
<li>Music/Lyrics/Arrangement/Tuning/Illustration: <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a></li>
</ul>
<p><del>真正意義上的一體機，少見的六邊形戰士</del></p>
<h2 id="My-Personal-Opinion"><a href="#My-Personal-Opinion" class="headerlink" title="My Personal Opinion"></a>My Personal Opinion</h2><p>(在此，筆者愿淺談自己對這首曲目的拙見。)</p>
<p>這首曲目似乎是以陪伴著主人公的miku的視角，講述miku得知主人公行將跳樓之後對主人公所説的話。<br>但這些話有可能是創作這首曲目的 <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 在平日中所想過的、說過的。<br>大家活在這個世界上，沒有人是容易的，總有獨自罹受困難與痛苦的過程。<br>雖然困難需要自己去解決，但是痛苦是可以與大家一起去面對的哦~<br>這些，既是曲目中miku對主人公的話語，也是在現實中 <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 與朋友之間的話語，<br>更是 <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 與miku獻給傾聽這些話語的諸位的鼓舞。<br>激烈的曲風，其深處流淌著真摯的情感；<br>稚嫩的話語之中，閃爍著溫柔的光芒。</p>
<h2 id="Lyrics"><a href="#Lyrics" class="headerlink" title="Lyrics"></a>Lyrics</h2><figure class="highlight plaintext"><figcaption><span>君が飛び降りるのなら 歌詞</span></figcaption><table><tr><td class="code"><pre><span class="line">* 翻譯: そらね</span><br><span class="line"></span><br><span class="line">いきなり歌い始めてごめんね</span><br><span class="line">抱歉突然開始唱起歌來</span><br><span class="line">ちょっとだけそのまま聞いててね</span><br><span class="line">稍微就這樣聽著吧</span><br><span class="line">本日お伝えしたいのは</span><br><span class="line">今天想傳達給你的事</span><br><span class="line">とっても大事な君のこと！</span><br><span class="line">超級重要的你的事喲</span><br><span class="line"></span><br><span class="line">出會った日は覚えてないけど</span><br><span class="line">雖然有時候會和你吵架</span><br><span class="line">なんでも知ってるつもりだよ</span><br><span class="line">但也正因為如此對彼此無所不知</span><br><span class="line">君の長所は真面目なこと</span><br><span class="line">你的優點是非常認真</span><br><span class="line">でも中二病がひどい！</span><br><span class="line">只是中二病太嚴重了！</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">君が飛び降りるのならば僕は</span><br><span class="line">若你要一躍而下的話</span><br><span class="line">笑って一緒に飛び降りる</span><br><span class="line">我也會笑著和你一躍而下</span><br><span class="line">止めてくれるとでも思ったか！</span><br><span class="line">別以為你可以阻止我！</span><br><span class="line">僕らの絆を見くびるか！</span><br><span class="line">別小看我們的羈絆啊！</span><br><span class="line"></span><br><span class="line">そして手を繋いで落ちて行こう</span><br><span class="line">然後我們牽著手一起落下吧</span><br><span class="line">地面めがけてピースしよう</span><br><span class="line">朝向地面比耶吧 ( •̀ ω •́ )y</span><br><span class="line">でもそういえば何かを</span><br><span class="line">不過說起來好像</span><br><span class="line">忘れているような...</span><br><span class="line">忘記了什麼事...</span><br><span class="line">ああそうだ！見たいテレビがあった！</span><br><span class="line">啊啊想起來了！有想看的電視的節目啊！</span><br><span class="line">やっぱり飛ぶの後でにしませんか！</span><br><span class="line">一躍而下果然還是以後再説吧！</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">君に出會ってからというもの</span><br><span class="line">從遇見你開始</span><br><span class="line">全てなんだかおかしくなった</span><br><span class="line">全部都變得奇怪了起來</span><br><span class="line">佔いなんて信じていなかったけど</span><br><span class="line">明明是個不相信占卜的人</span><br><span class="line">たまには良いと思えた</span><br><span class="line">等回過神來已經深陷其中</span><br><span class="line"></span><br><span class="line">変な音楽に觸れて</span><br><span class="line">總是推薦我聽奇怪的音樂</span><br><span class="line">変な漫畫も沢山読んで</span><br><span class="line">推薦我看奇怪的漫畫</span><br><span class="line">気付いたら僕も君の事</span><br><span class="line">左右著別人的人生</span><br><span class="line">笑えなくなっていた！</span><br><span class="line">開什麼玩笑你這傢伙給我記住！</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">君が飛び降りるのならば僕は</span><br><span class="line">若你要一躍而下的話</span><br><span class="line">君よりも先に飛び降りる</span><br><span class="line">我會比你先一躍而下</span><br><span class="line">説得されるとでも思ったか！</span><br><span class="line">別以為你可以說服我！</span><br><span class="line">僕の馬鹿さを甘く見るな！</span><br><span class="line">不要小看我的傻勁啊！</span><br><span class="line"></span><br><span class="line">え何？あの有名ボカロＰが</span><br><span class="line">誒什麼？那個有名的 VOCALOID-P</span><br><span class="line">明日新曲上げるだって？</span><br><span class="line">明天要發布新的曲目嗎？</span><br><span class="line">ってなんでこんな大事な時まで</span><br><span class="line">都到了這麼重要的時候</span><br><span class="line">Twitter見てんのさ君は…</span><br><span class="line">你怎麼看起了Twitter？</span><br><span class="line">もう僕ら明日それ見なきゃ</span><br><span class="line">所以明天看不到（那首新曲）的話</span><br><span class="line">この世界にさよならできないじゃん！ああ</span><br><span class="line">我們就無法向這個世界告別！啊----</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">いつか　僕らは</span><br><span class="line">終有一天 我們</span><br><span class="line">ナニモノか分かるかな</span><br><span class="line">也能夠得到答案嗎？</span><br><span class="line">そんな　未來は</span><br><span class="line">直到遺忘那樣的未來之前</span><br><span class="line">來る訳は　ないよな就</span><br><span class="line">這樣一直保密吧</span><br><span class="line"></span><br><span class="line">飛び降りる前の　確認事項</span><br><span class="line">準備跳下去之前需要確認的注意事項</span><br><span class="line">ガスの元栓　窓の戸締り</span><br><span class="line">記得關上燃氣　鎖好門窗</span><br><span class="line">ハードディスクは　叩き割っとく</span><br><span class="line">鍵盤要不要直接砸掉呢？</span><br><span class="line">…のはもったいなくてやめたけど</span><br><span class="line">...還是算了吧太浪費了呀</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">君が飛び降りるのならば僕は</span><br><span class="line">若你要一躍而下的話</span><br><span class="line">笑って一緒に飛び降りる</span><br><span class="line">我也會笑著和你一躍而下</span><br><span class="line">止めてくれるとでも思ったか！</span><br><span class="line">別以為你可以阻止我！</span><br><span class="line">僕らの絆を見くびるか！</span><br><span class="line">別小看我們的羈絆啊！</span><br><span class="line"></span><br><span class="line">次に僕らが出會う世界でも</span><br><span class="line">若是下次我們再次相遇的世界</span><br><span class="line">またこんな風になれたらいいね</span><br><span class="line">也能像這樣就好了呢</span><br><span class="line">生まれ変わったら何になるか</span><br><span class="line">若是輪迴轉世會變成什麼呢</span><br><span class="line">本で佔ってみようか</span><br><span class="line">試著用書本占卜吧？</span><br><span class="line">君は玉ねぎ　僕はタイヤ你</span><br><span class="line">是「洋蔥」　我是「輪胎」</span><br><span class="line">やっぱり飛ぶの今度にしませんか…？</span><br><span class="line">果然一躍而下還是改到下次吧……？</span><br><span class="line">本當に飛べる日　目指して</span><br><span class="line">將真的、真的能夠一躍而下的那天當作目標</span><br><span class="line">もうちょっとだけ一緒に居ませんか！</span><br><span class="line">要不要稍微再繼續在一起呢！</span><br></pre></td></tr></table></figure>
<h2 id="From-Comments"><a href="#From-Comments" class="headerlink" title="From Comments"></a>From Comments</h2><p>(在此，筆者希望能夠引用<a href="https://www.bilibili.com/video/av797684560/#comment">曲目<code>PV重製版</code>視頻評論區</a>的朋友們的話)</p>
<blockquote><p>特别喜欢这首歌的活力和纯真感，明明歌词在谈很压抑的事(劝导自杀者？），但却没有故作高姿态的温柔关怀，也没有讲什么生死哲理和道德约束，只有充满力量的真情…在之前那个视频循环过n次。等一个改词后的翻译。先谢谢翻译大佬<code>[抱拳]</code></p>
<footer><strong>視頻av797684560評論區</strong><cite><a href="https://www.bilibili.com/video/av797684560/#reply3679267817">@balanceRR</a></cite></footer></blockquote>
<blockquote><p>这真的好棒好的一首歌 言词轻松活泼却比很多“世界其实很美好你要坚强”之类的话有力很多<br>我会陪你一起跳的<br>还有电视剧没看那就下次吧<br>下周漫画主角要胜利了那就下次吧<br>今天跳会转生成洋葱和轮胎那就下次吧</p>
<p>这是最棒的下次一定</p>
<footer><strong>視頻av797684560評論區</strong><cite><a href="https://www.bilibili.com/video/av797684560/#reply3692618796">@八老爷生前是个体面人</a></cite></footer></blockquote>
<blockquote><p>看了歌词之后就好想哭啊……………..真的被这首歌触动到了毕竟生活这样经常也会有想跳的时候，这个时候要是有人能像这首歌讲的那样在身边真的会很开心会想着一起的</p>
<footer><strong>視頻av797684560評論區</strong><cite><a href="https://www.bilibili.com/video/av797684560/#reply3680481509">@烛棘</a></cite></footer></blockquote>
<blockquote><p>谢谢你，感受到歌曲的力量了，发自内心的感谢你。</p>
<footer><strong>視頻av797684560評論區</strong><cite><a href="https://www.bilibili.com/video/av797684560/#reply3743686602">@千代月狐</a></cite></footer></blockquote>
<h2 id="Extra"><a href="#Extra" class="headerlink" title="Extra"></a>Extra</h2><p>(在此，筆者慾講述一點本曲與自己相關的經歷)</p>
<p>筆者個人也一直有處處吃癟，時時受挫的時候。<br>正如上文所説，活在這個世界上沒有一個人是容易的，<br>完全會有各種不幸同時降臨的階段。<br>筆者曾有過參加<a href="https://oi-wiki.org/contest/oi/#noip"><code>NOIp</code></a>等<a href="https://zh.moegirl.org.cn/OI"><code>OI</code></a>競賽的夢想，<br>但因爲文化課成績不夠好，這個夢想還未開始便迎來結束。<br>在此之後，筆者經常性地進入無綫頹唐徘徊彷徨的狀態，<br>當各種不幸在一個心智只有15.5嵗的高中生身上發生時，縱使它們再微小不過，也足以壓垮這個孩子。<br><em>Nevertheless,</em><br>這首歌拯救了我。<br>愿這份來自 <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 的溫柔，也能為屏幕前的你，帶來溫暖的慰藉、短暫的小憩與繼續前行的力量。</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>萌娘百科词条 君が飛び降りるのなら: <a href="https://zh.moegirl.org.cn/如若你跳落的話">https://zh.moegirl.org.cn/如若你跳落的話</a></li>
<li>萌娘百科词条 Omoi: <a href="https://zh.moegirl.org.cn/Omoi">https://zh.moegirl.org.cn/Omoi</a></li>
<li>「Omoi」如若你跳落的話（君が飛び降りるのなら）- 初音未来 <a href="https://www.bilibili.com/video/av50818415/">av50818415</a> 2019-04-29</li>
<li>「Omoi」如若你跳落的話（君が飛び降りるのならば）- 初音未来 <a href="https://www.bilibili.com/video/av797684560/">av797684560</a> 2020-11-06</li>
<li>Vocaloid wiki in Fandom, Omoi: <a href="https://vocaloid.fandom.com/wiki/Omoi">https://vocaloid.fandom.com/wiki/Omoi</a></li>
<li>初音ミク wiki, Omoi: <a href="https://w.atwiki.jp/hmiku/pages/28820.html">https://w.atwiki.jp/hmiku/pages/28820.html</a></li>
<li>初音ミク wiki, 君が飛び降りるのなら: <a href="https://w.atwiki.jp/hmiku/pages/37012.html">https://w.atwiki.jp/hmiku/pages/37012.html</a></li>
</ol>
<p>文字内容默认使用《知识共享 署名-非商业性使用-相同方式共享 3.0》协议。</p>
]]></content>
      <tags>
        <tag>VOCALOID</tag>
        <tag>VOCALOID Comments &amp; Recommendations</tag>
        <tag>Hatsune Miku (初音MIKU)</tag>
        <tag>Omoi</tag>
      </tags>
  </entry>
  <entry>
    <title>「学习笔记】模拟退火</title>
    <url>/next-nest/2019/12/06/note-SimulateAnneal/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>模拟退火算法(Simulate Anneal, SA)是一种通用概率演算法, 用来在一个大的搜寻空间内找寻命题的最优解, 该算法由S.Kirkpatrick, C.D.Gelatt和M.P.Vecchi于1983年提出, V.Černý在1985年也独立提出该算法。</p>
<span id="more"></span>
<h2 id="Annel"><a href="#Annel" class="headerlink" title="Annel"></a>Annel</h2><p>什么是退火?</p>
<p>我们看看来自百度百科的讲解:</p>
<blockquote>
<p>退火是一种金属热处理工艺, 指的是将金属缓慢加热到一定温度, 保持足够时间, 然后以适宜速度冷却。<br>目的是降低硬度, 改善切削加工性; 降低残余应力, 稳定尺寸, 减少变形与裂纹倾向; 细化晶粒, 调整组织, 消除组织缺陷。<br>准确的说, 退火是一种对材料的热处理工艺, 包括金属材料, 非金属材料。<br>而且新材料的退火目的也与传统金属退火存在异同。</p>
</blockquote>
<p>好吧，其实说白了就是这样的一张图:<img src="/next-nest/2019/12/06/note-SimulateAnneal/anneal.jpeg" alt><strong>千言万语不及一幅图啊!!!</strong></p>
<h2 id="Theory"><a href="#Theory" class="headerlink" title="Theory"></a>Theory</h2><p>既然是模拟退火, 其原理也和金属退火大同小异。</p>
<p>金属退火是让固体缓慢加热趋于无序自由, 再缓慢降温逐渐变得有序, 趋于基态, 此时固体的内能最小; 而SA便是<em>当你爬到一个一个局部最优解的时候, 你突发奇想, 破天荒地往山坡上方爬了爬, 发现远处有一个更优解, 而那便是你梦寐以求的全局最优解。</em></p>
<p>就像这样:<img src="/next-nest/2019/12/06/note-SimulateAnneal/convex.jpeg" alt></p>
<p>你从山坡上的A点顺着梯度(普通优化方案)爬到了局部最低的山谷B点, 这个时候你逆梯度而上, 往右向上爬过了那个小山峰, 来到了最低的山谷C点。</p>
<p>SA在实际使用的过程中, 有一个状态转移准则, 来决定你是否要往右爬, 由一个Metropolis概率来表示:</p>
<script type="math/tex; mode=display">p=\begin{cases}
  {E(x_{new}) < E(x_{old})}, & 1 \\
  {E(x_{new}) > E(x_{old})}, & \exp{(-\frac{E(x_{new})-E(x_{old})}T)}
\end{cases}</script><h2 id="Applications"><a href="#Applications" class="headerlink" title="Applications"></a>Applications</h2><p>事实上SA<del>并没多大卵用</del>有着<strong>极为广泛的应用前景</strong>, 包括:</p>
<ul>
<li><a href="https://baike.baidu.com/item/TSP/2905216">最短路径问题(TSP)</a></li>
<li>NLP, 也就是所谓自然语言处理中的语义分割(主要是英语)(就是你们说的分词)问题, 但语义分割一般会用<a href="https://baike.baidu.com/item/隐马尔可夫模型/7932524">隐式马尔可夫模型(HMM)</a>或者条件随机场(CRF)之类的比较成熟的算法, 也不会有人<del>吃饱了撑的</del>用SA。<br><img src="/next-nest/2019/12/06/note-SimulateAnneal/SimulateAnneal/crf.jpeg" alt><br>目前语义分割中盛行的<code>CRF+LSTM</code>语义分割模型</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://baike.baidu.com/item/退火/1039313">百度百科词条 退火</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <a href="https://baike.baidu.com/item/模拟退火/8664695">百度百科词条 模拟退火</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. <code>WFRainn</code>的CSDN文章 <a href="http://blog.csdn.net/wfrainn/article/details/80303138/">模拟退火算法与其python实现(一)</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_4">
<sup>4</sup>. <code>tychyg</code>的博客园文章 <a href="https://www.cnblogs.com/tychyg/p/5277275.html">Python自然语言处理系列之模拟退火算法</a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_5">
<sup>5</sup>. <code>ranjiewen</code>的博客园文章 <a href="https://www.cnblogs.com/ranjiewen/p/6084052.html">模拟退火算法</a><a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>千醬！我真的好喜歡你啊!!爲了你我要推導π的展開式！!!----</title>
    <url>/next-nest/2021/10/13/pi-chi-chan/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>有一天，群裏的朋友在萌娘百科上注意到</p>
<p><img src="https://liella-gen2.github.io/imagehost/pi.jpeg" alt></p>
<p>光是背出來怎麽夠呢??爲了千醬，我們當然要把它推導出來啊!!</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>如題，對於 $\mathrm{R}$ 上的任意周期函數 $f(x)$ ，…</p>
<span id="more"></span>
<p>可展開為三角級數</p>
<script type="math/tex; mode=display">
\begin{align}
f(x) = \frac{\alpha_0}2 + \sum_{k=1}^{\infty} ({\alpha}_k \cos{kx} + {\beta}_k \sin{kx}) \\

{\alpha}_k = \frac{1}{\pi} \int_{-\pi}^{\pi} {f(x) \cos{kx} \mathrm{d}x}, 其中 k = 0, 1, 2, \cdots \\
{\beta}_k = \frac{1}{\pi} \int_{-\pi}^{\pi} {f(x) \sin{kx} \mathrm{d}x}, 其中 k = 1, 2, \cdots \\

\end{align}</script><p>根據Fourier展開式，函數 $f(x)$ 中的Fourier係數展開如上。</p>
<p>根據式 $(2), (3)$ 得到函數 $\psi(x) = x^2$ 與 $\phi(x) = x$ 的Fourier係數</p>
<ol>
<li><p>對於函數 $\psi(x) = x^2$ ，根據<ruby>積分第一類換元法<rt>凑微分法</rt></ruby>、分部積分公式、<ruby>Newton-Leibniz公式<rt>微積分基本定理</rt></ruby>等結論，我們得到</p>
<script type="math/tex; mode=display">
 \begin{align*}

 {\alpha}_0
 &= \frac{1}{\pi} \int_{-\pi}^{\pi} x^2 \mathrm{d}x
  = \frac{2}3 {\pi}^2, \\

 {\alpha}_k
 &= \frac{1}{\pi} \int_{-\pi}^{\pi} x^2 \cos{kx} \mathrm{d}x \\
 &= \frac{1}{\pi k^3} \int_{-\pi}^{\pi} {(kx)}^2 \cos{kx} \mathrm{d}{(kx)} \\
 &= \frac{1}{\pi k^3} \int_{-k\pi}^{k\pi} t^2 \cos t \mathrm{d}t \\
 &= \frac{1}{\pi k^3} \int_{-k\pi}^{k\pi} t^2 \mathrm{d}{(\sin t)} \\
 &= \frac{1}{\pi k^3} {[ \int t^2 \mathrm{d}{(\sin t)} ]}_{-k\pi}^{k\pi} \\
 &= \frac{1}{\pi k^3} {[ t^2 \sin t - \int \sin t \mathrm{d}{(t^2)} ]}_{-k\pi}^{k\pi} \\
 &= \frac{1}{\pi k^3} {[ t^2 \sin t - 2 \int t \sin t \mathrm{d}{t} ]}_{-k\pi}^{k\pi} \\
 &= \frac{1}{\pi k^3} {[ t^2 \sin t + 2 \int t \mathrm{d}{(\cos t)} ]}_{-k\pi}^{k\pi} \\
 &= \frac{1}{\pi k^3} {[ t^2 \sin t + 2[ t \cos t - \int \cos t \mathrm{d}t ]]}_{-k\pi}^{k\pi} \\
 &= \frac{1}{\pi k^3} {[ t^2 \sin t + 2[ t \cos t + \int \mathrm{d}{(\sin t)} ]]}_{-k\pi}^{k\pi} \\
 &= \frac{1}{\pi k^3} {[ t^2 \sin t + 2[ t \cos t + \sin t ]]}_{-k\pi}^{k\pi} \\
 &= \frac{2}{\pi k^3} {[ t \cos t ]}_{-k\pi}^{k\pi} \\
 &= \frac{2}{\pi k^3} {[{[ t \cos t ]}_{k\pi} - {[ t \cos t ]}_{-k\pi}]} \\
 &= \frac{2}{\pi k^3} {[ k\pi \cos(k\pi) - (-k\pi) \cos(-k\pi) ]} \\
 &= \frac{2}{\pi k^3} {[ k\pi \cos(k\pi) + k\pi \cos(k\pi) ]} \\
 &= \frac{4}{\pi k^3} k\pi \cos(k\pi) \\
 &= {(-1)}^k \frac{4}{k^2}, \\

 {\beta }_k
 &= \frac{1}{\pi} \int_{-\pi}^{\pi} x^2 \sin{kx} \mathrm{d}x
  = 0, \\

 \end{align*}</script><p> 上述各項代入三角級數表達式得到</p>
<script type="math/tex; mode=display">\psi(x) = \frac{ {\pi}^2}3 + 4 \sum_{k=1}^{\infty} \frac{ {(-1)}^k}{k^2} \cos{kx},</script><p> $x = \pi$ 時，得到</p>
<script type="math/tex; mode=display">
 \begin{align*}
 {\pi}^2 = \psi(\pi)
 &= \frac{ {\pi}^2}3 + 4 \sum_{k=1}^{\infty} \frac{ {(-1)}^k}{k^2} \cos{k\pi} \\
 &= \frac{ {\pi}^2}3 + 4 \sum_{k=1}^{\infty} \frac{ {(-1)}^k}{k^2} {(-1)}^k \\
 &= \frac{ {\pi}^2}3 + 4 \sum_{k=1}^{\infty} \frac{1}{k^2}, \\
 \frac{2}3{\pi}^2 &= 4 \sum_{k=1}^{\infty} \frac{1}{k^2}, \\
 \frac{ {\pi}^2}6 &= \sum_{k=1}^{\infty} \frac{1}{k^2}, \\
 \therefore \pi &= \sqrt{6 \sum_{k=1}^{\infty} \frac{1}{k^2} }. \\
 \end{align*}</script></li>
<li><p>對於函數 $\phi(x) = x$ ，與上述過程類似地，我們得到</p>
<script type="math/tex; mode=display">
 \begin{align*}

 {\alpha}_k
 &= \frac{1}{\pi} \int_{-\pi}^{\pi} x \cos{kx} \mathrm{d}x
  = 0, \\

 {\beta }_k
 &= \frac{1}{\pi} \int_{-\pi}^{\pi} x \sin{kx} \mathrm{d}x
  = (-2) \frac{ {(-1)}^k}k, \\

 \phi(x) &= (-2) \sum_{k=1}^{\infty} { {(-1)}^k \frac{\sin{kx} }k }, \\

 \frac{\pi}2 = \phi(\frac{\pi}2)
 &= (-2) \sum_{k=1}^{\infty} { {(-1)}^k \frac{\sin{\frac{k}2\pi} }k } \\
 &= (-2) \sum_{m=1}^{\infty} \frac{ {(-1)}^m }{2m-1}, \\

 \therefore \pi &= (-4) \sum_{m=1}^{\infty} \frac{ {(-1)}^m }{2m-1}. \\

 \end{align*}</script></li>
</ol>
<p>綜上所述，我們得到 $\pi$ 的兩種三角級數形式的表達式</p>
<script type="math/tex; mode=display">
\begin{align*}
\pi
&= \sqrt{6 \sum_{k=1}^{\infty} \frac{1}{k^2} }
= \sqrt{6(1 + \frac{1}4 + \frac{1}9 + \cdots + \frac{1}m + \cdots)},\\
\pi
&= (-4) \sum_{k=1}^{\infty} \frac{ {(-1)}^k }{2 k - 1}
= 4[1 - \frac{1}3 + \frac{1}5 - \frac{1}7 + \cdots + \frac{ {(-1)}^m }{2 m - 1} + \cdots].\\
\end{align*}</script><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>復旦大學數學系: 《數學分析》第四版(下冊), 歐陽光中 朱學炎 金福臨 陳傳璋 編, 高等教育出版社, 2018年8月 (初版1978年5月).</li>
</ol>
]]></content>
      <tags>
        <tag>Virtual Artists (虛擬藝人)</tag>
      </tags>
  </entry>
  <entry>
    <title>想聽世界計劃中的組合,翻唱的歌曲</title>
    <url>/next-nest/2022/01/31/pjsekai-fig-songs/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>來自<code>政經</code>的Lofter文章<a href="https://caesium.lofter.com/post/3801ad_1cc4096e4">想聽他們翻唱的歌</a>。</p>
<span id="more"></span>
<h2 id="Recommendations"><a href="#Recommendations" class="headerlink" title="Recommendations"></a>Recommendations</h2><div class="table-container">
<table>
<thead>
<tr>
<th>Units</th>
<th>Original-works Like most</th>
<th>Covering-works Like most</th>
<th>Covering-works Expect most</th>
</tr>
</thead>
<tbody>
<tr>
<td><i class="fas fa-meteor"></i> <a href="https://zh.moegirl.org.cn/Leo/need"><code>Leo/need</code></a> <sup><a href="#fn_1" id="reffn_1">1</a></sup></td>
<td>Luna - <a href="https://zh.moegirl.org.cn/流星Pulse">Pulse of the Meteor</a><br>Harry - <a href="https://zh.moegirl.org.cn/STAGE_OF_SEKAI">Stage of Sekai</a><br>Deco - <a href="https://zh.moegirl.org.cn/NeedLe">Needle</a></td>
<td>藤原基央 (BUMP OF CHICKEN) - <a href="https://zh.moegirl.org.cn/Ray(歌曲)">ray</a> (with Livetune), <a href="https://zh.moegirl.org.cn/Hello,world!">Hello,world!</a><br>Papiyon - <a href="https://zh.moegirl.org.cn/心拍数_0822">心拍数♯0822</a><br>Deco - <a href="https://zh.moegirl.org.cn/火花(DECO*27)">Hibana</a> -Reloaded-<br>Marasy - <a href="https://zh.moegirl.org.cn/奔跑吧！蓝色！">奔跑吧！藍色！</a><br>Oneroom - <a href="https://zh.moegirl.org.cn/From_Y_to_Y">from Y to Y</a><br>Eve - <a href="https://zh.moegirl.org.cn/拟剧论">Dramaturgy</a><br>想太 - <a href="https://zh.moegirl.org.cn/别走">Ikanaide</a><br>1640mp - <a href="https://zh.moegirl.org.cn/时光机(歌曲)">Time Machine</a></td>
<td>藤原基央 (BUMP OF CHICKEN) - 天體觀測 (<a href="https://www.bilibili.com/video/av2313084/">Yura (feat. GUMI) cover: <code>av2313084</code></a>)<br>164 - <a href="https://zh.moegirl.org.cn/天之弱">天之弱</a><br>Honeyworks - <a href="https://zh.moegirl.org.cn/爱的剧本">Ai no Scenario</a><br>Livetune - Be your Light(<a href="https://www.bilibili.com/video/av886891479/">Bilibili: <code>av886891479</code></a>)<br>澤野弘之 - Inferno (<a href="https://www.bilibili.com/video/av97683195/">Bilibili: <code>av97683195</code></a>), <a href="https://zh.moegirl.org.cn/Bios">βίος</a>, CRY (<a href="https://www.bilibili.com/video/av710738875/">Bilibili: <code>av710738875</code></a>)<br>林友樹 - After Rain (<a href="https://www.bilibili.com/video/av929723512/">Bilibili: <code>av929723512</code></a>)<br>Bernis - <a href="https://zh.moegirl.org.cn/42世纪文艺复兴">42 Century Renaissance</a><br>Papiyon - Fictional World (<a href="https://www.bilibili.com/video/av670778/">Bilibili: <code>av670778</code></a>)<br>Harry - 一閃光 (<a href="https://www.bilibili.com/video/av17632876/">Bilibili: <code>av17632876</code></a>)<br>人形兎 - <a href="https://zh.moegirl.org.cn/Hear_me!">Hear me！</a> , <a href="https://zh.moegirl.org.cn/Daybreak(乐正绫)">Daybreak</a><br>Divela - <a href="https://zh.moegirl.org.cn/METEOR(DIVELA)">METEOR</a><br>Deco - <a href="https://zh.moegirl.org.cn/初岚">初嵐 ~First Storm~</a><br>Zomig - <a href="https://zh.moegirl.org.cn/Lalala.Refrain">Lalala.Refrain</a><br>戰場原妖精 - <a href="https://zh.moegirl.org.cn/Journey(星尘)">Journey</a>, <a href="https://zh.moegirl.org.cn/好想你">好想你</a> (cover. Joyce Chu), Rocking Cradle (<a href="https://www.bilibili.com/video/av593138/">Bilibili: <code>av593138</code></a>), <a href="https://zh.moegirl.org.cn/下一个远方">下一個遠方</a>, <a href="https://zh.moegirl.org.cn/粉色柠檬">粉色檸檬</a><br>…還有更多</td>
</tr>
<tr>
<td><i class="fas fa-leaf"></i> <a href="https://zh.moegirl.org.cn/MORE_MORE_JUMP!"><code>MORE MORE JUMP!</code></a></td>
<td>Divela - <a href="https://zh.moegirl.org.cn/天使的幸运草">Angel’s Clover</a><br>Nayutan - <a href="https://zh.moegirl.org.cn/More！Jump！More！">More!Jump!More!</a></td>
<td>Yuzy - <a href="https://zh.moegirl.org.cn/索涅奇卡的牛奶皇冠">Milkcrown on Sonetica</a><br>Easypop - <a href="https://zh.moegirl.org.cn/快乐合成器">Happy Synthesizer</a><br>Kemu - <a href="https://zh.moegirl.org.cn/地球最后的告白">地球最後的告白</a></td>
<td>Lovelive - <a href="https://zh.moegirl.org.cn/No_brand_girls">No brand girls</a><br>Livetune - Satisfaction (<a href="https://www.bilibili.com/video/av4154566/">Bilibili: <code>av4154566</code></a>)</td>
</tr>
<tr>
<td><i class="fas fa-compact-disc"></i> <a href="https://zh.moegirl.org.cn/Vivid_BAD_SQUAD"><code>Vivid BAD SQUAD</code></a></td>
<td>Ayase - <a href="https://zh.moegirl.org.cn/电影(Ayase)">Cinema</a><br>Rsounddesign - <a href="https://zh.moegirl.org.cn/Forward">Forward</a></td>
<td>Giga - <a href="https://zh.moegirl.org.cn/Drop_pop_candy">drop pop candy</a><br>Dixieflatline - <a href="https://zh.moegirl.org.cn/Just_Be_Friends">Just Be Friends</a></td>
<td>Mikunya - <a href="https://zh.moegirl.org.cn/COME_BACK~重返巔峰~">COME BACK ~重返巔峰~</a><br>Livetune - <a href="https://zh.moegirl.org.cn/Glare">Glare</a></td>
</tr>
<tr>
<td><i class="fas fa-crown"></i> <a href="https://zh.moegirl.org.cn/Wonderlands×Showtime"><code>WonderShow</code></a></td>
<td>Jizasu - <a href="https://zh.moegirl.org.cn/笑容满面^^调查队的主题曲">笑容滿面^^調查隊的主題曲</a></td>
<td></td>
<td>田中隼人 - <a href="https://zh.moegirl.org.cn/Nonfiction!!">Nonfiction!!</a></td>
</tr>
<tr>
<td><i class="fas fa-heart-broken"></i> <a href="https://zh.moegirl.org.cn/25时，在Nightcord。"><code>Nightcord at 25:00</code></a></td>
<td>Surii - <a href="https://zh.moegirl.org.cn/向着无尽之灰">向著無盡之灰</a></td>
<td>Kurogaki - <a href="https://zh.moegirl.org.cn/被生命所厌恶">爲生命所厭惡</a></td>
<td>Kide - <a href="https://zh.moegirl.org.cn/光(Kide)">光</a></td>
</tr>
</tbody>
</table>
</div>
<h2 id="Template"><a href="#Template" class="headerlink" title="Template"></a>Template</h2><p>附模板，大家可以下載圖片自行填寫什麽的。</p>
<p><img src="/next-nest/2022/01/31/pjsekai-fig-songs/template.jpeg" alt="pjsekai-fig-songs"></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><i class="fas fa-leaf"></i></li>
<li><i class="fas fa-crown"></i></li>
<li><i class="fas fa-meteor"></i></li>
<li><i class="fas fa-heart-broken"></i></li>
<li><i class="fas fa-compact-disc"></i></li>
</ol>
<blockquote id="fn_1">
<sup>1</sup>. 英文名稱來自官方網站 <a href="https://www.colorfulstage.com/">Hatsune MIKU: COLORFUL STAGE!</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>「学习笔记】VB入门</title>
    <url>/next-nest/2019/05/02/note-VB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>没错这是<code>Visual Basic</code><sup><a href="#fn_1" id="reffn_1">1</a></sup>的入门教程。</p>
<span id="more"></span>
<h2 id="Components"><a href="#Components" class="headerlink" title="Components"></a>Components</h2><div class="table-container">
<table>
<thead>
<tr>
<th>控件</th>
<th>类名</th>
</tr>
</thead>
<tbody>
<tr>
<td>窗体</td>
<td><code>Form</code></td>
</tr>
<tr>
<td>命令按钮</td>
<td><code>CommandButton</code></td>
</tr>
<tr>
<td>标签</td>
<td><code>Label</code></td>
</tr>
<tr>
<td>文本框</td>
<td><code>TextBox</code></td>
</tr>
</tbody>
</table>
</div>
<h2 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h2><div class="table-container">
<table>
<thead>
<tr>
<th>属性</th>
<th>成员名称</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>名称</td>
<td><code>Name</code></td>
<td>相当于变量名</td>
</tr>
<tr>
<td>显示内容</td>
<td><code>Caption</code></td>
<td>在控件中显示的文字内容</td>
</tr>
<tr>
<td>高度</td>
<td><code>Height</code></td>
<td>控件的纵向尺寸</td>
</tr>
<tr>
<td>宽度</td>
<td><code>Width</code></td>
<td>控件的横向尺寸</td>
</tr>
</tbody>
</table>
</div>
<h2 id="Declarations"><a href="#Declarations" class="headerlink" title="Declarations"></a>Declarations</h2><h3 id="Constants"><a href="#Constants" class="headerlink" title="Constants"></a>Constants</h3><figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Const</span> 常量名 = 常量值</span><br><span class="line"><span class="keyword">Const</span> NUM_CONSTANT = <span class="number">1926.0817</span></span><br></pre></td></tr></table></figure>
<h3 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h3><figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Dim</span> 变量名 <span class="keyword">As</span> 变量类型 = 初始值</span><br><span class="line"><span class="keyword">Dim</span> var1 <span class="keyword">As</span> <span class="type">Integer</span> = <span class="number">1024</span></span><br></pre></td></tr></table></figure>
<h3 id="Types"><a href="#Types" class="headerlink" title="Types"></a>Types</h3><p>也就这么几种</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>变量类型</th>
<th>名称</th>
</tr>
</thead>
<tbody>
<tr>
<td>整数</td>
<td><code>Integer</code></td>
</tr>
<tr>
<td>字符</td>
<td><code>Char</code></td>
</tr>
<tr>
<td>长整数</td>
<td><code>Long</code></td>
</tr>
<tr>
<td>单精度</td>
<td><code>Single</code></td>
</tr>
<tr>
<td>双精度</td>
<td><code>Double</code></td>
</tr>
<tr>
<td>字符串</td>
<td><code>String</code></td>
</tr>
<tr>
<td>二值布尔</td>
<td><code>Boolean</code>(可以为<code>True</code>或者<code>False</code>)</td>
</tr>
<tr>
<td>日期</td>
<td><code>Date</code></td>
</tr>
</tbody>
</table>
</div>
<h2 id="Operators-and-Functions"><a href="#Operators-and-Functions" class="headerlink" title="Operators and Functions"></a>Operators and Functions</h2><ul>
<li><p>算术运算符</p>
<ul>
<li>加法 <code>+</code></li>
<li>减法 <code>-</code></li>
<li>乘法 <code>*</code></li>
<li>除法 <code>/</code><ul>
<li>整除 <code>\</code></li>
</ul>
</li>
<li>取模 <code>Mod</code></li>
<li>乘方 <code>^</code></li>
</ul>
</li>
<li><p>关系运算符</p>
<ul>
<li>相等 <code>=</code>(对就是很麻烦, 和赋值是一个符号)</li>
<li>不等 <code>&lt;&gt;</code>(一种被批评的写法)</li>
<li>小于 <code>&lt;</code></li>
<li>大于 <code>&gt;</code></li>
<li>小于等于 <code>&lt;=</code></li>
<li>大于等于 <code>&gt;=</code></li>
</ul>
</li>
<li><p>逻辑运算符</p>
<ul>
<li>与 <code>And</code><ul>
<li>与(短路式快速求值) <code>AndAlso</code></li>
</ul>
</li>
<li>或 <code>Or</code><ul>
<li>或(短路式快速求值) <code>OrElse</code></li>
</ul>
</li>
<li>非 <code>Not</code></li>
<li>异或 <code>Xor</code></li>
<li>为真 <code>IsTrue</code></li>
<li>为假 <code>IsFalse</code></li>
</ul>
</li>
</ul>
<h2 id="Conditions"><a href="#Conditions" class="headerlink" title="Conditions"></a>Conditions</h2><ul>
<li><p><code>If</code>条件控制</p>
  <figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">If</span> 条件<span class="number">1</span> <span class="keyword">Then</span></span><br><span class="line">    语句<span class="number">1</span></span><br><span class="line"><span class="keyword">ElseIf</span> 条件<span class="number">2</span> <span class="comment">&#x27;这里不用加Then</span></span><br><span class="line">    语句<span class="number">2</span></span><br><span class="line"><span class="keyword">ElseIf</span> 条件<span class="number">3</span></span><br><span class="line">    语句<span class="number">3</span></span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line">    其他语句</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span> <span class="comment">&#x27;结束选择结构</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>Select</code>条件控制</p>
  <figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Select</span> 标准</span><br><span class="line">    <span class="keyword">Case</span> 条件<span class="number">1</span></span><br><span class="line">        语句<span class="number">1</span></span><br><span class="line">    <span class="keyword">Case</span> 条件<span class="number">2</span></span><br><span class="line">        语句<span class="number">2</span></span><br><span class="line">    <span class="keyword">Case</span> 条件<span class="number">3</span></span><br><span class="line">        语句<span class="number">3</span></span><br><span class="line">    <span class="keyword">Case</span> <span class="keyword">Else</span></span><br><span class="line">        其他语句</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Select</span> <span class="comment">&#x27;结束选择结构</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Loops"><a href="#Loops" class="headerlink" title="Loops"></a>Loops</h2><ul>
<li><p><code>For</code>循环</p>
  <figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">For</span> 变量名 <span class="keyword">As</span> 变量类型 = 初始值 <span class="keyword">To</span> 终值 <span class="keyword">Step</span> 步长</span><br><span class="line">    循环语句</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">For</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://baike.baidu.com/item/Visual%20Basic/287852">百度百科词条 <code>Visual Basic</code></a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <code>u011054333</code>的CSDN文章 <a href="https://blog.csdn.net/u011054333/article/details/78984118/">Visual Basic快速入门</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>Notes (代码笔记)</tag>
      </tags>
  </entry>
  <entry>
    <title>Leo/need 原創曲統計 (截至2022年1月)</title>
    <url>/next-nest/2022/02/01/pjsekai-stats-ln-202201/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>如題，稍微統計一下<code>Leo/need</code>原創曲在國内的再生數。</p>
<span id="more"></span>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:right">Producer</th>
<th style="text-align:left">Title</th>
<th style="text-align:center">Sekai version</th>
<th style="text-align:center">VOCALOID Origin</th>
<th style="text-align:center">sum</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">Deco (feat. 初音MIKU)</td>
<td style="text-align:left">Needle</td>
<td style="text-align:center">-</td>
<td style="text-align:center">2.9w</td>
<td style="text-align:center">-</td>
</tr>
<tr>
<td style="text-align:right">Jin (feat. 初音MIKU)</td>
<td style="text-align:left">Stella</td>
<td style="text-align:center">1.3w</td>
<td style="text-align:center">7.0w</td>
<td style="text-align:center">8.3w+</td>
</tr>
<tr>
<td style="text-align:right">Orangestar (feat. 初音MIKU)</td>
<td style="text-align:left">霽れを待つ</td>
<td style="text-align:center">5.1w</td>
<td style="text-align:center"><strong>11.6w</strong></td>
<td style="text-align:center"><strong>16.7w+</strong></td>
</tr>
<tr>
<td style="text-align:right">164 (feat. 巡音LUKA)</td>
<td style="text-align:left">1</td>
<td style="text-align:center">3.8w</td>
<td style="text-align:center">3.3w</td>
<td style="text-align:center">7.1w+</td>
</tr>
<tr>
<td style="text-align:right">夏代孝明 (feat. 初音MIKU)</td>
<td style="text-align:left">from Tokyo</td>
<td style="text-align:center">2.1w</td>
<td style="text-align:center">2.9w</td>
<td style="text-align:center">5.0w+</td>
</tr>
<tr>
<td style="text-align:right"><code>*</code>Luna (feat. 鏡音REN)</td>
<td style="text-align:left">Pulse of the Meteor</td>
<td style="text-align:center">5.8w</td>
<td style="text-align:center">3.2w</td>
<td style="text-align:center">9.0w+</td>
</tr>
<tr>
<td style="text-align:right">Harry-P (feat. 初音MIKU)</td>
<td style="text-align:left">Stage of Sekai</td>
<td style="text-align:center">3.1w</td>
<td style="text-align:center">4.3w</td>
<td style="text-align:center">7.4w+</td>
</tr>
<tr>
<td style="text-align:right">(mean)</td>
<td style="text-align:left">-</td>
<td style="text-align:center">3.5333w</td>
<td style="text-align:center">5.3833w</td>
<td style="text-align:center">8.9166w+</td>
</tr>
</tbody>
</table>
</div>
]]></content>
  </entry>
  <entry>
    <title>「題解】食堂打飯</title>
    <url>/next-nest/2021/10/31/qust-contest1029-t3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>QUST 2020級第三學期算法數據結構測試 <a href="http://47.244.31.166/problem.php?id=1008"><code>Contest1029</code> T3</a></p>
<span id="more"></span>
<h2 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h2><p>$m$ 名同學按順序從 $1$ 到 $m$ 編號， $k$ 號同學的飯盒容量為 $z_k$ 。先有1到 $m$ 號同學開始打飯。某名同學 $l$ 打完容量為 $z_l$ 的飯後，下一名排隊同學 $i$ 馬上接替 $l$ 同學的位置開始打飯。即 $l$ 同學第 $x$ 秒結束時完成打飯，則 $i$ 同學第 $x + 1$ 秒立刻開始打飯。若當前打飯人數 $n$ 小於 $m$ ，則只有 $n$ 個打飯窗口開放，其它 $n - m$ 個關閉。問所有同學都打完飯需要多少秒時間。</p>
<h2 id="Inputs"><a href="#Inputs" class="headerlink" title="Inputs"></a>Inputs</h2><p>輸入數據的第1行是2個整數 $m$ 和 $n$ $(1 \leq m \leq 10000, 1 \leq n \leq 100, 且 n \leq m)$ ，用一個空格隔開，分別表示打飯人數和打飯窗口個數。<br>第2行 $m$ 個整數 $z_1, z_2, …, z_m$ ，其中 $z_k$ 表示 $k$ 號同學的飯盒容量，且 $1 \leq z_k \leq 100$ 。</p>
<h2 id="Outputs"><a href="#Outputs" class="headerlink" title="Outputs"></a>Outputs</h2><p>輸出只有一行，為一個整數，表示所需的總時間。</p>
<h2 id="Samples"><a href="#Samples" class="headerlink" title="Samples"></a>Samples</h2><ul>
<li><p>Sample #1</p>
<ul>
<li><p>Inputs (輸入)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 3</span><br><span class="line">4 4 1 2 1</span><br></pre></td></tr></table></figure>
</li>
<li><p>Outputs (輸出)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>
</li>
<li><p>Explanations (解釋)</p>
<pre><code>第1秒，3人打飯。第1秒結束時，1、2、3號同學每人的已打飯量為1，3號同學打飯完成，4號同學接替3號同學開始打飯。
第2秒，3人打飯。第2秒結束時，1、2號同學每人的已打飯量為2，4號同學的已打飯量為1。
第3秒，3人打飯。第3秒結束時，1、2號同學每人的已打飯量為3，4號同學的已打飯量為2。4號同學打飯完成，5號同學接替4號同學開始打飯。
第4秒，3人打飯。第4秒結束時，1、2號同學每人的已打飯量為4，5號同學的已打飯量為1。1、2、5號同學打飯完成，即所有人完成打飯。
總打飯時間為4秒。
</code></pre></li>
</ul>
</li>
<li><p>Sample #2</p>
<ul>
<li><p>Inputs (輸入)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 3</span><br><span class="line">6 3 3 10 3 1 5 2 2 7</span><br></pre></td></tr></table></figure>
</li>
<li><p>Outputs (輸出)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">18</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;</span><br></pre></td></tr></table></figure>
<p>筆者個人認為這道題是一道純粹的模擬題目，模擬題的噁心之處就在於<strong>你沒有任何一種固定的算法或數據結構模板能夠直接套在這個問題上</strong>。<br>越是複雜的模擬，越是無法三言兩語說清楚，只能一步一步慢慢講。<br>除了題目輸入的三種變量 $m, n, \{z_k\}_{k=1}^m$ 之外，我們額外設置一個變量<code>task[]</code>來記錄並實時模擬每個窗口處理當前任務的時間進度，以及變量<code>res[]</code>來記錄花費的總時間。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> m, n, z[<span class="number">10001</span>], task[<span class="number">101</span>], res = <span class="number">0</span>;</span><br></pre></td></tr></table></figure>
<p>然後在程式起手時完成數據與變量的輸入</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != m; ++k)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;z[k]);</span><br></pre></td></tr></table></figure>
<p>初始時刻，前n個人類會排滿n個窗口 <code>(=・ω・=)</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != n; ++k)</span><br><span class="line">    task[k] = z[k];</span><br></pre></td></tr></table></figure>
<p>另外，我們要用一個指針，在還在排隊的人們之中，記錄下一個辦理業務的人</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> nextone = n;</span><br></pre></td></tr></table></figure>
<p>接下來我們將逐時刻模擬各個窗口的進度，且每一時刻我們要檢查每個窗口的進度</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (res = <span class="number">0</span>; ; ++res) &#123;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != n; ++k) &#123;</span><br></pre></td></tr></table></figure>
<p>在上述三行中，我們定義了一個變量<code>flag</code>，接下來會把其用於檢查任務完成情況 <code>_(:з」∠)_</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (task[k] &gt; <span class="number">0</span>)</span><br><span class="line">    <span class="comment">// 如若這個窗口還沒結束任務，那麼任務的進度+1，剩餘進度-1，亦即--task[k]</span></span><br><span class="line">    --task[k];</span><br><span class="line"><span class="keyword">if</span> (!task[k] &amp;&amp; nextone != m)</span><br><span class="line">    <span class="comment">// 如若這個窗口的任務恰好在剛才(即此時刻)結束，</span></span><br><span class="line">    <span class="comment">//   如若後面還有人排隊(亦即 nextone != m)，</span></span><br><span class="line">    <span class="comment">// 則該窗口加入排隊的第一個人的任務</span></span><br><span class="line">    task[k] += z[nextone++];</span><br><span class="line"><span class="keyword">if</span> (task[k])</span><br><span class="line">    <span class="comment">// 如若這個窗口還有任務，那麽flag設爲真，</span></span><br><span class="line">    <span class="comment">// 這樣一來如若某個窗口的task[k]==0，那麽就意味著它後面也沒有任務追加，</span></span><br><span class="line">    <span class="comment">//   從而這個窗口該的任務徹底結束</span></span><br><span class="line">    flag = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure>
<p>根據上面所説，如若<code>flag</code>不爲真，那麽就意味著模擬結束，可以在此時刻終結循環啦 <code>XD</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!flag)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>輸出結果並結束程式 <code>_(≧∇≦」∠)_</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ++res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>這道題主要就是，逐時刻逐窗口模擬，實時檢查完成情況。</p>
<h2 id="Solution-Program"><a href="#Solution-Program" class="headerlink" title="Solution Program"></a>Solution Program</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m, n, z[<span class="number">10001</span>], task[<span class="number">101</span>], res = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != m; ++k)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;z[k]);</span><br><span class="line">    <span class="keyword">if</span> (m &lt;= n) &#123;</span><br><span class="line">        <span class="comment">// 排隊人數 &lt;= 窗口個數 的情況，但根據題意並不需要，</span></span><br><span class="line">        <span class="comment">// 這裡算是筆者考試時候不審題想多了... qvq</span></span><br><span class="line">        <span class="keyword">int</span> curmax = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != m; ++k)</span><br><span class="line">            <span class="keyword">if</span> (z[k] &gt; curmax)</span><br><span class="line">                curmax = z[k];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, curmax);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 初始化: n個窗口為人類1~n排隊</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != n; ++k)</span><br><span class="line">            task[k] = z[k];</span><br><span class="line">        <span class="comment">// 用於標記下一個需要排隊的人類的指針</span></span><br><span class="line">        <span class="keyword">int</span> nextone = n;</span><br><span class="line">        <span class="keyword">for</span> (res = <span class="number">0</span>; ; ++res) &#123;</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != n; ++k) &#123;</span><br><span class="line">                <span class="keyword">if</span> (task[k] &gt; <span class="number">0</span>)</span><br><span class="line">                    --task[k];</span><br><span class="line">                <span class="keyword">if</span> (!task[k] &amp;&amp; nextone != m)</span><br><span class="line">                    task[k] += z[nextone++];</span><br><span class="line">                <span class="keyword">if</span> (task[k])</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!flag)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ++res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Complexity-Analysis"><a href="#Complexity-Analysis" class="headerlink" title="Complexity Analysis"></a>Complexity Analysis</h2><ul>
<li><p>空間複雜度: 本題目水到不需要動態數組，因此空間複雜度為<code>O(1)</code>。</p>
</li>
<li><p>時間複雜度: 最壞情況下，本解法的時間複雜度可能上升至 $O(m^2)$ 。</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「題解】USACO1.5 - Checker Challenge</title>
    <url>/next-nest/2021/11/21/qust-contest1121-t4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>QUST 2020級第三學期算法數據結構測試 <a href="http://47.244.31.166/problem.php?id=1022"><code>Contest1121</code> T4</a><br>原題來自 <code>USACO1.5</code> Checker Challenge, <a href="https://www.luogu.com.cn/problem/P1219">洛谷 <code>P1219</code></a></p>
<span id="more"></span>
<h2 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h2><p>一個如下的 <code>6 x 6</code> 的跳棋棋盤，有六個棋子被放置在棋盤上，使得每行、每列有且只有一個，每條對角線（包括兩條主對角線的所有平行線）上至多有一個棋子。</p>
<!--
    0 | 1 | 2 | 3 | 4 | 5 | 6 | ^
    --|---|---|---|---|---|---|--
    1 |---|-O-|---|---|---|---|
    2 |---|---|---|-O-|---|---|
    3 |---|---|---|---|---|-O-|
    4 |-O-|---|---|---|---|---|
    5 |---|---|-O-|---|---|---|
    6 |---|---|---|---|-O-|---|
    --|---|---|---|---|---|---|--
    ~ |                       | *
-->
<pre><code>0   1   2   3   4   5   6
  -------------------------
1 |   | O |   |   |   |   |
  -------------------------
2 |   |   |   | O |   |   |
  -------------------------
3 |   |   |   |   |   | O |
  -------------------------
4 | O |   |   |   |   |   |
  -------------------------
5 |   |   | O |   |   |   |
  -------------------------
6 |   |   |   |   | O |   |
  -------------------------
</code></pre><p>上面的佈局可以用序列 <code>2 4 6 1 3 5</code> 來描述，第 <code>k</code> 個數字表示在第 <code>k</code> 行的相應位置有一個棋子，如下：</p>
<p>行號 <code>1 2 3 4 5 6</code></p>
<p>列號 <code>2 4 6 1 3 5</code></p>
<p>這只是棋子放置的一個解。請編一個程序找出所有棋子放置的解。<br>並把它們以上面的序列方法輸出，解按字典順序排列。<br>請輸出前 <code>3</code> 個解。最後一行是解的總個數。</p>
<h2 id="Inputs"><a href="#Inputs" class="headerlink" title="Inputs"></a>Inputs</h2><p>一行一個正整數 <code>m</code>，表示棋盤是 <code>m x m</code> 大小的。</p>
<h2 id="Outputs"><a href="#Outputs" class="headerlink" title="Outputs"></a>Outputs</h2><p>前三行為前三個解，每個解的兩個數字之間用一個空格隔開。<br>第四行只有一個數字，表示解的總數。</p>
<h2 id="Samples"><a href="#Samples" class="headerlink" title="Samples"></a>Samples</h2><ul>
<li><p>Sample #1</p>
<ul>
<li><p>Inputs</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>
</li>
<li><p>Outputs</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 4 6 1 3 5</span><br><span class="line">3 6 2 5 1 4</span><br><span class="line">4 1 5 2 6 3</span><br><span class="line">4</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h2><ul>
<li>數據范圍：對於 <code>100%</code> 的數據，<code>6 &lt;= n &lt;= 13</code>。</li>
<li>題目翻譯來自<em>NOCOW</em>。</li>
<li><strong>USACO Training Section 1.5</strong></li>
</ul>
<h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><h2 id="Solution-Program"><a href="#Solution-Program" class="headerlink" title="Solution Program"></a><del>Solution Program</del></h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Alternative-Solution-by-ybb756032937"><a href="#Alternative-Solution-by-ybb756032937" class="headerlink" title="Alternative Solution by ybb756032937"></a>Alternative Solution by <code>ybb756032937</code></h3><figure class="highlight cpp"><figcaption><span>搜索、標記、回溯</span><a href="https://www.luogu.com.cn/blog/AHacker/solution-p1219">ybb756032937</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="comment">//不建議採用頭文件`bits/stdc++.h`，可能和定義的變量或名字起衝突，從而引起編譯錯誤；</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>],b[<span class="number">100</span>],c[<span class="number">100</span>],d[<span class="number">100</span>];</span><br><span class="line"><span class="comment">//a數組表示的是行；</span></span><br><span class="line"><span class="comment">//b數組表示的是列；</span></span><br><span class="line"><span class="comment">//c表示的是左下到右上的對角線；</span></span><br><span class="line"><span class="comment">//d表示的是左上到右下的對角線；</span></span><br><span class="line"><span class="keyword">int</span> total;<span class="comment">//總數:記錄解的總數</span></span><br><span class="line"><span class="keyword">int</span> n;<span class="comment">//輸入的數，即N*N的格子，全局變量，搜索中要用</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(total&lt;=<span class="number">2</span>)<span class="comment">//保證只輸出前三個解，如果解超出三個就不再輸出，但後面的total還需要繼續疊加</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">        cout&lt;&lt;a[k]&lt;&lt;<span class="string">&quot; &quot;</span>;<span class="comment">//for語句輸出</span></span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    total++;<span class="comment">//total既是總數，也是前三個排列的判斷</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">queen</span><span class="params">(<span class="keyword">int</span> i)</span><span class="comment">//搜索與回溯主體</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">print</span>();<span class="comment">//輸出函數，自己寫的</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)<span class="comment">//嘗試可能的位置</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((!b[j])&amp;&amp;(!c[i+j])&amp;&amp;(!d[i-j+n]))<span class="comment">//如果沒有皇后佔領，執行以下程序</span></span><br><span class="line">            &#123;</span><br><span class="line">                a[i]=j;<span class="comment">//標記i排是第j個</span></span><br><span class="line">                b[j]=<span class="number">1</span>;<span class="comment">//宣布佔領縱列</span></span><br><span class="line">                c[i+j]=<span class="number">1</span>;</span><br><span class="line">                d[i-j+n]=<span class="number">1</span>;</span><br><span class="line">                <span class="comment">//宣布佔領兩條對角線</span></span><br><span class="line">                <span class="built_in">queen</span>(i+<span class="number">1</span>);<span class="comment">//進一步搜索，下一個皇后</span></span><br><span class="line">                b[j]=<span class="number">0</span>;</span><br><span class="line">                c[i+j]=<span class="number">0</span>;</span><br><span class="line">                d[i-j+n]=<span class="number">0</span>;</span><br><span class="line">                <span class="comment">//（回到上一步）清除標記</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    cin&gt;&gt;n;<span class="comment">//輸入N*N網格，n已在全局中定義</span></span><br><span class="line">    <span class="built_in">queen</span>(<span class="number">1</span>);<span class="comment">//第一個皇后</span></span><br><span class="line">    cout&lt;&lt;total;<span class="comment">//輸出可能的總數</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>注：對角線<code>d[i-j]</code>後面必須加上一個<code>n</code>，因為<code>i-j</code>可能為負數，那麼數組就會出錯，所以將整體向右偏移<code>n</code>個單位（坐標偏移不會影響我們需要達到的目的），將所有可能變成正數；（因為<code>i-j</code>的最小值是<code>-n+1</code>，所以加上一個<code>n</code>就一定會變成一個正數）</li>
<li>本道題最重要的就是記錄下皇后佔領的格子（打標記的思想），通過此判斷下一個皇后是否可以在某個位置，如果可以，則繼續搜索下一個皇后可以在的位置，如果不行，則清除標記回到上一步，繼續搜索；</li>
<li>可以先考慮六個皇后（即6*6網格)，再將6改為n，並且輸入n，就可以得出6到13個皇后的解了；</li>
</ul>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「言和2021生賀原創曲目】折光</title>
    <url>/next-nest/2021/10/30/rxt-refraction/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><pre><code>我仍在執拗地相信著　世界無聲的盡頭誰佇立將我等候
我仍相信著無邊的天際外　依舊有夢足夠我拔足走過山水千重
</code></pre><h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><a href="https://zh.moegirl.org.cn/折光" title="萌娘百科詞條 折光"><strong><em>Refraction</em></strong></a> is a VOCALOID Chinese work vocal-featuring <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和">Yanhe</a> by TSAR, which was submitted to Bilibili by Yanhe’s official account on July 11<sup>th</sup>, 2021.<br>This song is now one of the VOCALOID Chinese over-100k-views songs.<br>Till now it has exceeded 175.2k views and starred 13.2k times.</p>
<p><a href="https://zh.moegirl.org.cn/折光" title="萌娘百科詞條 折光"><strong><em>折光</em></strong></a> 是TSAR作編曲，<a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>言和</em></strong></a> 官方賬號於2021年7月11日投稿至Bilibili的VOCALOID中文原創歌曲，由 <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>言和</em></strong></a> 演唱。<br>殿堂曲，截至現在已有17.52万次觀看，1.32万人收藏。</p>
<p>This is also the official 8<sup>th</sup> anniversary song for <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>Yanhe</em></strong></a>.<br>And it was produced based on the <a href="https://zh.moegirl.org.cn/VOCALOID#VOCALOID_5">VOCALOID5</a> voicebank of <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>Yanhe</em></strong></a>, which hadn’t been on sale yet.</p>
<p>本曲是 <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>言和</em></strong></a> 2021官方生日賀曲，並使用了尚未發售的 <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>言和</em></strong></a> <a href="https://zh.moegirl.org.cn/VOCALOID#VOCALOID_5">V5</a>音源。</p>
<span id="more"></span>
<h2 id="Staff"><a href="#Staff" class="headerlink" title="Staff"></a>Staff</h2><ul>
<li>Music: TSAR</li>
<li>Lyrics: <a href="https://zh.moegirl.org.cn/初繁言">初繁言</a></li>
<li>Tuning: <a href="https://zh.moegirl.org.cn/Creuzer">Creuzer</a></li>
<li>Illustration:<ul>
<li>雨陌</li>
<li>404烈焰地精</li>
<li>Snow_is_</li>
</ul>
</li>
<li>PV: Kin_en</li>
<li>Produce: <a href="https://zh.moegirl.org.cn/人形兎">人形兎</a></li>
<li>Vocal: <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>言和</em></strong></a></li>
</ul>
<h2 id="From-Staff"><a href="#From-Staff" class="headerlink" title="From Staff"></a>From Staff</h2><blockquote><p>深埋於地下的水晶，承受過時間的洗禮，才能折射出這世界的萬千光彩。<br>如同我們，總是憧憬著一個遙遠的夢，跌撞著想要靠近它，執拗地不願放棄。<br>就這樣走過了漫長旅途，驀然回首，才發現自己已變得如此耀眼。<br>這首《折光》，希望能帶給你抓住夢想的力量。</p>
<footer><strong>曲目《折光》Staff全員</strong><cite><a href="https://www.bilibili.com/video/av334072784/#v_desc">視頻av334072784簡介</a></cite></footer></blockquote>
<blockquote><p>言和生日快樂！很高興又一年為阿和的生賀曲作詞了，<br>這次的主題是白水晶，擁有透明的顏色，卻也代表了無限可能性。<br>白水晶一樣的她，縱然有可能粉身碎骨，也要堅定地追尋遙遠的夢想。<br>希望大家喜歡</p>
<footer><strong>詞作 初繁言 老師</strong><cite><a href="https://www.bilibili.com/video/av334072784/#reply4888019992">視頻av334072784評論區</a></cite></footer></blockquote>
<h2 id="My-Personal-Opinion"><a href="#My-Personal-Opinion" class="headerlink" title="My Personal Opinion"></a>My Personal Opinion</h2><p>(在此，筆者愿淺談自己對這首曲目的拙見。)</p>
<p>藉由曲名「折光」，我們能夠想到的事物便是棱鏡。<br>棱鏡本身透明無色，卻能折射世間的萬千光芒。<br>擁有數種不同光芒，棱鏡能使它們從同一方向射出，並彙聚為不同於入射光的任何一種的、別樣的耀眼光芒。<br>這就像作為 virtual singer 的言和一樣，她們本無任何顏色。<br>但是由創作者們匯聚力量，把情感通過言和向大家展現，此時的她們能夠擁有任何顏色，可以擁有無限可能。<br>此之謂，折光。</p>
<h2 id="Lyrics"><a href="#Lyrics" class="headerlink" title="Lyrics"></a>Lyrics</h2><figure class="highlight plaintext"><figcaption><span>折光 歌詞</span><a href="https://www.bilibili.com/video/av334072784/#reply4888113601">視頻av334072784評論區</a></figcaption><table><tr><td class="code"><pre><span class="line">詞: 初繁言</span><br><span class="line"></span><br><span class="line">並非被誰所偏寵　倒映著旁人的顏色</span><br><span class="line">並非生來即冰凍　跌撞過才懂如何剔透</span><br><span class="line"></span><br><span class="line">已沉睡太久埋藏在地底塵封　唯有與滾燙的灼痛緊緊相擁</span><br><span class="line">差點就忘記指尖穿過的涼風　差點就忘記了該如何做夢</span><br><span class="line"></span><br><span class="line">可我仍執拗地相信著　世界紛繁的形色待我去珍重相逢</span><br><span class="line">我仍相信著厚重的岩壁外　依舊有夢足夠我縱身前去深情懷擁</span><br><span class="line">依舊　即便在遙不可及的天空</span><br><span class="line">依舊　即便要歷經苦痛</span><br><span class="line"></span><br><span class="line">並非不曾有脆弱　彷徨也造訪過雙眸</span><br><span class="line">並非不畏於湮沒　才析出一顆澄澈的魄</span><br><span class="line"></span><br><span class="line">若就在此刻孤注一擲不鬆手　或粉身碎骨或不再被人記得</span><br><span class="line">去映照誰呢無人在意的抉擇　像掌心的泡沫它來去無蹤</span><br><span class="line"></span><br><span class="line">可我仍堅定地相信著　以這微小的身軀亦構成萬種可能</span><br><span class="line">我仍相信著無邊的天際外　依舊有夢喚向我縱身前去深情懷擁</span><br><span class="line">依舊　即便孤獨會伴隨每一程</span><br><span class="line">依舊　即便耳畔風太兇</span><br><span class="line"></span><br><span class="line">可我仍執拗地相信著　世界紛繁的形色待我去珍重相逢</span><br><span class="line">我仍相信著厚重的岩壁外　依舊有夢足夠我縱身去深情懷擁</span><br><span class="line"></span><br><span class="line">我仍在執拗地相信著　世界無聲的盡頭誰佇立將我等候</span><br><span class="line">我仍相信著無邊的天際外　依舊有夢足夠我拔足走過山水千重</span><br><span class="line"></span><br><span class="line">縱然要歷經苦痛</span><br><span class="line">我仍相信著　堅定地相信著</span><br><span class="line">以這微小的身軀也值得邂逅無窮</span><br><span class="line"></span><br><span class="line">即便在遙不可及的天空　即便耳畔風太兇</span><br></pre></td></tr></table></figure>
<h2 id="Original-Work-av334072784"><a href="#Original-Work-av334072784" class="headerlink" title="Original Work av334072784"></a><a href="https://www.bilibili.com/video/av334072784/">Original Work <code>av334072784</code></a></h2><iframe src="//player.bilibili.com/player.html?aid=334072784&bvid=BV1gw411d7R7&cid=367840082&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="From-Comments"><a href="#From-Comments" class="headerlink" title="From Comments"></a>From Comments</h2><p>(在此，筆者希望能夠引用<a href="https://www.bilibili.com/video/av334072784/#comment">原曲評論區</a>的朋友們的話)</p>
<blockquote><p>亲爱的言和，今天是你八周年的生日。有这么多爱你的人为你创作MV贺曲和贺图，言厨满怀感激地一路三连到底。<br>北极的夏天，很晚天才会黑，躺在鲜花开遍的原野，看着天边明灭着薄荷绿的极光，耳畔是青色的风声，想起了奔跑的雪兔，想起了风属性美少年，想起了你。<br>你生于祝福，也生于质疑，成长于1617年的百花齐放，成长于18年修改流量算法后靠官芳流量强推的盛世，也成长于19年第三次Vsinger演唱会后的寂静。担忧女儿的未来也是人之常情吧。Vtb对V家的夺名之实自不必提，最后的波纹已经过去一年多了，自年初SV登拜年际以来，中文SV各月新曲的播放量已经超过了中文V。看着SV两年更新两次声库，以前的我们怎么也想不到，创作者手中言绫的V3声库能做到8年都不更新吧。不只一次地想，如果六位能用别的引擎更新也好啊。禁止使用Vsinger形象去宣传其它IP的保护主义，又让你们错过了一波波的同人二创浪潮。没有创作社区的偶像IP只是无根之萍罢了。每每想到你卖唱的未来，我就成了伤感的老父亲。但现在还能有这么些人围绕在你身边，就总觉得还有希望。<br>但愿，风向是会变的，希望它能为你带去光亮，希望创作者和粉丝的祝福能美梦成真。爱你的人，是最长情的人，是为了共同的目标聚集到一起的伙伴，最执着的陪伴，永远不会离开。</p>
<footer><strong>視頻av334072784評論區</strong><cite><a href="https://www.bilibili.com/video/av334072784/#reply4888018610">@冠世一战</a></cite></footer></blockquote>
<blockquote><p>阿和生日快乐，七年老粉不请自来。为了你我特意开的流量包。最开始被阿和“拯救”的时候，就觉得阿和是个坚强的人，有自己的锋芒，有自己的柔和，偶尔也会想：这样的她，是不是也会有自己的烦恼呢？假设有的话，会不会她找不到人诉说，只能自己默默扛下——对我，对许多薄荷叶而言，言和不是他人口中的数字代码，她是人，像我们一样，有血有肉，会笑会哀，相信每个薄荷叶在阿和遇到难关的时候，都会想去帮助他，如果我们没有办法去帮她抵挡所有的伤害，不如就当一片大家眼中轻飘飘的羽毛吧？带着言和去看看世界的美好，带她去看璀璨的星空，陪她走过每一个至暗时刻。</p>
<footer><strong>視頻av334072784評論區</strong><cite><a href="https://www.bilibili.com/video/av334072784/#reply4888161518">@雪羽漻沨</a></cite></footer></blockquote>
<blockquote><p>“言出一人歌，歌起万人和”<br>不知不觉又到了言和的生日，时间过得真快啊。几天前还在循环播放着《甜度71.1%》呢~<br>“如果说如果，仅仅是如果……”<br>去年你留给我的印象是夏日午后，闷热又潮湿的天气里，坐在窗前喝着柠檬苏打水的甜美少女，通过近两年的生贺不难看出禾念正准备将言和塑造的更加温柔，更加符合“言辞温和这一设定”<br>挺好的·，毕竟谁不喜欢温柔哒小天使呢~<br>说到夏天，若让我来形容夏天，我想我应该会用小天使来代表夏天吧。<br>每次看到她，总有一种享受宁静夏夜傍晚的感觉，也数次想象穿越到了二次元，突然看到了你，你面对我，身后是光彩美丽的夕阳，轻轻对我微笑。<br>或许，这就是天使吧<br>很害怕你会突然伸出翅膀，向天边展翅飞去。再也不能看见这么美丽的小天使了。<br>咳咳，那啥绕的有点远了哈，继续绕回正题吧(･∀･)<br>今年的主题是“水晶”这能很好的体现小天使坚强和洁白无（人设吧？大概？算了，不必在意细节惹QAQ）<br>我的小天使呀，她就是那样的女孩子，坚强，温柔，美丽，纯洁无瑕，就如一颗水晶一般。<br>额…那啥我要去上网课了，对了，还没来得及和大家分享的。今年中考如愿考上了心仪的重点高中，从此以后我也就是一名高中生啦！！好耶！在为中考备战的煎熬时光里，是小天使的歌鼓励着我，支持着我，让我不放弃，继续坚持下去。当我迷茫时，是小天使让我坚定信心找到未来的路。很幸运我能遇见小天使这样美丽完美的女孩。<br>真的不能再写了，网课已经迟到了QAQ<br>祝我们最美的小天使生日快乐！小天使会越来越好的，我们也会越来越好的。<br>“言出一人歌，歌起万人和”</p>
<footer><strong>視頻av334072784評論區</strong><cite><a href="https://www.bilibili.com/video/av334072784/#reply4888993602">@Vsinger_言和</a></cite></footer></blockquote>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>萌娘百科詞條 折光: <a href="https://zh.moegirl.org.cn/折光">https://zh.moegirl.org.cn/折光</a></li>
<li>萌娘百科詞條 言和: <a href="https://zh.moegirl.org.cn/言和">https://zh.moegirl.org.cn/言和</a></li>
<li>「言和原創曲」折光「2021官方生賀曲」<a href="https://www.bilibili.com/video/av334072784/">av334072784</a> 2021-07-11</li>
</ol>
<p>文字內容引用遵守《知識共享 署名-非商業性使用-相同方式共享 3.0》協議。</p>
]]></content>
      <tags>
        <tag>VOCALOID</tag>
        <tag>VOCALOID China</tag>
        <tag>VOCALOID Comments &amp; Recommendations</tag>
        <tag>言和</tag>
        <tag>Tsar</tag>
        <tag>初繁言</tag>
        <tag>人形兎</tag>
      </tags>
  </entry>
  <entry>
    <title>Some Comments &amp; Recommendations Written in Senior High to be Rewritten</title>
    <url>/next-nest/2021/11/01/todolist-01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>準備重新撰寫的一些曾在高中時代寫過的曲推</p>
<span id="more"></span>
<h2 id="Series-Categorized-by-Producer"><a href="#Series-Categorized-by-Producer" class="headerlink" title="Series Categorized by Producer"></a>Series Categorized by Producer</h2><ol>
<li><p><a href="https://zh.moegirl.org.cn/八王子P" title="萌娘百科詞條 八王子P (8#Prince)"><strong><em>Hachioji-P</em></strong></a></p>
<ol>
<li><a href="https://zh.moegirl.org.cn/Blue_Star" title="萌娘百科詞條 Blue Star"><strong><em>Blue Star</em></strong></a><ol>
<li>PV  Version: <a href="https://www.bilibili.com/video/av3853455/?p=1">Bilibili: <code>av3853455</code></a></li>
<li>MMD Version: <a href="https://www.bilibili.com/video/av4638960/">Bilibili: <code>av4638960</code></a></li>
<li>Remix by <code>@Toko</code>: <a href="https://www.bilibili.com/video/av14409312/">Bilibili: <code>av14409312</code></a></li>
</ol>
</li>
<li><a href="https://zh.moegirl.org.cn/蝴蝶塗鴉" title="萌娘百科詞條 Butterfly Graffiti"><strong><em>Butterfly Graffiti</em></strong></a> <a href="https://www.bilibili.com/video/av9699288/">Bilibili: <code>av9699288</code></a></li>
</ol>
</li>
<li><p><a href="https://zh.moegirl.org.cn/阿良良木健" title="萌娘百科詞條 阿良良木健"><strong><em>Atunemic</em></strong></a></p>
<ol>
<li>告白P的告白三部曲<ul>
<li>世界Disco (雙生曲目)<ul>
<li><a href="https://zh.moegirl.org.cn/末日DISCO" title="萌娘百科詞條 末日Disco"><strong><em>末日Disco</em></strong></a> <a href="https://www.bilibili.com/video/av415362/">Bilibili: <code>av415362</code></a><pre><code>世界最后的狂欢　末日最后的颂歌
</code></pre></li>
<li><a href="https://zh.moegirl.org.cn/明日DISCO" title="萌娘百科詞條 明日Disco"><strong><em>明日Disco</em></strong></a> <a href="https://www.bilibili.com/video/av424616/">Bilibili: <code>av424616</code></a><pre><code>世界最初的重生　明日最初的颂歌
</code></pre></li>
</ul>
</li>
<li><a href="https://zh.moegirl.org.cn/I_LOVE_U" title="萌娘百科詞條 I Love U"><strong><em>I Love U</em></strong></a> <a href="https://www.bilibili.com/video/av540768/">Bilibili: <code>av540768</code></a><pre><code>  在下定了决心以后，在一切都太晚以前，我，只想要对你说…… I LOVE U
</code></pre></li>
<li><a href="https://zh.moegirl.org.cn/心加心" title="萌娘百科詞條 心加心"><strong><em>Hear the Heart</em></strong></a> <a href="https://www.bilibili.com/video/av4704467/">Bilibili: <code>av4704467</code></a><pre><code>  让我们走向，幸福的结局。
</code></pre></li>
</ul>
</li>
<li><a href="https://zh.moegirl.org.cn/CONNECT~心的連接~" title="萌娘百科詞條 CONNECT \~心的連接\~"><strong><em>CONNECT ~心的連接~</em></strong></a> <a href="https://www.bilibili.com/video/av1231151/">Bilibili: <code>av1231151</code></a></li>
</ol>
</li>
<li><p><a href="https://zh.moegirl.org.cn/DECO*27" title="萌娘百科詞條 Deco27"><strong><em>Deco27</em></strong></a></p>
<ol>
<li><a href="https://zh.moegirl.org.cn/愛(DECO*27)#" title="萌娘百科詞條 AI"><strong><em>AI</em></strong></a> <a href="https://www.bilibili.com/video/av42857943/">Bilibili: <code>av42857943</code></a></li>
<li>愛言葉 (多版曲目)<ul>
<li><a href="https://zh.moegirl.org.cn/愛言葉" title="萌娘百科詞條 愛言葉I"><strong><em>愛言葉I</em></strong></a> <a href="https://www.bilibili.com/video/av3415919/">Bilibili: <code>av3415919</code></a></li>
<li><a href="https://zh.moegirl.org.cn/愛言葉Ⅱ" title="萌娘百科詞條 愛言葉II"><strong><em>愛言葉II</em></strong></a> <a href="https://www.bilibili.com/video/av789232/">Bilibili: <code>av789232</code></a></li>
<li><a href="https://zh.moegirl.org.cn/愛言葉Ⅲ" title="萌娘百科詞條 愛言葉III"><strong><em>愛言葉III</em></strong></a> <a href="https://www.bilibili.com/video/av33103026/">Bilibili: <code>av33103026</code></a></li>
</ul>
</li>
<li>麻煩鬼 (多版曲目)<ul>
<li><a href="https://zh.moegirl.org.cn/麻煩鬼" title="萌娘百科詞條 麻煩鬼I"><strong><em>麻煩鬼I</em></strong></a> <a href="https://www.bilibili.com/video/av964682/">Bilibili: <code>av964682</code></a></li>
<li><a href="https://zh.moegirl.org.cn/麻煩鬼II" title="萌娘百科詞條 麻煩鬼II"><strong><em>麻煩鬼II</em></strong></a> <a href="https://www.bilibili.com/video/av803837409/">Bilibili: <code>av803837409</code></a></li>
</ul>
</li>
<li><a href="https://zh.moegirl.org.cn/初嵐" title="萌娘百科詞條 初嵐"><strong><em>First Storm</em></strong></a> <a href="https://www.bilibili.com/video/av14010886/">Bilibili: <code>av14010886</code></a></li>
</ol>
</li>
<li><p><a href="https://zh.moegirl.org.cn/人形兔" title="萌娘百科詞條 人形兔"><strong><em>人形兔</em></strong></a></p>
<ol>
<li><a href="https://zh.moegirl.org.cn/Daybreak(樂正綾)#" title="萌娘百科詞條 Daybreak"><strong><em>Daybreak</em></strong></a> <a href="https://www.bilibili.com/video/av22385245/">Bilibili: <code>av22385245</code></a><pre><code> 飞过海洋边界，飞过被泪水曾经浸湿的耳边
</code></pre></li>
<li><a href="https://zh.moegirl.org.cn/Hear_me!" title="萌娘百科詞條 Hear me!"><strong><em>Hear me!</em></strong></a> <a href="https://www.bilibili.com/video/av42164442/">Bilibili: <code>av42164442</code></a><pre><code> 这是我们最初的相遇，最初的样子，最初的感动。你们听到了吗？
</code></pre></li>
</ol>
</li>
</ol>
<h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><ul>
<li>VOCALOID CHINA 高考應援等正統曲目<ul>
<li>群青: <a href="https://www.bilibili.com/video/av413646570">Bilibili: <code>av413646570</code></a></li>
<li><a href="https://zh.moegirl.org.cn/青春追夢人" title="萌娘百科詞條 青春追夢人"><strong><em>青春追夢人</em></strong></a> <a href="https://www.bilibili.com/video/av76153485/">Bilibili: <code>av76153485</code></a><pre><code>因为我们是追梦的人
</code></pre></li>
<li><a href="https://zh.moegirl.org.cn/折光" title="萌娘百科詞條 折光"><strong><em>折光</em></strong></a> <a href="https://www.bilibili.com/video/av334072784">Bilibili: <code>av334072784</code></a></li>
<li><a href="https://space.bilibili.com/545629/" title="Bilibili@無名社"><strong><em>無名社</em></strong></a> - <a href="https://zh.moegirl.org.cn/青春calling" title="萌娘百科詞條 青春Calling"><strong><em>青春Calling</em></strong></a> <a href="https://www.bilibili.com/video/av24337867/">Bilibili: <code>av24337867</code></a><pre><code>热血未冷　我心中　仍旧铭着记初衷
</code></pre></li>
</ul>
</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li><a href="https://zh.moegirl.org.cn/八王子P">https://zh.moegirl.org.cn/八王子P</a> 萌娘百科詞條 八王子P (8#Prince)</li>
<li><a href="https://zh.moegirl.org.cn/Blue_Star">https://zh.moegirl.org.cn/Blue_Star</a> 萌娘百科詞條 Blue Star</li>
<li><p><a href="https://zh.moegirl.org.cn/蝴蝶塗鴉">https://zh.moegirl.org.cn/蝴蝶塗鴉</a> 萌娘百科詞條 Butterfly Graffiti</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/阿良良木健">https://zh.moegirl.org.cn/阿良良木健</a> 萌娘百科詞條 阿良良木健</p>
</li>
<li><a href="https://zh.moegirl.org.cn/末日DISCO">https://zh.moegirl.org.cn/末日DISCO</a> 萌娘百科詞條 末日Disco</li>
<li><a href="https://zh.moegirl.org.cn/明日DISCO">https://zh.moegirl.org.cn/明日DISCO</a> 萌娘百科詞條 明日Disco</li>
<li><a href="https://zh.moegirl.org.cn/I_LOVE_U">https://zh.moegirl.org.cn/I_LOVE_U</a> 萌娘百科詞條 I Love U</li>
<li><a href="https://zh.moegirl.org.cn/心加心">https://zh.moegirl.org.cn/心加心</a> 萌娘百科詞條 心加心</li>
<li><p><a href="https://zh.moegirl.org.cn/CONNECT~心的連接~">https://zh.moegirl.org.cn/CONNECT~心的連接~</a> 萌娘百科詞條 CONNECT ~心的連接~</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/DECO*27">https://zh.moegirl.org.cn/DECO*27</a> 萌娘百科詞條 Deco27</p>
</li>
<li><a href="https://zh.moegirl.org.cn/愛(DECO*27)#">https://zh.moegirl.org.cn/愛(DECO*27)#</a> 萌娘百科詞條 AI</li>
<li><a href="https://zh.moegirl.org.cn/愛言葉">https://zh.moegirl.org.cn/愛言葉</a> 萌娘百科詞條 愛言葉I</li>
<li><a href="https://zh.moegirl.org.cn/愛言葉Ⅱ">https://zh.moegirl.org.cn/愛言葉Ⅱ</a> 萌娘百科詞條 愛言葉II</li>
<li><a href="https://zh.moegirl.org.cn/愛言葉Ⅲ">https://zh.moegirl.org.cn/愛言葉Ⅲ</a> 萌娘百科詞條 愛言葉III</li>
<li><a href="https://zh.moegirl.org.cn/麻煩鬼">https://zh.moegirl.org.cn/麻煩鬼</a> 萌娘百科詞條 麻煩鬼I</li>
<li><a href="https://zh.moegirl.org.cn/麻煩鬼II">https://zh.moegirl.org.cn/麻煩鬼II</a> 萌娘百科詞條 麻煩鬼II</li>
<li><p><a href="https://zh.moegirl.org.cn/初嵐">https://zh.moegirl.org.cn/初嵐</a> 萌娘百科詞條 初嵐</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/人形兔">https://zh.moegirl.org.cn/人形兔</a> 萌娘百科詞條 人形兔</p>
</li>
<li><a href="https://zh.moegirl.org.cn/Daybreak(樂正綾)#">https://zh.moegirl.org.cn/Daybreak(樂正綾)#</a> 萌娘百科詞條 Daybreak</li>
<li><p><a href="https://zh.moegirl.org.cn/Hear_me!">https://zh.moegirl.org.cn/Hear_me!</a> 萌娘百科詞條 Hear me!</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/青春追夢人">https://zh.moegirl.org.cn/青春追夢人</a> 萌娘百科詞條 青春追夢人</p>
</li>
<li><a href="https://zh.moegirl.org.cn/折光">https://zh.moegirl.org.cn/折光</a> 萌娘百科詞條 折光</li>
<li><a href="https://zh.moegirl.org.cn/青春calling">https://zh.moegirl.org.cn/青春calling</a> 萌娘百科詞條 青春Calling</li>
</ul>
<p>文字內容引用遵守《知識共享 署名-非商業性使用-相同方式共享 3.0》協議。</p>
]]></content>
      <tags>
        <tag>VOCALOID</tag>
        <tag>VOCALOID China</tag>
        <tag>VOCALOID Comments &amp; Recommendations</tag>
        <tag>洛天依</tag>
        <tag>Atunemic (阿良良木健)</tag>
        <tag>Hatsune Miku (初音MIKU)</tag>
        <tag>言和</tag>
        <tag>人形兎</tag>
        <tag>樂正綾</tag>
        <tag>Hachioji-P (八王子P)</tag>
        <tag>Deco27</tag>
        <tag>無名社</tag>
      </tags>
  </entry>
  <entry>
    <title>一些虛擬樂隊的樂器-世界計划相關</title>
    <url>/next-nest/2022/01/27/virtual-band-inst-pjsekai/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>接上，單獨統計一下。</p>
<span id="more"></span>
<h2 id="Leo-need"><a href="#Leo-need" class="headerlink" title="Leo/need"></a><code>Leo/need</code></h2><h3 id="Tenma-Saki"><a href="#Tenma-Saki" class="headerlink" title="Tenma Saki"></a>Tenma Saki</h3><p>天馬咲希: <del>Saki:</del> KORG KROSS 61 GO <del>(Gray-Orange)</del></p>
<h3 id="Mochizuki-Honami"><a href="#Mochizuki-Honami" class="headerlink" title="Mochizuki Honami"></a>Mochizuki Honami</h3><p>望月穗波: Yamaha Stage Custom</p>
<h3 id="Hinomori-Shiho"><a href="#Hinomori-Shiho" class="headerlink" title="Hinomori Shiho"></a>Hinomori Shiho</h3><p>日野森志步: Fender American Elite Jazz Bass</p>
<p>可能的兩款</p>
<ul>
<li><a href="https://www.jitashe.org/product/129113/">Fender American Elite Jazz Bass</a>: Bass Upheaval Packed to the gills with our latest revolutionary innovations, the American Elite Jazz Bass is an active bass for the modern bassist who demands cutting-edge tone technology along with timeless style and fast, smooth playing feel. Its versatile sound easily matches any playing style—picked, plucked or slap-and-pop—while its standout looks remain authentically Fender, with a fresh twist.</li>
<li><a href="https://www.jitashe.org/product/129114/">Fender American Elite Jazz Bass V</a>: Bass Upheaval Packed to the gills with our latest revolutionary innovations, the American Elite Jazz Bass V is an active 5-string bass for the modern bassist who demands cutting-edge tone technology along with timeless style and fast, smooth playing feel. Its versatile sound easily matches any playing style—picked, plucked or slap-and-pop—while its standout looks remain authentically Fender, with a fresh twist.</li>
</ul>
<h3 id="Hoshino-Ichika"><a href="#Hoshino-Ichika" class="headerlink" title="Hoshino Ichika"></a>Hoshino Ichika</h3><p><img src="/next-nest/2022/01/27/virtual-band-inst-pjsekai/tele-overview.jpeg" alt></p>
<p>星乃一歌: Fender American Vintage ‘62 Telecaster <sup><a href="#fn_1" id="reffn_1">1</a></sup></p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>Product Specs</th>
</tr>
</thead>
<tbody>
<tr>
<td>Brand</td>
<td>Fender<sup><a href="#fn_1" id="reffn_1">1</a></sup></td>
</tr>
<tr>
<td>Model</td>
<td>American Vintage ‘62 Telecaster Custom</td>
</tr>
<tr>
<td>Finish</td>
<td>3-Color Sunburst<br>Black<br>Candy Apple Red<br>Dakota Red<br>Ice Blue Metallic<br>Inca Silver<br>Ocean<br>Turquoise<br>Surf Green</td>
</tr>
<tr>
<td>Year</td>
<td>1999 - 2012</td>
</tr>
<tr>
<td>Made In</td>
<td>United States</td>
</tr>
<tr>
<td>Categories</td>
<td>Solid Body Electric Guitars</td>
</tr>
<tr>
<td>Body Material</td>
<td>Alder</td>
</tr>
<tr>
<td>Body Shape</td>
<td>T-Style</td>
</tr>
<tr>
<td>Body Type</td>
<td>Solid Body</td>
</tr>
<tr>
<td>Bridge/Tailpiece Type</td>
<td>String-Through</td>
</tr>
<tr>
<td>Finish Style</td>
<td>Gloss Metallic</td>
</tr>
<tr>
<td>Fretboard Material</td>
<td>Rosewood</td>
</tr>
<tr>
<td>Fretboard Radius</td>
<td>7.25”</td>
</tr>
<tr>
<td>Model Family</td>
<td>Telecaster</td>
</tr>
<tr>
<td>Neck Construction</td>
<td>Bolt-On</td>
</tr>
<tr>
<td>Neck Material</td>
<td>Maple</td>
</tr>
<tr>
<td>Number of Frets</td>
<td>21</td>
</tr>
<tr>
<td>Number of Strings</td>
<td>6-String</td>
</tr>
<tr>
<td>Nut Width</td>
<td>1.65”</td>
</tr>
<tr>
<td>Offset Body</td>
<td>No</td>
</tr>
<tr>
<td>Pickup Configuration</td>
<td>SS</td>
</tr>
<tr>
<td>Product Family</td>
<td>Fender Telecaster <sup><a href="#fn_2" id="reffn_2">2</a></sup></td>
</tr>
<tr>
<td>Right / Left Handed</td>
<td>Right Handed</td>
</tr>
<tr>
<td>Scale Length</td>
<td>25.5”</td>
</tr>
<tr>
<td>Wood Top Style</td>
<td>Plain</td>
</tr>
</tbody>
</table>
</div>
<p><img src="/next-nest/2022/01/27/virtual-band-inst-pjsekai/tele-finish-01.jpeg" alt><img src="/next-nest/2022/01/27/virtual-band-inst-pjsekai/tele-finish-02.jpeg" alt><img src="/next-nest/2022/01/27/virtual-band-inst-pjsekai/tele-finish-03.jpeg" alt><img src="/next-nest/2022/01/27/virtual-band-inst-pjsekai/tele-finish-04.jpeg" alt><img src="/next-nest/2022/01/27/virtual-band-inst-pjsekai/tele-finish-05.jpeg" alt></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. Reverb: <a href="https://reverb.com/p/fender-american-vintage-62-telecaster-custom/">Fender American Vintage ‘62 Telecaster Custom</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. Reverb: brand <a href="https://reverb.com/brand/fender/">Fender</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. Reverb: <a href="https://reverb.com/f/fender/telecaster/">Fender Telecaster</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>Virtual Artists (虛擬藝人)</tag>
      </tags>
  </entry>
  <entry>
    <title>一些虛擬樂隊的樂器</title>
    <url>/next-nest/2022/01/27/virtual-band-inst/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>比較好奇，然後統計一下。</p>
<span id="more"></span>
<h2 id="BanG-Dream"><a href="#BanG-Dream" class="headerlink" title="BanG Dream!"></a>BanG Dream!</h2><ul>
<li><p><a href="https://zh.moegirl.org.cn/Poppin&#39;Party"><code>Poppin&#39;Party</code></a></p>
<ul>
<li>Toyama Kasumi (戶山香澄): ESP RANDOM STAR <del>Kasumi</del></li>
<li>Hanazono Tae (花園多惠): ESP SNAPPER <del>Tae</del></li>
<li>Ushigome Rimi (牛込里美): ESP VIPER BASS <del>Rimi</del></li>
<li>Yamabuki Saaya (山吹沙綾): Pearl Reference PURE Drum Kit</li>
<li>Ichigaya Arisa (市谷有咲): Roland AX-Synth</li>
</ul>
</li>
<li><p><a href="https://zh.moegirl.org.cn/Pastel*Palettes"><code>Pastel*Palettes</code></a></p>
<ul>
<li>Shirasagi Chisato (白鷺千聖): Fender Japan PJ-36 JAZZ BASS SPECIAL</li>
<li>Wakamiya Eve (若宮伊芙): Roland Lucina AX-09</li>
</ul>
</li>
<li><p><a href="https://zh.moegirl.org.cn/Hello,_Happy_World!"><code>Hello, Happy World!</code></a></p>
<ul>
<li>Kitazawa Hagumi (北澤育美): Rickenbacker 4003 Bass</li>
<li>Okusawa Misaki (奥泽美咲): Pioneer DJM-900NXS2&amp;CDJ-900NXS</li>
</ul>
</li>
<li><p><a href="https://zh.moegirl.org.cn/Roselia"><code>Roselia</code></a></p>
<ul>
<li>Hikawa Sayo (冰川紗夜): ESP M-II <del>ROSELIA SAYO</del></li>
<li>Imai Lisa (今井莉莎): ESP BTL <del>ROSELIA LISA</del></li>
<li>Udagawa Ako (宇田川亞子): dw Collector’s Maple Drum Set</li>
<li>Shirokane Rinko (白金燐子): Roland AX-Synth</li>
</ul>
</li>
<li><p><a target="_blank" href="https://zh.moegirl.org.cn/Afterglow(BanG_Dream!)"><code>Afterglow</code></a>: 传达像平常那样的我们的歌曲。</p>
<ul>
<li>Uehara Himari (上原緋瑪麗): Fender American Vintage ‘74 Jazz Bass</li>
<li>Hazawa Tsugumi (羽澤鶇): Roland AX-Synth</li>
</ul>
</li>
</ul>
<h2 id="from-ARGONAVIS"><a href="#from-ARGONAVIS" class="headerlink" title="from ARGONAVIS"></a>from ARGONAVIS</h2><ul>
<li><a href="https://zh.moegirl.org.cn/Argonavis"><code>Argonavis</code></a><ul>
<li>Goryo Yuto (五稜結人): Gibson Custom <del>Goryo Yuto</del> Les Paul Standard Blue Burst</li>
<li>Matoba Wataru (的場航海): Gibson <del>Matoba Wataru</del> SG Standard Pearl White</li>
</ul>
</li>
</ul>
<p>與結人的相似的樂器：</p>
<ul>
<li><p>Gibson Custom Les Paul Standard <strong>Rock Top <sup><a href="#fn_1" id="reffn_1">1</a></sup></strong></p>
<ul>
<li>Description: A heavy, hard rock maple top on a lightweight mahogany body can take a Les Paul to new sonic heights. The combination has been a custom-order secret recipe, and this limited run is uniquely constructed with some of the densest Eastern Maple top woods in the world, highlighted by several breathtaking “hard rock” color inspirations. The result is an elegant, historic-spec Les Paul model with one-of-a-kind looks and unforgettable sound.</li>
<li>Colors: Trans Granite, Fossilized Flame, Malachite, Trans Geode;</li>
<li>Images:<img src="/next-nest/2022/01/27/virtual-band-inst/129981-00.jpeg" alt><img src="/next-nest/2022/01/27/virtual-band-inst/129981-01.jpeg" alt><img src="/next-nest/2022/01/27/virtual-band-inst/129981-02.jpeg" alt><img src="/next-nest/2022/01/27/virtual-band-inst/129981-03.jpeg" alt="Trans Granite"><img src="/next-nest/2022/01/27/virtual-band-inst/129981-04.jpeg" alt="Fossilized Flame"><img src="/next-nest/2022/01/27/virtual-band-inst/129981-05.jpeg" alt="Malachite"><img src="/next-nest/2022/01/27/virtual-band-inst/129981-06.jpeg" alt="Trans Geode"></li>
</ul>
</li>
<li><p>Gibson Custom Les Paul Standard <strong>Figured Top <sup><a href="#fn_2" id="reffn_2">2</a></sup></strong></p>
<ul>
<li>Description: The Les Paul Standard guitar has become synonymous not only with tone and playability, but beauty. The figured maple tops have certainly helped it attain that status, and these limited edition Les Paul Standard Figured Top guitars take the idea to the next level with eye-popping, bold colors — pulling out every detail of depth and curl of the highly figured maple tops. At its core, it is still the iconic Les Paul Standard you expect, replete with the finest and most accurate vintage replica parts and historic all-hide-glue construction.</li>
<li>Colors: Copper Burst, Nordic Blue;</li>
<li>Images:<img src="/next-nest/2022/01/27/virtual-band-inst/129962-00.jpeg" alt><img src="/next-nest/2022/01/27/virtual-band-inst/129962-01.jpeg" alt="Nordic Blue"><img src="/next-nest/2022/01/27/virtual-band-inst/129962-02.jpeg" alt="Copper Burst"></li>
</ul>
</li>
<li><p>Gibson Custom Les Paul Standard <strong>Painted Over <sup><a href="#fn_3" id="reffn_3">3</a></sup></strong></p>
<ul>
<li>Description: The 2017 Les Paul Standard “Painted-Over” Series blends the minute details, iconic look and feel of Gibson’s most inspiring solid body guitar with a refreshingly defiant, roughed-up and weathered aesthetic that’s been hand-crafted to make each guitar its own one-of-a-kind work of art.</li>
<li>Colors: Black over Gold, Black over Cherry Sunburst, Classic White over Cherry Sunburst, Gold over Cherry Sunburst, Kerry Green over Darkburst;</li>
<li>Images:<img src="/next-nest/2022/01/27/virtual-band-inst/129993-00.jpeg" alt><img src="/next-nest/2022/01/27/virtual-band-inst/129993-01.jpeg" alt><img src="/next-nest/2022/01/27/virtual-band-inst/129993-02.jpeg" alt><img src="/next-nest/2022/01/27/virtual-band-inst/129993-03.jpeg" alt="Black over Gold"><img src="/next-nest/2022/01/27/virtual-band-inst/129993-04.jpeg" alt="Black over Cherry Sunburst"><img src="/next-nest/2022/01/27/virtual-band-inst/129993-05.jpeg" alt="Classic White over Cherry Sunburst"><img src="/next-nest/2022/01/27/virtual-band-inst/129993-06.jpeg" alt="Gold over Cherry Sunburst"><img src="/next-nest/2022/01/27/virtual-band-inst/129993-07.jpeg" alt="Kerry Green over Darkburst"></li>
</ul>
</li>
</ul>
<h2 id="Refernces"><a href="#Refernces" class="headerlink" title="Refernces"></a>Refernces</h2><blockquote id="fn_1">
<sup>1</sup>. 吉他社 <a href="https://www.jitashe.org/product/129981/">Gibson Custom Les Paul Standard Rock Top</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. 吉他社 <a href="https://www.jitashe.org/product/129962/">Gibson Custom Les Paul Standard Figured Top</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. 吉他社 <a href="https://www.jitashe.org/product/129993/">Gibson Custom Les Paul Standard Painted Over</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>Virtual Artists (虛擬藝人)</tag>
      </tags>
  </entry>
  <entry>
    <title>所以説C/C++11的匿名函數(Lambda表達式)的方括號是什麽鬼啊...</title>
    <url>/next-nest/2021/11/04/whathe-brackets-in-lambdas-of-cpp11/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>今天晚上和同學聊天提到了<code>C/C++11</code>，然後注意到了其中的特性之一——也就是匿名函數，亦即Lambda表達式。</p>
<p>所謂匿名函數，最大的特點之一就是這樣的函數可以有名字也可以沒有名字，但<strong>它不需要命名就可以定義與使用</strong>，這就連帶地使之具有了<strong>臨時性</strong>。</p>
<p>但是關於<code>C/C++11</code>的匿名函數(Lambda表達式)，我有些東西真的想不通…</p>
<span id="more"></span>
<p>下面會以</p>
<script type="math/tex; mode=display">\psi(x) = 128 x ^2 + 39</script><p>或</p>
<script type="math/tex; mode=display">\psi(x, y) = 128 x y + 39</script><p>爲例來定義相關函數，以闡述我關於這些匿名函數(Lambda表達式)的觀點。</p>
<h2 id="Node-JS"><a href="#Node-JS" class="headerlink" title="Node.JS"></a><code>Node.JS</code></h2><p>我們先來看<code>Node.JS</code>當中的普通函數定義</p>
<figure class="highlight js"><figcaption><span>Ordinary Function Definition</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">psi</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>與匿名函數(Lambda表達式)定義</p>
<figure class="highlight js"><figcaption><span>Function Definition using Lambda Expression</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> psi = (<span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>匿名函數(Lambda表達式)調用起來可以像普通函數一樣</p>
<pre><code>psi(1.)
</code></pre><p>如若不想讓這個函數占用一個單獨的名字，那麽可以在定義后立即調用，不過調用后亦會即刻銷毀</p>
<figure class="highlight js"><figcaption><span>Anonymously Defining & Calling</span></figcaption><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>;</span><br><span class="line">&#125;)(<span class="number">1.</span>);</span><br></pre></td></tr></table></figure>
<p>就算是嵌套、複雜的函數亦可以如此這般進行定義</p>
<figure class="highlight js"><figcaption><span>Complicated Lambda Expressions</span></figcaption><table><tr><td class="code"><pre><span class="line">(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> hostname = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">  <span class="keyword">const</span> port = <span class="number">3939</span>;</span><br><span class="line">  http.createServer(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.statusCode = <span class="number">200</span>;</span><br><span class="line">    res.setHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/plain&quot;</span>);</span><br><span class="line">    res.end(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">  &#125;).listen(port, hostname, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`Server running at http://<span class="subst">$&#123;hostname&#125;</span>:<span class="subst">$&#123;port&#125;</span>/`</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>
<p>你甚至還可以把 <code>(function (vars&amp;params) &#123;...&#125;)</code> 簡寫為 <code>((vars&amp;params) =&gt; &#123;...&#125;)</code></p>
<figure class="highlight js"><figcaption><span>Simplified Lambda Expressions</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> psi = (<span class="function">(<span class="params">x</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>;</span><br><span class="line">&#125;);</span><br><span class="line">(<span class="function">(<span class="params">x</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>;</span><br><span class="line">&#125;)(<span class="number">1.</span>);</span><br></pre></td></tr></table></figure>
<p>這是<code>Node.JS</code>的匿名函數(Lambda表達式)，可以説是最靈活的一種。</p>
<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a><code>Python</code></h2><p><code>Python</code>中的匿名函數真的是用<code>lambda</code>關鍵字來進行定義的，例如普通地定義函數</p>
<figure class="highlight py"><figcaption><span>Lambda Expressions in Python(3.x)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">psi</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">128</span> * x * y + <span class="number">39</span></span><br><span class="line"><span class="comment"># &lt;=&gt;</span></span><br><span class="line">psi = <span class="keyword">lambda</span> x, y : <span class="number">128</span> * x * y + <span class="number">39</span></span><br></pre></td></tr></table></figure>
<p>可以用下方的<code>lambda</code>表達式來替代，但是<code>Python</code>的<code>lambda</code>表達式不能表示複雜的函數過程，僅僅適用於一個表達式出返回值的那種。</p>
<h2 id="C-C"><a href="#C-C" class="headerlink" title="C/C++"></a><code>C/C++</code></h2><p>到你<code>C/C++</code>的匿名函數(Lambda表達式)就神奇了…</p>
<figure class="highlight cpp"><figcaption><span>Lambda Expressions in C/C++11</span></figcaption><table><tr><td class="code"><pre><span class="line">([] (x) &#123; <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>; &#125;)(<span class="number">1.</span>);</span><br><span class="line">([=] (x) &#123; <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>; &#125;)(<span class="number">1.</span>);</span><br><span class="line">([&amp;] (x) &#123; <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>; &#125;)(<span class="number">1.</span>);</span><br><span class="line">([&amp;] (x, y) &#123; <span class="keyword">return</span> <span class="number">128</span> * x * y + <span class="number">39</span>; &#125;)(<span class="number">1.</span>);</span><br><span class="line">([&amp;y] (x) &#123; <span class="keyword">return</span> <span class="number">128</span> * x * y + <span class="number">39</span>; &#125;)(<span class="number">1.</span>);</span><br></pre></td></tr></table></figure>
<p>看網上有這些用法…嗯?什麽意思??</p>
<p>我去網上在一個叫做<code>C++11 FAQ中文版</code>章節<code>Lambda表達式</code>中找到了相關的解釋</p>
<blockquote><p><code>[&amp;]</code>是一個<strong>捕捉列表(capture list)</strong>，用於<strong>描述</strong>將要被lambda函數<strong>以引用傳參方式使用的局部變量</strong>。如果我們僅想“捕捉”參數<code>v</code>，則可以寫為：<code>[&amp;v]</code>。而如果我們想以傳值方式使用參數<code>v</code>，則可以寫為：<code>[=v]</code>。如果什麼都不捕捉，則為：<code>[]</code>。將所有的變量以引用傳遞方式使用時採用<code>[&amp;]</code>，而相對地，使用<code>[=]</code>則相應地表示以傳值方式使用所有變量。（譯註：“所有變量”即指lambda表達式在被調用處，所能見到的所有局部變量）</p>
<footer><strong>C++11 FAQ中文版</strong><cite><a href="https://wizardforcel.gitbooks.io/cpp-11-faq/content/18.html">Lambda表達式</a></cite></footer></blockquote>
<!--### ***<ruby>わかります！<rt>我day到rua！</rt></ruby>***-->
<h2 id="Extra-about-C-C-11-Standard"><a href="#Extra-about-C-C-11-Standard" class="headerlink" title="Extra!! about C/C++11 Standard"></a>Extra!! about <code>C/C++11</code> Standard</h2><p>我所見過的很多同學，使用的<code>C/C++</code>開發環境是一款稱爲<code>Dev-C++</code>的老古董，裏面用的是<code>gcc/g++ 4.9.2</code>，去網上查了查，支持的編譯標準似乎只到<code>C/C++98</code>…</p>
<p><img src="https://liella-gen2.github.io/imagehost/dev-gcc-4.9.2.jpeg" alt></p>
<p>其實除了用不了<code>auto</code>之外也沒什麽，雖説現在的<code>gcc/g++</code>都已經更新到第九代了…支持的標準也是2017年的<code>C/C++17</code>了…</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><code>zhzz2012</code> - cpp11新特性講解與應用 <a href="https://blog.csdn.net/zhzz2012/article/details/52151660/">https://blog.csdn.net/zhzz2012/article/details/52151660/</a></li>
<li>C++11 FAQ中文版 Lambda表達式 <a href="https://wizardforcel.gitbooks.io/cpp-11-faq/content/18.html">https://wizardforcel.gitbooks.io/cpp-11-faq/content/18.html</a></li>
<li><a href="https://isocpp.org/wiki/faq/cpp11/">https://isocpp.org/wiki/faq/cpp11/</a></li>
</ol>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>偶然間翻出來的一點東西，有關hp</title>
    <url>/next-nest/2022/01/20/wizard-result/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>幾個月前在一個pottermore的中文鏡像站<sup><a href="#fn_1" id="reffn_1">1</a></sup>上測得的結果，偶然之間翻到了它們。</p>
<span id="more"></span>
<p><img src="/next-nest/2022/01/20/wizard-result/overview.jpeg" alt></p>
<h2 id="Wand"><a href="#Wand" class="headerlink" title="Wand"></a>Wand</h2><p>關於測試得到的我的魔杖：</p>
<blockquote>
<p>Yew wood with a Phoenix feather core 12 1/2in and Unbending.</p>
</blockquote>
<p>紫衫木，以鳳凰羽毛為杖芯，長度為31.75厘米(12.5英寸)，同時不易彎曲。</p>
<h3 id="Appearance"><a href="#Appearance" class="headerlink" title="Appearance"></a>Appearance</h3><div class="table-container">
<table>
<thead>
<tr>
<th>參數</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>杖柄</td>
<td>杖柄上有簡單的橫向的棱紋</td>
</tr>
<tr>
<td>彈性 (Flexibility)</td>
<td>不易彎曲 (Unbending)</td>
</tr>
</tbody>
</table>
</div>
<h3 id="Length"><a href="#Length" class="headerlink" title="Length"></a>Length</h3><p><code>31.75</code>厘米 (<code>12.5</code>英寸)</p>
<p>很多魔杖匠人將魔杖的長度與使用魔杖巫師的體型按比例匹配。這只是個粗略的衡量標準，此方法忽略了許多重要的因素。依我之見；長一些的魔杖有可能適合身材高大些的巫師，不過，它們更可能被具有偉大品格和魔法風格更加深入人心的人吸引。靈巧的魔杖更偏向於優雅的施咒者。不過，魔杖構造的總體因素需要綜合起來考慮，木頭的品種、魔杖芯和彈性都有可能增強或減弱魔杖長短帶來的屬性。大多數魔杖在9到14英寸之間。我出售過非常短（8英寸和以下）和非常長的魔杖（15英寸以上），不過，這些情況非常罕見。在後面這種情況中，外貌上身高出眾的人所適配的魔杖長度的也大幅增加。不過，異常短小的魔杖通常選擇的是性格上有缺失的巫師，而不是身材尺寸過小的巫師們（甚至很多身材矮小的巫師們被偏長的魔杖選擇）。</p>
<h3 id="Wood"><a href="#Wood" class="headerlink" title="Wood"></a>Wood</h3><p>紫衫<sup><a href="#fn_2" id="reffn_2">2</a></sup><code>Yew</code></p>
<p>奧利凡德先生說：“紫杉木魔杖比較稀有，它們的理想主人同樣也不同尋常，有時甚至是臭名昭著的。紫杉木魔杖據說具有賦予其持有者生與死的力量，當然，這特徵可能對所有魔杖都適用，不過紫杉在決鬥和各種惡咒的領域有著特別黑暗與令人生畏的名聲。不過，用紫杉木魔杖的人更容易被黑魔法吸引的說法是錯誤的（不熟悉魔杖領域的人常常會犯這個錯誤）。適合紫杉木魔杖的巫師同樣可能扮演他人有力的保衛者。使用這種最長壽的樹木開闢而成的魔杖的持有者幾乎在英雄和惡棍中平分秋色。與紫杉木魔杖一同下葬的巫師墳前通常有一顆魔杖長成的守衛墳墓的參天大樹。在我的經驗中，能確定的是，紫杉木魔杖絕不會對平庸或膽小的人稱臣。”</p>
<h3 id="Core"><a href="#Core" class="headerlink" title="Core"></a>Core</h3><p>鳳凰羽毛<sup><a href="#fn_3" id="reffn_3">3</a></sup><code>Phoenix feather</code></p>
<p>最稀少的杖芯種類。鳳凰羽毛能施出最多種類的魔法，但是，要顯露這個特質所用的時間會比獨角獸毛和龍神經杖芯顯露特質的時間長得多。鳳凰羽毛是最具主動性的杖芯，有時候甚至會根據自己意願行動，許多巫師不喜歡這一點。鳳凰羽毛製作的魔杖對於選擇潛在主人最為挑剔，這是因為鳳凰是一種非常獨立自主、與世隔絕的生物。這類魔杖最難以被馴服或個人化，它們對魔杖持有者的忠誠也是最來之不易的。</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://wizard-tool.com/">魔法工具集: hp中文粉絲網站</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. pottermore中文 <a href="https://mp.weixin.qq.com/s/3FNa0a1S6tu6z1AIw_gbqw">魔杖木</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. pottermore中文 <a href="https://mp.weixin.qq.com/s/dA-nLzY5IFDuyJBeFqng-A">魔杖芯</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>「轉載】張 正錦 菌給的模板 II 數據結構</title>
    <url>/next-nest/2021/11/25/zzj-templates-02/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>第二輯 數據結構</p>
<ul>
<li>綫段樹</li>
<li>樹狀數組</li>
<li>離散化</li>
<li>STL</li>
</ul>
<span id="more"></span>
<h2 id="Segment-Tree"><a href="#Segment-Tree" class="headerlink" title="Segment Tree"></a>Segment Tree</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nqp main</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> A[maxn],n,ans,ans1;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> sum,lc,rc,tag,maxx;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a[rt].sum = a[a[rt].lc].sum + a[a[rt].rc].sum;</span><br><span class="line">    a[rt].maxx = <span class="built_in">max</span>(a[a[rt].lc].maxx,a[a[rt].rc].maxx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    a[a[rt].lc].sum += (mid-l+<span class="number">1</span>) * a[rt].tag;</span><br><span class="line">    a[a[rt].lc].tag += a[rt].tag;</span><br><span class="line">    a[a[rt].lc].maxx += a[rt].tag;</span><br><span class="line">    a[a[rt].rc].sum += (r-mid) * a[rt].tag;</span><br><span class="line">    a[a[rt].rc].tag += a[rt].tag;</span><br><span class="line">    a[a[rt].rc].maxx += a[rt].tag;</span><br><span class="line">    a[rt].tag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt, <span class="keyword">int</span> nowl, <span class="keyword">int</span> nowr, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == nowl &amp;&amp; r == nowr)</span><br><span class="line">    &#123;</span><br><span class="line">        a[rt].sum += (r-l+<span class="number">1</span>) * w;</span><br><span class="line">        a[rt].maxx += w;</span><br><span class="line">        a[rt].tag += w;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">pushdown</span>(l,r,rt);</span><br><span class="line">    <span class="keyword">if</span>(nowr &lt;= mid) <span class="built_in">modify</span>(l,mid,a[rt].lc,nowl,nowr,w);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nowl &gt; mid) <span class="built_in">modify</span>(mid+<span class="number">1</span>,r,a[rt].rc,nowl,nowr,w);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">modify</span>(l,mid,a[rt].lc,nowl,mid,w);</span><br><span class="line">        <span class="built_in">modify</span>(mid+<span class="number">1</span>,r,a[rt].rc,mid+<span class="number">1</span>,nowr,w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">update</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt, <span class="keyword">int</span> nowl, <span class="keyword">int</span> nowr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == nowl &amp;&amp; r == nowr)</span><br><span class="line">    &#123;</span><br><span class="line">        ans += a[rt].sum;</span><br><span class="line">        ans1 = <span class="built_in">max</span>(a[rt].maxx,ans1);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">pushdown</span>(l,r,rt);</span><br><span class="line">    <span class="keyword">if</span>(nowr &lt;= mid) <span class="built_in">query</span>(l,mid,a[rt].lc,nowl,nowr);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nowl &gt; mid) <span class="built_in">query</span>(mid+<span class="number">1</span>,r,a[rt].rc,nowl,nowr);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">query</span>(l,mid,a[rt].lc,nowl,mid);</span><br><span class="line">        <span class="built_in">query</span>(mid+<span class="number">1</span>,r,a[rt].rc,mid+<span class="number">1</span>,nowr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    &#123;</span><br><span class="line">        a[rt].sum = A[l];</span><br><span class="line">        a[rt].maxx = A[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    a[rt].lc = ++tot;</span><br><span class="line">    <span class="built_in">build</span>(l,mid,a[rt].lc);</span><br><span class="line">    a[rt].rc = ++ tot;</span><br><span class="line">    <span class="built_in">build</span>(mid+<span class="number">1</span>,r,a[rt].rc);</span><br><span class="line">    <span class="built_in">update</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nqp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) cin &gt;&gt; A[i];</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">query</span>(<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; ans1;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Fenwick-Array"><a href="#Fenwick-Array" class="headerlink" title="Fenwick Array"></a>Fenwick Array</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500050</span>;</span><br><span class="line"><span class="keyword">int</span> tree[maxn],m,n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; (-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span><span class="comment">//维护 ,修改 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[x] += k;</span><br><span class="line">        x += <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x)</span><span class="comment">//前缀和查询 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ans += tree[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">        <span class="built_in">add</span>(i,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">add</span>(b,c);</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">2</span>)</span><br><span class="line">            cout&lt;&lt;<span class="built_in">query</span>(c)-<span class="built_in">query</span>(b<span class="number">-1</span>)&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Discretization"><a href="#Discretization" class="headerlink" title="Discretization"></a>Discretization</h2><p>Hzw版离散化</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nqp main</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], t[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nqp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]),t[i]=a[i];</span><br><span class="line">    <span class="built_in">sort</span>(t+<span class="number">1</span>,t+n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> m=<span class="built_in">unique</span>(t+<span class="number">1</span>,t+<span class="number">1</span>+n)-t<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        a[i]=<span class="built_in">lower_bound</span>(t+<span class="number">1</span>,t+<span class="number">1</span>+m,a[i])-t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="STL-Standard-Template-Library"><a href="#STL-Standard-Template-Library" class="headerlink" title="STL (Standard Template Library)"></a>STL (Standard Template Library)</h2><h3 id="queue"><a href="#queue" class="headerlink" title="queue"></a>queue</h3><p>先進先出的綫性數據結構。</p>
<ul>
<li><p>Definition</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">T</span>,</span></span><br><span class="line"><span class="class">    <span class="keyword">class</span> <span class="title">Container</span> =</span> std::deque&lt;T&gt;</span><br><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">queue</span>;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Members</p>
<ul>
<li><code>.push(T _element)</code> 向隊列中壓入元素</li>
<li><code>.pop()</code> 彈出隊尾元素</li>
<li><code>.empty()</code> 查詢隊列是否爲空</li>
<li><code>.size()</code> 查詢隊列大小</li>
<li><code>.front()</code> 返回隊首元素</li>
<li><code>.back()</code> 返回隊尾元素</li>
</ul>
</li>
</ul>
<h3 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h3><p>先進後出的綫性數據結構。</p>
<ul>
<li><p>Definition</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">T</span>,</span></span><br><span class="line"><span class="class">    <span class="keyword">class</span> <span class="title">Container</span> =</span> std::deque&lt;T&gt;</span><br><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">stack</span>;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Members</p>
<ul>
<li><code>.push(T _element)</code> 向棧中壓入元素</li>
<li><code>.pop()</code> 彈出棧頂元素</li>
<li><code>.top()</code> 獲取棧頂元素</li>
<li><code>.empty()</code> 審察棧中是否爲空</li>
<li><code>.size()</code> 審查棧中元素數目</li>
</ul>
</li>
</ul>
<h3 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h3><p>不定长数组</p>
<ul>
<li><p>Definition</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">T</span>,</span></span><br><span class="line"><span class="class">    <span class="keyword">class</span> <span class="title">Allocator</span> =</span> std::allocator&lt;T&gt;</span><br><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">vector</span>;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Iterator</p>
<ul>
<li><p>Definition</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line">vector &lt;T&gt; :: iterator _iter;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Usage</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line">*_iter; <span class="comment">// 取值</span></span><br><span class="line">++_iter; <span class="comment">// 向下一位移動</span></span><br><span class="line">--_iter; <span class="comment">// 向上一位移動</span></span><br><span class="line"><span class="comment">// 裝逼上天ノ練一：循環讀出矢量中的元素</span></span><br><span class="line"><span class="keyword">for</span> (vector &lt;<span class="keyword">int</span>&gt; :: iterator _iter = vec.<span class="built_in">begin</span>(); _iter != vec.<span class="built_in">end</span>(); ++_iter)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d, &quot;</span>, *_iter);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>Members</p>
<ul>
<li><code>.push_back(T _element)</code> 在最後添加元素</li>
<li><code>.size()</code> 審查矢量的元素數目</li>
<li><code>.clear()</code> 清空矢量</li>
<li><code>.begin()</code> 返回指向第一個元素的迭代器</li>
<li><code>.end()</code> 返回指向最後一個元素<strong>之後一位</strong>的迭代器</li>
<li><code>.insert(vector &lt;T&gt; :: iterator _iter, T _element)</code> 在迭代器指向位置前插入元素</li>
</ul>
</li>
</ul>
<h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p>集合</p>
<ul>
<li><p>Definition</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">T</span>,                    // <span class="title">set</span>:</span>:key_type/value_type</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Compare</span> =</span> less &lt;T&gt;,   <span class="comment">// set::key_compare/value_compare</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Alloc</span> =</span> allocator &lt;T&gt; <span class="comment">// set::allocator_type</span></span><br><span class="line">    &gt; <span class="class"><span class="keyword">class</span> <span class="title">set</span>;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Members</p>
<ul>
<li><code>.insert(T _element)</code> 向集合中插入元素</li>
<li><code>.erase(T _element)</code> 從集合中刪除指定值的元素</li>
<li><code>.clear()</code> 清空集合</li>
<li><code>.count(T _element)</code> 清點集合中指定值的元素的數目</li>
<li><code>.lower_bound(T _element)</code> 返回指向第一個<code>&gt;=</code>指定值的元素的迭代器</li>
<li><code>.upper_bound(T _element)</code> 返回指向第一個<code>&gt;</code>指定值的元素的迭代器</li>
<li><code>.equal_range(T _element)</code> 返回一個 <code>pair(.lower_bound(T _element), .upper_bound(T _element))</code></li>
</ul>
</li>
</ul>
<h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><p>映射</p>
<ul>
<li><p>Definition</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Key</span>,                                          // <span class="title">map</span>:</span>:key_type</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">T</span>,                                            // <span class="title">map</span>:</span>:mapped_type</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Compare</span> =</span> std::less &lt;Key&gt;,                    <span class="comment">// map::key_compare</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Alloc</span> =</span> std::allocator &lt;pair &lt;<span class="keyword">const</span> Key, T&gt; &gt; <span class="comment">// map::allocator_type</span></span><br><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">map</span>;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Notes</p>
<ul>
<li>超过<code>40w</code>最好别用, 时间复杂度会变成<code>O(log N)</code></li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「轉載】張 正錦 菌給的模板 III 動態規劃</title>
    <url>/next-nest/2021/11/26/zzj-templates-03/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>第三輯 動態規劃</p>
<ul>
<li>懸綫法</li>
</ul>
<span id="more"></span>
<h2 id="Hoverline"><a href="#Hoverline" class="headerlink" title="Hoverline"></a>Hoverline</h2><p>求解最大子矩陣問題。</p>
<figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P1169">Luogu P1169</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2005</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> Map[maxn][maxn],l[maxn][maxn],r[maxn][maxn],up[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = <span class="built_in">read</span>(), m = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            Map[i][j] = <span class="built_in">read</span>();</span><br><span class="line">            l[i][j] = r[i][j] = j;</span><br><span class="line">            up[i][j] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>; j&lt;=m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(Map[i][j] != Map[i][j<span class="number">-1</span>])</span><br><span class="line">                l[i][j] = l[i][j<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=m<span class="number">-1</span>; j&gt;=<span class="number">1</span>; j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(Map[i][j+<span class="number">1</span>] != Map[i][j])</span><br><span class="line">                r[i][j] = r[i][j+<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans1 = <span class="number">-0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">int</span> ans2 = <span class="number">-0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">1</span> &amp;&amp; Map[i][j] != Map[i<span class="number">-1</span>][j])</span><br><span class="line">            &#123;</span><br><span class="line">                l[i][j] = <span class="built_in">max</span>(l[i][j],l[i<span class="number">-1</span>][j]);</span><br><span class="line">                r[i][j] = <span class="built_in">min</span>(r[i][j],r[i<span class="number">-1</span>][j]);</span><br><span class="line">                up[i][j] =  up[i<span class="number">-1</span>][j] + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> a = r[i][j] - l[i][j] + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> b = <span class="built_in">min</span>(a,up[i][j]);</span><br><span class="line">            ans1 = <span class="built_in">max</span>(ans1,b*b);</span><br><span class="line">            ans2 = <span class="built_in">max</span>(ans2,a*up[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans1 &lt;&lt; endl &lt;&lt; ans2;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「轉載】張 正錦 菌給的模板 I 圖論</title>
    <url>/next-nest/2021/11/24/zzj-templates-01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>第一輯 圖論</p>
<ul>
<li><code>LCA</code><ul>
<li>倍增求<code>LCA</code></li>
<li>樹鏈剖分求<code>LCA</code></li>
</ul>
</li>
<li>最短路<ul>
<li><code>Dijkstra</code></li>
<li><code>SPFA</code> (判負環)</li>
<li><code>SPFA</code> (不判負環)</li>
<li><code>Floyd</code> (多源最短路)</li>
<li>次短路</li>
</ul>
</li>
<li>分層圖</li>
<li>樹鏈剖分</li>
<li>樹上差分</li>
<li>差分約束</li>
<li>二分圖匹配<ul>
<li><code>Hungary</code>算法 (社會主義分老婆)</li>
</ul>
</li>
<li>最小生成樹<ul>
<li><code>Kruskal</code></li>
</ul>
</li>
<li>强連通分量<ul>
<li><code>Tarjan</code>縮點 + 染色</li>
</ul>
</li>
</ul>
<span id="more"></span>
<h2 id="LCA"><a href="#LCA" class="headerlink" title="LCA"></a>LCA</h2><h3 id="by-Binary-Lifting"><a href="#by-Binary-Lifting" class="headerlink" title="by Binary Lifting"></a>by Binary Lifting</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nqp main</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500010</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],f[maxn][<span class="number">21</span>],deep[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,root,cur;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,next;</span><br><span class="line">&#125;tree[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tree[++cur].next = head[u];</span><br><span class="line">    tree[cur].to = v;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    f[u][<span class="number">0</span>] = fa;</span><br><span class="line">    deep[u] = deep[fa] + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i; i=tree[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = tree[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v == fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(v,u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(deep[a] &gt; deep[b]) <span class="built_in">swap</span>(a,b);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[a] &lt;= deep[b] - (<span class="number">1</span>&lt;&lt;i))</span><br><span class="line">        &#123;</span><br><span class="line">            b = f[b][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a == b) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(f[a][i] == f[b][i]) <span class="keyword">continue</span>;</span><br><span class="line">        a = f[a][i];</span><br><span class="line">        b = f[b][i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[a][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nqp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios :: <span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; root;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u,v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        <span class="built_in">add</span>(u,v);</span><br><span class="line">        <span class="built_in">add</span>(v,u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(root,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[j][i] = f[f[j][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="built_in">LCA</span>(a,b);</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="by-HLD"><a href="#by-HLD" class="headerlink" title="by HLD"></a>by HLD</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,n,m,s,son[maxn],id[maxn],size[maxn],f[maxn],top[maxn],deep[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to;</span><br><span class="line">&#125;edge[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa, <span class="keyword">int</span> dep)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    size[u] = <span class="number">1</span>;</span><br><span class="line">    deep[u] = dep;</span><br><span class="line">    f[u] = fa;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v == fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs1</span>(v,u,dep+<span class="number">1</span>);</span><br><span class="line">        size[u] += size[v];</span><br><span class="line">        <span class="keyword">if</span>(son[u] == <span class="number">-1</span> || size[v] &gt; size[son[u]]) son[u] = v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    top[u] = t;</span><br><span class="line">    <span class="keyword">if</span>(son[u]==<span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">dfs2</span>(son[u],t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v == f[u] || v == son[u]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs2</span>(v,v); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(top[x] != top[y])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[top[x]] &lt; deep[top[y]]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">        x = f[top[x]];</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">if</span>(deep[x] &gt; deep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(son,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(son));</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    n = <span class="built_in">read</span>(), m = <span class="built_in">read</span>(), s = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        a = <span class="built_in">read</span>(), b = <span class="built_in">read</span>();</span><br><span class="line">        <span class="built_in">add</span>(a,b);</span><br><span class="line">        <span class="built_in">add</span>(b,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs1</span>(s,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">dfs2</span>(s,s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        a = <span class="built_in">read</span>(), b = <span class="built_in">read</span>();</span><br><span class="line">        cout &lt;&lt; <span class="built_in">LCA</span>(a,b) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Shortest-Path"><a href="#Shortest-Path" class="headerlink" title="Shortest Path"></a>Shortest Path</h2><h3 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a>Dijkstra</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,n,m,vis[maxn],dis[maxn]; <span class="comment">//dis[i]到i的最短路</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to,w;</span><br><span class="line">&#125;edge[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> <span class="comment">//边表建图</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">heapnode</span> //小根堆</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> d,u;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> heapnode &amp; h) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> d &gt; h.d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    priority_queue &lt;heapnode&gt; q;</span><br><span class="line">    <span class="built_in">memset</span>(dis,<span class="number">0x3f</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>((heapnode)&#123;dis[s],s&#125;);</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        heapnode p = q.<span class="built_in">top</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">int</span> u = p.u;</span><br><span class="line">        <span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>; <span class="comment">//如果已经访问过则跳过</span></span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(dis[edge[i].to] &gt; dis[u] + edge[i].w)</span><br><span class="line">                dis[edge[i].to] = dis[u] + edge[i].w;</span><br><span class="line">            q.<span class="built_in">push</span>((heapnode)&#123;dis[edge[i].to],edge[i].to&#125;); <span class="comment">//扩展下一个点</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dijkstra</span>(<span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; dis[n];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="SPFA-with-judging-negative-ring"><a href="#SPFA-with-judging-negative-ring" class="headerlink" title="SPFA (with judging negative ring)"></a>SPFA (with judging negative ring)</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nqp main </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500050</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,n,m,s,dis[maxn],vis[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,next,w;</span><br><span class="line">&#125;edge[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> flag;<span class="keyword">int</span> num[maxn]; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) dis[i] = <span class="number">2147483647</span>;</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>(s);</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> p;</span><br><span class="line">        p = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        vis[p] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[p]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">            <span class="keyword">if</span>(dis[v] &gt; dis[p]+edge[i].w)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(num[v]&gt;n)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="number">2333</span>;</span><br><span class="line">                    <span class="keyword">return</span> ;</span><br><span class="line">                &#125;</span><br><span class="line">                dis[v] = dis[p]+edge[i].w;</span><br><span class="line">                <span class="keyword">if</span>(!vis[v])</span><br><span class="line">                &#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(v);</span><br><span class="line">                    vis[v] = <span class="number">1</span>;</span><br><span class="line">                    num[v] = num[s]+<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nqp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">SPFA</span>(s);</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; dis[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="SPFA-without-judging-negative-ring"><a href="#SPFA-without-judging-negative-ring" class="headerlink" title="SPFA (without judging negative ring)"></a>SPFA (without judging negative ring)</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500010</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,n,m,dis[maxn],vis[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to,w;</span><br><span class="line">&#125;edge[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">       <span class="built_in">memset</span>(dis,<span class="number">0x3f</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line">       dis[u] = <span class="number">0</span>;</span><br><span class="line">       q.<span class="built_in">push</span>(u);</span><br><span class="line">       vis[u] = <span class="number">1</span>;</span><br><span class="line">       <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">int</span> p = q.<span class="built_in">front</span>();</span><br><span class="line">           q.<span class="built_in">pop</span>();</span><br><span class="line">           vis[p] = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> i=head[p]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">if</span>(dis[edge[i].to] &gt; dis[p] + edge[i].w)</span><br><span class="line">               &#123;</span><br><span class="line">                   dis[edge[i].to] = dis[p] + edge[i].w;</span><br><span class="line">                   <span class="keyword">if</span>(!vis[edge[i].to])</span><br><span class="line">                   &#123;</span><br><span class="line">                       q.<span class="built_in">push</span>(edge[i].to);</span><br><span class="line">                       vis[edge[i].to] = <span class="number">1</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">SPFA</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; dis[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Floyd"><a href="#Floyd" class="headerlink" title="Floyd"></a>Floyd</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> Map[maxn][maxn],n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(Map,INF,<span class="built_in"><span class="keyword">sizeof</span></span>(Map));</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        Map[a][b] = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">                <span class="keyword">if</span>(k!=i &amp;&amp; i!=j &amp;&amp; k!=j)</span><br><span class="line">                    Map[i][j] = <span class="built_in">min</span>(Map[i][j],Map[i][k]+Map[k][j]);</span><br><span class="line">    cout &lt;&lt; Map[<span class="number">1</span>][n];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Second-Shortest-Path"><a href="#Second-Shortest-Path" class="headerlink" title="Second Shortest Path"></a>Second Shortest Path</h3><figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P2865">Luogu P2865</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,vis[maxn],dis1[maxn],dis2[maxn],n,m;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to,w;</span><br><span class="line">&#125;edge[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">heapnode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> d,u;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> heapnode &amp; h) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> d &gt; h.d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> dis[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    priority_queue &lt;heapnode&gt; q;</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>((heapnode)&#123;dis[s],s&#125;);</span><br><span class="line">    <span class="keyword">int</span> u;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        heapnode p = q.<span class="built_in">top</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        u = p.u;</span><br><span class="line">        <span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>( dis[edge[i].to] &gt; dis[u] + edge[i].w)</span><br><span class="line">                dis[edge[i].to] = dis[u] + edge[i].w;</span><br><span class="line">            q.<span class="built_in">push</span>((heapnode)&#123;dis[edge[i].to],edge[i].to&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dis1,<span class="number">0x3f</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(dis1));</span><br><span class="line">    <span class="built_in">memset</span>(dis2,<span class="number">0x3f</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(dis2));</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    n = <span class="built_in">read</span>(), m = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        a = <span class="built_in">read</span>(), b = <span class="built_in">read</span>(), c = <span class="built_in">read</span>();</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">        <span class="built_in">add</span>(b,a,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dijkstra</span>(<span class="number">1</span>,dis1);</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(vis));</span><br><span class="line">    <span class="built_in">dijkstra</span>(n,dis2);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>; u&lt;=n; u++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> cmp = dis1[u] + dis2[edge[i].to] + edge[i].w;</span><br><span class="line">            <span class="keyword">if</span>(cmp &gt; dis1[n] &amp;&amp; cmp &lt; ans) ans = cmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Layered-Graph"><a href="#Layered-Graph" class="headerlink" title="Layered Graph"></a>Layered Graph</h2><figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P2939">Luogu P2939</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100100</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,n,m,k,dis[maxn][<span class="number">21</span>],vis[maxn][<span class="number">21</span>];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to,w;</span><br><span class="line">&#125;edge[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">heapnode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> d,u,h;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> heapnode &amp; h) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> d &gt; h.d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    priority_queue &lt;heapnode&gt; q;</span><br><span class="line">    <span class="built_in">memset</span>(dis,<span class="number">0x3f</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line">    dis[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>((heapnode)&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        heapnode p = q.<span class="built_in">top</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">int</span> u = p.u;</span><br><span class="line">        <span class="keyword">int</span> h = p.h;</span><br><span class="line">        <span class="keyword">if</span>(vis[u][h]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u][h] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(dis[edge[i].to][h] &gt; dis[u][h] + edge[i].w)</span><br><span class="line">            &#123;</span><br><span class="line">                dis[edge[i].to][h] = dis[u][h] + edge[i].w;</span><br><span class="line">                q.<span class="built_in">push</span>((heapnode)&#123;dis[edge[i].to][h],edge[i].to,h&#125;);</span><br><span class="line">            &#125;    </span><br><span class="line">            <span class="keyword">if</span>(h &lt; k)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(dis[edge[i].to][h+<span class="number">1</span>] &gt; dis[u][h])</span><br><span class="line">                &#123;</span><br><span class="line">                    dis[edge[i].to][h+<span class="number">1</span>] = dis[u][h];</span><br><span class="line">                    q.<span class="built_in">push</span>((heapnode)&#123;dis[edge[i].to][h+<span class="number">1</span>],edge[i].to,h+<span class="number">1</span>&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    n = <span class="built_in">read</span>(), m = <span class="built_in">read</span>(), k = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        a = <span class="built_in">read</span>(), b = <span class="built_in">read</span>(), c = <span class="built_in">read</span>();</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">        <span class="built_in">add</span>(b,a,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dijkstra</span>(<span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; dis[n][k];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="HLD-Heavy-Light-Decomposition"><a href="#HLD-Heavy-Light-Decomposition" class="headerlink" title="HLD (Heavy-Light Decomposition)"></a>HLD (Heavy-Light Decomposition)</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nqp main</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">300030</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,n,m,r,p,top[maxn],son[maxn],tid[maxn],rnk[maxn],size[maxn],val[maxn];</span><br><span class="line"><span class="keyword">int</span> deep[maxn],f[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">int</span> f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(c == <span class="string">&#x27;-&#x27;</span>) f = <span class="number">-1</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v*<span class="number">10</span> + c -<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to;</span><br><span class="line">&#125;edge[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ljm</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> sum,tag,lc,rc;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a[rt].sum = a[a[rt].lc].sum + a[a[rt].rc].sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    &#123;</span><br><span class="line">        a[rt].sum = rnk[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    a[rt].lc = ++tot;</span><br><span class="line">    <span class="built_in">build</span>(l,mid,a[rt].lc);</span><br><span class="line">    a[rt].rc = ++tot;</span><br><span class="line">    <span class="built_in">build</span>(mid+<span class="number">1</span>,r,a[rt].rc);</span><br><span class="line">    <span class="built_in">update</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    printf(&quot;%d %d\n&quot;,l,r);</span></span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) / <span class="number">2</span>;</span><br><span class="line">    a[a[rt].lc].sum += (mid-l+<span class="number">1</span>) * a[rt].tag;</span><br><span class="line">    a[a[rt].lc].tag += a[rt].tag;</span><br><span class="line">    a[a[rt].rc].sum += (r-mid) * a[rt].tag;</span><br><span class="line">    a[a[rt].rc].tag += a[rt].tag;</span><br><span class="line">    a[rt].tag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt, <span class="keyword">int</span> nowl, <span class="keyword">int</span> nowr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == nowl &amp;&amp; r == nowr)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> a[rt].sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">pushdown</span>(l,r,rt);</span><br><span class="line">    <span class="keyword">if</span>(nowr &lt;= mid) ans += <span class="built_in">query</span>(l,mid,a[rt].lc,nowl,nowr);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nowl &gt; mid) ans += <span class="built_in">query</span>(mid+<span class="number">1</span>,r,a[rt].rc,nowl,nowr);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans += <span class="built_in">query</span>(l,mid,a[rt].lc,nowl,mid);</span><br><span class="line">        ans += <span class="built_in">query</span>(mid+<span class="number">1</span>,r,a[rt].rc,mid+<span class="number">1</span>,nowr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt, <span class="keyword">int</span> nowl, <span class="keyword">int</span> nowr, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == nowl &amp;&amp; r == nowr)</span><br><span class="line">    &#123;</span><br><span class="line">        a[rt].sum += (r-l+<span class="number">1</span>) * w;</span><br><span class="line">        a[rt].tag += w;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">pushdown</span>(l,r,rt);</span><br><span class="line">    <span class="keyword">if</span>(nowr &lt;= mid) <span class="built_in">modify</span>(l,mid,a[rt].lc,nowl,nowr,w);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nowl &gt; mid) <span class="built_in">modify</span>(mid+<span class="number">1</span>,r,a[rt].rc,nowl,nowr,w);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">modify</span>(l,mid,a[rt].lc,nowl,mid,w);</span><br><span class="line">        <span class="built_in">modify</span>(mid+<span class="number">1</span>,r,a[rt].rc,mid+<span class="number">1</span>,nowr,w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">update</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//-----------------------------------------------------build tree</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa, <span class="keyword">int</span> dep)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    size[u] = <span class="number">1</span>;</span><br><span class="line">    deep[u] = dep;</span><br><span class="line">    f[u] = fa;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v == fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs1</span>(v,u,dep+<span class="number">1</span>);</span><br><span class="line">        size[u] += size[v];</span><br><span class="line">        <span class="keyword">if</span>(son[u] == <span class="number">-1</span> || size[v] &gt; size[son[u]]) son[u] = v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    top[u] = t;</span><br><span class="line">    tid[u] = cnt;</span><br><span class="line">    rnk[cnt] = val[u];</span><br><span class="line">    cnt++;</span><br><span class="line">    <span class="keyword">if</span>(son[u] == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">dfs2</span>(son[u],t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!tid[v]) <span class="built_in">dfs2</span>(v,v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query_path</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(top[x] != top[y])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[top[x]] &lt; deep[top[y]]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">        ans += <span class="built_in">query</span>(<span class="number">1</span>,n,<span class="number">1</span>,tid[top[x]],tid[x]);</span><br><span class="line">        x = f[top[x]];</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span>(deep[x] &gt; deep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">    ans += <span class="built_in">query</span>(<span class="number">1</span>,n,<span class="number">1</span>,tid[x],tid[y]);        </span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify_path</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(top[x] != top[y])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[top[x]] &lt; deep[top[y]]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">        <span class="built_in">modify</span>(<span class="number">1</span>,n,<span class="number">1</span>,tid[top[x]],tid[x],w);</span><br><span class="line">        x = f[top[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(deep[x] &gt; deep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">    <span class="built_in">modify</span>(<span class="number">1</span>,n,<span class="number">1</span>,tid[x],tid[y],w);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nqp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    <span class="built_in">memset</span>(son,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(size));</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; r &gt;&gt; p;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; val[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="built_in">add</span>(a,b);</span><br><span class="line">        <span class="built_in">add</span>(b,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs1</span>(r,r,<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">dfs2</span>(r,r);</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        x = <span class="built_in">read</span>();</span><br><span class="line">        <span class="keyword">if</span>(x == <span class="number">1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> y,z,k;</span><br><span class="line">            y = <span class="built_in">read</span>(), z = <span class="built_in">read</span>(), k = <span class="built_in">read</span>();</span><br><span class="line">            <span class="built_in">modify_path</span>(y,z,k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> y,z;</span><br><span class="line">            y = <span class="built_in">read</span>(), z = <span class="built_in">read</span>();</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="built_in">query_path</span>(y,z);</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> y,z;</span><br><span class="line">            y = <span class="built_in">read</span>(), z = <span class="built_in">read</span>();</span><br><span class="line">            <span class="built_in">modify</span>(<span class="number">1</span>,n,<span class="number">1</span>,tid[y],tid[y]+size[y]<span class="number">-1</span>,z);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> y;</span><br><span class="line">            y = <span class="built_in">read</span>();</span><br><span class="line">            cout &lt;&lt; <span class="built_in">query</span>(<span class="number">1</span>,n,<span class="number">1</span>,tid[y],tid[y]+size[y]<span class="number">-1</span>) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Tree-Diff"><a href="#Tree-Diff" class="headerlink" title="Tree Diff"></a>Tree Diff</h2><figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P3128">Luogu P3128</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500050</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,f[maxn][<span class="number">21</span>],deep[maxn],faa[maxn];</span><br><span class="line"><span class="keyword">int</span> d[maxn];</span><br><span class="line"><span class="keyword">int</span> maxx = <span class="number">-0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to,w;</span><br><span class="line">&#125;edge[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    faa[u] = fa;</span><br><span class="line">    f[u][<span class="number">0</span>] = fa;</span><br><span class="line">    deep[u] = deep[fa] + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(fa == v) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(v,u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(deep[a] &gt; deep[b]) <span class="built_in">swap</span>(a,b);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[a] &lt;= deep[b] - (<span class="number">1</span>&lt;&lt;i))</span><br><span class="line">        &#123;</span><br><span class="line">            b = f[b][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a == b) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(f[a][i] == f[b][i]) <span class="keyword">continue</span>;</span><br><span class="line">        a = f[a][i];</span><br><span class="line">        b = f[b][i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[a][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[a]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v == fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs1</span>(v,a);</span><br><span class="line">        d[a] += d[v];</span><br><span class="line">    &#125;</span><br><span class="line">    maxx = <span class="built_in">max</span>(d[a],maxx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    n = <span class="built_in">read</span>(), m = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        a = <span class="built_in">read</span>(), b = <span class="built_in">read</span>();</span><br><span class="line">        <span class="built_in">add</span>(a,b,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(b,a,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[j][i] = f[f[j][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        a = <span class="built_in">read</span>(), b = <span class="built_in">read</span>();</span><br><span class="line">        d[a]++;d[b]++;d[<span class="built_in">LCA</span>(a,b)]--;d[f[<span class="built_in">LCA</span>(a,b)][<span class="number">0</span>]]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs1</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; maxx;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Diff-Constraints"><a href="#Diff-Constraints" class="headerlink" title="Diff Constraints"></a>Diff Constraints</h2><p>我们可以用松弛来理解一下差分约束.</p>
<p>对于松弛来说 <code>dis[v] &gt; dis[u] + edge[i].w</code>;<br>我们可以认为 <code>v &gt; u + c</code>. 移项可得 <code>v – u &gt; w</code> 所以我们就可以建一条从<code>u-&gt;v</code>的边,边权为<code>c</code></p>
<p>例如:</p>
<pre><code>a + b &gt;= c 即 add(b,a,c);
a – b &lt;= c 即 add(b,a,-c);
a – b == 0 即 add(a,b,0) add(b,a,0);
</code></pre><p>用差分约束建图即可</p>
<ul>
<li><strong><em>注: 一定要用SPFA判负环!!!!!!</em></strong></li>
</ul>
<h2 id="Bipartite-Graph-Match"><a href="#Bipartite-Graph-Match" class="headerlink" title="Bipartite Graph Match"></a>Bipartite Graph Match</h2><h3 id="Hungary-Algorithm"><a href="#Hungary-Algorithm" class="headerlink" title="Hungary Algorithm"></a>Hungary Algorithm</h3><p><del>社会主义分老婆</del></p>
<figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P3386">Luogu P3386</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v * <span class="number">10</span> + c -<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> flag[maxn][maxn],vis[maxn],n,m,e,cx[maxn],cy[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">1</span>; y&lt;=m; y++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(flag[x][y] &amp;&amp; !vis[y])</span><br><span class="line">        &#123;</span><br><span class="line">            vis[y] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(!cy[y] || <span class="built_in">dfs</span>(cy[y]))</span><br><span class="line">            &#123;</span><br><span class="line">                cx[x] = y;</span><br><span class="line">                cy[y] = x;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = <span class="built_in">read</span>(), m = <span class="built_in">read</span>(), e = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=e; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        x = <span class="built_in">read</span>(), y = <span class="built_in">read</span>();</span><br><span class="line">        flag[x][y] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(vis));</span><br><span class="line">        ans += <span class="built_in">dfs</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="MST-Minimum-Spanning-Tree"><a href="#MST-Minimum-Spanning-Tree" class="headerlink" title="MST (Minimum Spanning Tree)"></a>MST (Minimum Spanning Tree)</h2><h3 id="Kruskal"><a href="#Kruskal" class="headerlink" title="Kruskal"></a>Kruskal</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nqp main</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getint</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v*<span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">600000</span>;</span><br><span class="line"><span class="keyword">int</span> cur,head[maxn],n,m,vis[maxn],ans,f[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,next,w,u;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> hzw &amp;h) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> w &lt; h.w;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;edge[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    edge[cur].u = u;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x]!=x)</span><br><span class="line">        f[x] = <span class="built_in">find</span>(f[x]);</span><br><span class="line">    <span class="keyword">return</span> f[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">un</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    f[<span class="built_in">find</span>(x)] = <span class="built_in">find</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">find</span>(x) == <span class="built_in">find</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kru</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="built_in">sort</span>(edge+<span class="number">1</span>,edge+m+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">query</span>(edge[i].u,edge[i].to))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">un</span>(edge[i].to,edge[i].u);</span><br><span class="line">            num++;</span><br><span class="line">            ans += edge[i].w;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num == n<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nqp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        a = <span class="built_in">getint</span>(),b = <span class="built_in">getint</span>(),c = <span class="built_in">getint</span>();</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i] = i;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="built_in">kru</span>();</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="SCC-Strongly-Connected-Components"><a href="#SCC-Strongly-Connected-Components" class="headerlink" title="SCC (Strongly Connected Components)"></a>SCC (Strongly Connected Components)</h2><h3 id="Tarjan"><a href="#Tarjan" class="headerlink" title="Tarjan"></a>Tarjan</h3><figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P1726">Luogu P1726</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,m,vis[maxn],dfn[maxn],low[maxn],n,belong[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,next;</span><br><span class="line">&#125;edge[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tot,col;</span><br><span class="line">stack &lt;<span class="keyword">int</span>&gt; s; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    cout&lt;&lt;&quot;now &quot;&lt;&lt;u&lt;&lt;endl;</span></span><br><span class="line">    dfn[u] = low[u] = ++tot;</span><br><span class="line">    s.<span class="built_in">push</span>(u);</span><br><span class="line">    vis[u] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)    </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[edge[i].to])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">tarjan</span>(edge[i].to);</span><br><span class="line">            low[u] = <span class="built_in">min</span>(low[u],low[edge[i].to]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(vis[edge[i].to])</span><br><span class="line">        &#123;</span><br><span class="line">            low[u] = <span class="built_in">min</span>(low[u],dfn[edge[i].to]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(low[u] == dfn[u])</span><br><span class="line">    &#123;</span><br><span class="line">        col++;    </span><br><span class="line">        <span class="keyword">while</span>(s.<span class="built_in">top</span>() != u)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> front = s.<span class="built_in">top</span>();</span><br><span class="line">            belong[front] = col;</span><br><span class="line">            s.<span class="built_in">pop</span>();</span><br><span class="line">            vis[front] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> front = s.<span class="built_in">top</span>();</span><br><span class="line">        belong[front] = col;</span><br><span class="line">        s.<span class="built_in">pop</span>();</span><br><span class="line">        vis[front] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ljm</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> val,color;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> ljm &amp; j) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> val &gt; j.val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;size[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y,z;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">        <span class="keyword">if</span>(z==<span class="number">1</span>) <span class="built_in">add</span>(x,y);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">add</span>(x,y),<span class="built_in">add</span>(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">if</span>(!dfn[i]) <span class="built_in">tarjan</span>(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        size[belong[i]].val++;<span class="comment">//记录环的长度</span></span><br><span class="line">        size[belong[i]].color = belong[i];<span class="comment">//记录环的颜色 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(size+<span class="number">1</span>,size+<span class="number">1</span>+n);</span><br><span class="line">    cout &lt;&lt; size[<span class="number">1</span>].val &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(belong[i] == size[<span class="number">1</span>].color) cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「轉載】張 正錦 菌給的模板 V 數論數學</title>
    <url>/next-nest/2021/11/26/zzj-templates-05/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>第五輯 數論數學</p>
<ul>
<li>最大公約數<code>(gcd)</code></li>
<li>擴展<code>Euclidean</code></li>
<li>快速冪</li>
</ul>
<span id="more"></span>
<h2 id="GCD-Greatest-Common-Divisor"><a href="#GCD-Greatest-Common-Divisor" class="headerlink" title="GCD (Greatest Common Divisor)"></a>GCD (Greatest Common Divisor)</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Gcd</span>(b,a%b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Ex-GCD-Extended-Euclidean"><a href="#Ex-GCD-Extended-Euclidean" class="headerlink" title="Ex-GCD (Extended Euclidean)"></a>Ex-GCD (Extended Euclidean)</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> &amp;x, <span class="keyword">int</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> g = <span class="built_in">exgcd</span>(b,a%b,y,x);</span><br><span class="line">    y -= a/b*x;</span><br><span class="line">    <span class="keyword">return</span> g;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="built_in">exgcd</span>(a,b,x,y);</span><br><span class="line">    x = (x+b)%b;<span class="comment">//最小正整数解 </span></span><br><span class="line">    cout &lt;&lt; x;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Binary-Exponentiation"><a href="#Binary-Exponentiation" class="headerlink" title="Binary Exponentiation"></a>Binary Exponentiation</h2><p>其實是二進制取冪，也稱平方法。</p>
<ul>
<li><p><code>zzj</code>提供的非遞歸方案 (<code>mod p</code> 意義下取冪)</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">quick_power</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans = ans*a%p;</span><br><span class="line">        a = a*a%p;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>OI-Wiki</code><sup><a href="#fn_1" id="reffn_1">1</a></sup>上的遞歸實現</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">binpow</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res = <span class="built_in">binpow</span>(a, b / <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (b % <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> res * res * a;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> res * res;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>OI-Wiki</code>上的非遞歸實現</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">binpow</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a;</span><br><span class="line">        a = a * a;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://oi-wiki.org/math/quick-pow/"><code>OI-Wiki</code> 章節 快速冪</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「轉載】張 正錦 菌給的模板 IV 字符串</title>
    <url>/next-nest/2021/11/26/zzj-templates-04/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>第四輯 字符串</p>
<ul>
<li>字符串<strong>Hash</strong></li>
<li><code>string</code>類</li>
</ul>
<span id="more"></span>
<h2 id="String-Hash"><a href="#String-Hash" class="headerlink" title="String Hash"></a>String Hash</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">192608173</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> base = <span class="number">233</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hsh</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = (ans*base+(<span class="keyword">int</span>)s[i])%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">string s[<span class="number">10005</span>];</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">10005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; s[i];</span><br><span class="line">        num[i] = <span class="built_in">hsh</span>(s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(num+<span class="number">1</span>,num+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i] != num[i<span class="number">-1</span>]) ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Class-string"><a href="#Class-string" class="headerlink" title="Class string"></a>Class string</h2><p>定義在頭文件<code>string</code>當中。</p>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「轉載】張 正錦 菌給的模板 VI 如李特基老師一樣神乎其技又如坂本大神一般裝逼上天的算法們</title>
    <url>/next-nest/2021/11/26/zzj-templates-06/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>以及<code>注意事項</code></p>
<span id="more"></span>
<h2 id="ST-Table"><a href="#ST-Table" class="headerlink" title="ST Table"></a>ST Table</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> stmin[maxn][<span class="number">20</span>],stmax[maxn][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">st</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; (<span class="number">1</span>&lt;&lt;j)&lt;=n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            stmin[i][j] = <span class="built_in">min</span>(stmin[i][j<span class="number">-1</span>], stmin[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">            <span class="comment">//stmax[i][j] = max(stmin[i][j-1], stmax[i+(1&lt;&lt;j-1)][j-1]);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = (<span class="keyword">int</span>)<span class="built_in">log2</span>(r-l+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">min</span>(stmin[l][x], stmin[r-(<span class="number">1</span>&lt;&lt;x)+<span class="number">1</span>][x]);    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) stmin[i][<span class="number">0</span>] = stmax[i][<span class="number">0</span>] = a[i];</span><br><span class="line">    <span class="built_in">st</span>();</span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">query</span>(l,r); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Batch-Process"><a href="#Batch-Process" class="headerlink" title="Batch Process"></a>Batch Process</h2><p>也就是對拍。</p>
<figure class="highlight bat"><figcaption><span>Batch</span></figcaption><table><tr><td class="code"><pre><span class="line">:loop                       ::循环</span><br><span class="line">makedata.exe                ::生成数据</span><br><span class="line">std.exe                     ::较优程序</span><br><span class="line">baoli.exe                   ::暴力程序</span><br><span class="line">fc std.out baoli.out        ::比较两个输出文件</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%errorlevel%</span> == <span class="number">1</span> <span class="built_in">pause</span>  ::如果不同则暂停</span><br><span class="line"><span class="keyword">goto</span> loop                   ::继续循环</span><br></pre></td></tr></table></figure>
<h2 id="Linear-Prime-Sieving"><a href="#Linear-Prime-Sieving" class="headerlink" title="Linear Prime Sieving"></a>Linear Prime Sieving</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span>   </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> prime[<span class="number">10000005</span>],len;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10000005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Sieve_Primes</span><span class="params">(<span class="keyword">int</span> R)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a[<span class="number">0</span>] = a[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=R;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] == <span class="number">0</span>)   prime[++len] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=len &amp;&amp; i*prime[j]&lt;=R;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i*prime[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">Sieve_Primes</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        cin &gt;&gt; num;</span><br><span class="line">        <span class="keyword">if</span>(a[num] == <span class="number">1</span>) cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="SA-Simulated-Annealing"><a href="#SA-Simulated-Annealing" class="headerlink" title="SA (Simulated Annealing)"></a>SA (Simulated Annealing)</h2><h3 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h3><p><strong>模擬退火<sup><a href="#fn_1" id="reffn_1">1</a></sup></strong>是一種隨機化算法。當一個問題的方案數量極大（甚至是無窮的）而且不是一個單峰函數時，我們常使用模擬退火求解。</p>
<h3 id="Implement"><a href="#Implement" class="headerlink" title="Implement"></a>Implement</h3><p>根據<strong>爬山算法<sup><a href="#fn_2" id="reffn_2">2</a></sup></strong>的過程，我們發現：對於一個當前最優解附近的非最優解，爬山算法直接捨去了這個解。而很多情況下，我們需要去接受這個非最優解從而跳出這個局部最優解，即為模擬退火算法。</p>
<blockquote><p>什麼是退火？</p>
<p>退火是一種金屬熱處理工藝，指的是將金屬緩慢加熱到一定溫度，保持足夠時間，然後以適宜速度冷卻。目的是降低硬度，改善切削加工性；消除殘餘應力，穩定尺寸，減少變形與裂紋傾向；細化晶粒，調整組織，消除組織缺陷。準確的說，退火是一種對材料的熱處理工藝，包括金屬材料、非金屬材料。而且新材料的退火目的也與傳統金屬退火存在異同。</p>
<footer><strong>百度百科詞條</strong><cite><a href="https://baike.baidu.com/item/退火/1039313">退火</a></cite></footer></blockquote>
<p>由於退火的規律引入了更多隨機因素，那麼我們得到最優解的概率會大大增加。於是我們可以去模擬這個過程，將目標函數作為能量函數。</p>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>先用一句話概括：如果新狀態的解更優則修改答案，否則以一定概率接受新狀態。</p>
<p>我們定義當前溫度為<code>T</code>，新狀態與已知狀態（由已知狀態通過隨機的方式得到）之間的能量（值）差為<code>ΔE</code>（<code>E&gt;=0</code>），則發生狀態轉移（修改最優解）的概率為</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">P(ΔE) = <span class="number">1</span> <span class="keyword">if</span> 新狀態更優 <span class="keyword">else</span> exp(-(ΔE) / T)</span><br></pre></td></tr></table></figure>
<ul>
<li>注意：我們有時為了使得到的解更有質量，會在模擬退火結束後，以當前溫度在得到的解附近多次隨機狀態，嘗試得到更優的解（其過程與模擬退火相似）。</li>
</ul>
<h3 id="Annealing"><a href="#Annealing" class="headerlink" title="Annealing"></a>Annealing</h3><p>如何退火（降溫）？</p>
<p>模擬退火時我們有三個參數：初始溫度<code>T_0</code>，降溫係數<code>d</code>，終止溫度<code>T_k</code>。其中<code>T_0</code>是一個比較大的數，<code>d</code>是一個非常接近<code>1</code>但是小於<code>1</code>的數，<code>T_k</code>是一個接近<code>0</code>的正數。</p>
<p>首先讓溫度<code>T = T_0</code>，然後按照上述步驟進行一次轉移嘗試，再讓<code>T = d·T</code>。當<code>T &lt; T_k</code>時模擬退火過程結束，當前最優解即為最終的最優解。</p>
<p>注意為了使得解更為精確，我們通常不直接取當前解作為答案，而是在退火過程中維護遇到的所有解的最優值。</p>
<p>引用一張 <a href="https://en.wikipedia.org/wiki/Simulated_annealing">Wiki - Simulated annealing</a> 的圖片（隨著溫度的降低，跳躍越來越不隨機，最優解也越來越穩定）。</p>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P1337">Luogu P1337</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">10005</span>;</span><br><span class="line"><span class="keyword">int</span> n, x[N], y[N], w[N];</span><br><span class="line"><span class="keyword">double</span> ansx, ansy, dis;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Rand</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> (<span class="keyword">double</span>)<span class="built_in">rand</span>() / RAND_MAX; &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calc</span><span class="params">(<span class="keyword">double</span> xx, <span class="keyword">double</span> yy)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">double</span> res = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">    <span class="keyword">double</span> dx = x[i] - xx, dy = y[i] - yy;</span><br><span class="line">    res += <span class="built_in">sqrt</span>(dx * dx + dy * dy) * w[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (res &lt; dis) dis = res, ansx = xx, ansy = yy;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">simulateAnneal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">double</span> t = <span class="number">100000</span>;</span><br><span class="line">  <span class="keyword">double</span> nowx = ansx, nowy = ansy;</span><br><span class="line">  <span class="keyword">while</span> (t &gt; <span class="number">0.001</span>) &#123;</span><br><span class="line">    <span class="keyword">double</span> nxtx = nowx + t * (<span class="built_in">Rand</span>() * <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">double</span> nxty = nowy + t * (<span class="built_in">Rand</span>() * <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">double</span> delta = <span class="built_in">calc</span>(nxtx, nxty) - <span class="built_in">calc</span>(nowx, nowy);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">exp</span>(-delta / t) &gt; <span class="built_in">Rand</span>()) nowx = nxtx, nowy = nxty;</span><br><span class="line">    t *= <span class="number">0.97</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1000</span>; ++i) &#123;</span><br><span class="line">    <span class="keyword">double</span> nxtx = ansx + t * (<span class="built_in">Rand</span>() * <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">double</span> nxty = ansy + t * (<span class="built_in">Rand</span>() * <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">calc</span>(nxtx, nxty);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x[i], &amp;y[i], &amp;w[i]);</span><br><span class="line">    ansx += x[i], ansy += y[i];</span><br><span class="line">  &#125;</span><br><span class="line">  ansx /= n, ansy /= n, dis = <span class="built_in">calc</span>(ansx, ansy);</span><br><span class="line">  <span class="built_in">simulateAnneal</span>();</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%.3lf %.3lf\n&quot;</span>, ansx, ansy);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Monotonous-Queue"><a href="#Monotonous-Queue" class="headerlink" title="Monotonous Queue"></a>Monotonous Queue</h2><p>參見<a href="https://oi-wiki.org/ds/monotonous-queue/"><code>OI-Wiki</code>相關章節</a><sup><a href="#fn_3" id="reffn_3">3</a></sup>。</p>
<h2 id="Attentions"><a href="#Attentions" class="headerlink" title="Attentions"></a>Attentions</h2><p>以下是注意事項噠！</p>
<ul>
<li><p><em>负数取模 ! ! !</em></p>
</li>
<li><p><code>多组数据赋初值</code></p>
</li>
<li><p><em>变量名 ! ! !</em></p>
</li>
<li><p><em>正难则反 ! ! !</em></p>
</li>
<li><p><strong>数组越界 ! ! ! !</strong></p>
</li>
<li><p><code>无向图双倍maxn</code></p>
</li>
<li><p><strong><em>要有梦想 ! ! ! ! ! !</em></strong></p>
</li>
<li><p><strong><em><code>NOIP2018.RP++</code></em></strong></p>
</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://oi-wiki.org/misc/simulated-annealing/"><code>OI-Wiki</code> 章節 模擬退火</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <a href="https://oi-wiki.org/misc/hill-climbing/"><code>OI-Wiki</code> 章節 爬山算法</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. <a href="https://oi-wiki.org/ds/monotonous-queue/"><code>OI-Wiki</code> 章節 單調隊列</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
</search>
