<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>新时代中国特色社会主义思想 相关</title>
    <url>/next-nest/2022/01/03/Socialism-with-Chinese-Characteristics-in-the-New-Era/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>八个明确与十四个坚持</p>
<span id="more"></span>
<p><img src="/next-nest/2022/01/03/Socialism-with-Chinese-Characteristics-in-the-New-Era/outline.jpeg" alt></p>
<h2 id="header2-8-clarifications">八个明确</h2>

<ol>
<li>明确坚持和发展中国特色社会主义，总任务是实现社会主义现代化和中华民族伟大复兴，在全面建成小康社会的基础上，分两步走在本世纪中叶建成富强民主文明和谐美丽的社会主义现代化强国;</li>
<li>明确新时代我国社会主要矛盾是人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾，必须坚持以人民为中心的发展思想，不断促进人的全面发展、全体人民共同富裕;</li>
<li>明确中国特色社会主义事业总体布局是“五位一体”、战略布局是“四个全面”，强调坚定道路自信、理论自信、制度自信、文化自信;</li>
<li>明确全面深化改革总目标是完善和发展中国特色社会主义制度、推进国家治理体系和治理能力现代化;</li>
<li>明确全面推进依法治国总目标是建设中国特色社会主义法治体系、建设社会主义法治国家;</li>
<li>明确党在新时代的强军目标是建设一支听党指挥、能打胜仗、作风优良的人民军队，把人民军队建设成为世界一流军队;</li>
<li>明确中国特色大国外交要推动构建新型国际关系，推动构建人类命运共同体;</li>
<li>明确中国特色社会主义最本质的特征是中国共产党领导，中国特色社会主义制度的最大优势是中国共产党领导，党是最高政治领导力量，提出新时代党的建设总要求，突出政治建设在党的建设中的重要地位;</li>
</ol>
<h2 id="header2-14-persistences">十四个坚持</h2>

<p><img src="/next-nest/2022/01/03/Socialism-with-Chinese-Characteristics-in-the-New-Era/14-persistences.jpeg" alt></p>
<ol>
<li>坚持党对一切工作的领导;</li>
<li>坚持以人民为中心;</li>
<li>坚持全面深化改革;</li>
<li>坚持新发展理念;</li>
<li>坚持人民当家作主;</li>
<li>坚持全面依法治国;</li>
<li>坚持社会主义核心价值体系;</li>
<li>坚持在发展中保障和改善民生;</li>
<li>坚持人与自然和谐共生;</li>
<li>坚持总体国家安全观;</li>
<li>坚持党对人民军队的绝对领导;</li>
<li>坚持“一国两制”和推进祖国统一;</li>
<li>坚持推动构建人类命运共同体;</li>
<li>坚持全面从严治党;</li>
</ol>
]]></content>
      <tags>
        <tag>考研政治</tag>
      </tags>
  </entry>
  <entry>
    <title>二叉樹筆記 I 基礎構造</title>
    <url>/next-nest/2021/11/22/bintree-01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>二叉樹的概念等基礎知識大部分已在離散數學中學過，在此不再重複或贅述。</p>
<span id="more"></span>
<h2 id="Basic-Construction"><a href="#Basic-Construction" class="headerlink" title="Basic Construction"></a>Basic Construction</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val; <span class="comment">// 亦可以其他數據類型，只需把`int`替換爲`float`或`char`等</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">parent</span>;</span> <span class="comment">// 指向母親節點的指針</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">lchild</span>;</span> <span class="comment">// 指向左女兒的指針</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">rchild</span>;</span> <span class="comment">// 指向右女兒的指針</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>爲了方便構造，我們使用向指針分配動態内存的形式來構造節點，申請方法很簡單，只需要</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> * <span class="title">newnode</span> =</span> (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br></pre></td></tr></table></figure>
<p>即可向名爲<code>newnode</code>的節點指針分配一個節點所需要的空間。</p>
<p>對於某一個節點所不具有的成分，我們讓指向該成分的指針指空，<br>例如在剛剛構造的時候，我們往往不知道它的左右女兒是誰，此時就讓它的左右女兒皆指空</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line">newnode-&gt;lchild = <span class="literal">nullptr</span>;</span><br><span class="line">newnode-&gt;rchild = <span class="literal">nullptr</span>;</span><br></pre></td></tr></table></figure>
<p>又如對於沒有母親節點的根節點，其母親指針亦作指控處理，我們在構造之時往往操作如下</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line">root-&gt;parent = <span class="literal">nullptr</span>;</span><br></pre></td></tr></table></figure>
<p>但是對於其他的節點，則需要設置它的母親節點，並在它的母親節點上設置左女兒或有女兒，<br>例如新節點<code>newnode</code>是節點<code>herparent</code>的左女兒，則操作如下</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line">newnode-&gt;parent = herparent;</span><br><span class="line">herparent-&gt;lchild = newnode;</span><br></pre></td></tr></table></figure>
<p>以此建立雙向連接，右女兒同理，只需要把<code>lchild</code>替換爲<code>rchild</code>。</p>
<p>根據離散數學中的相關知識，二叉樹<sup><a href="#fn_1" id="reffn_1">1</a></sup>中的節點可以分爲<strong>根(root)</strong>、<strong>莖</strong>、<strong>葉(leaf)</strong>，這三種節點。其中</p>
<ul>
<li>根：沒有母親的節點（這個描述聼上去怎麽那麽像在罵人x</li>
<li>葉：沒有女兒的節點</li>
<li>其他的既不是根亦不是葉，它們都既有母親亦有女兒</li>
</ul>
<p>此外，對於某些<code>莖</code>而言，它僅僅具有左子樹或右子樹，此時它的右女兒或左女兒指針指空。</p>
<p>至此，二叉樹的基本構造方法已講解完畢，下面會附贈一個實例，希望能有助於大家理解。</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>構造二叉樹如下</p>
<pre><code>root: 39 (根節點)
     /
    7
     \
      128
</code></pre><ul>
<li><p>如圖所示，根節點的值為<code>39</code>，其含有一個左女兒，值為<code>7</code>，該節點含有一個葉子作爲右女兒，其值為<code>128</code></p>
</li>
<li><p>解</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">parent</span>, *<span class="title">lchild</span>, *<span class="title">rchild</span>;</span></span><br><span class="line">&#125; *root, *node0, *node1;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 構造根節點，其值爲 39</span></span><br><span class="line">    root = (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">    root-&gt;val = <span class="number">39</span>;</span><br><span class="line">    root-&gt;parent = <span class="literal">nullptr</span>; <span class="comment">// 由於根節點沒有母親節點，所以母親指針指空</span></span><br><span class="line">    root-&gt;lchild = <span class="literal">nullptr</span>; <span class="comment">// 左右女兒待定，指空</span></span><br><span class="line">    root-&gt;rchild = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 構造根節點的左女兒，其值爲 7</span></span><br><span class="line">    node0 = (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">    node0-&gt;val = <span class="number">7</span>;</span><br><span class="line">    node0-&gt;parent = root; <span class="comment">// 它是根節點的左女兒，</span></span><br><span class="line">                          <span class="comment">//  但必須先聲明它本身的母親是根節點</span></span><br><span class="line">    node0-&gt;lchild = <span class="literal">nullptr</span>;</span><br><span class="line">    node0-&gt;rchild = <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 筆者個人認爲這裏需要多説一點</span></span><br><span class="line"><span class="comment">     *  剛才在設置根節點和 node0 的時候，統一把左右女兒皆進行指空處理</span></span><br><span class="line"><span class="comment">     *   即 root-&gt;lchild = root-&gt;rchild = nullptr;</span></span><br><span class="line"><span class="comment">     *   與 node0-&gt;lchild = node0-&gt;rchild = nullptr;</span></span><br><span class="line"><span class="comment">     *  這樣做背後的道理便是，在構造時刻，先假設它是一片葉子，</span></span><br><span class="line"><span class="comment">     *  如若還有女兒的話，再往上添加，像下面這一步</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    root-&gt;lchild = node0;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 構造該節點的右女兒，其值爲 128</span></span><br><span class="line">    node1 = (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">    node1-&gt;val = <span class="number">128</span>;</span><br><span class="line">    node1-&gt;parent = node0;</span><br><span class="line">    node1-&gt;lchild = <span class="literal">nullptr</span>;</span><br><span class="line">    node1-&gt;rchild = <span class="literal">nullptr</span>;</span><br><span class="line">    node0-&gt;rchild = node1;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 下面輸出幾個樹上節點的值，</span></span><br><span class="line"><span class="comment">     * 對於不知道是否存在的女兒，可以先檢查其是否存在，再進行操作處理</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (root-&gt;lchild != <span class="literal">nullptr</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, root-&gt;lchild-&gt;val);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The Node `root` has no children on the left!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (root-&gt;rchild != <span class="literal">nullptr</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, root-&gt;rchild-&gt;val);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The Node `root` has no children on the right!\n&quot;</span>);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 後面的就不檢查直接輸出了。</span></span><br><span class="line"><span class="comment">     * 由於我們設置的node1就是node0的右女兒，</span></span><br><span class="line"><span class="comment">     * 而node0又是root的左女兒，</span></span><br><span class="line"><span class="comment">     * 所以下面三個輸出的應該是同一個值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, node1-&gt;val);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, node0-&gt;rchild-&gt;val);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, root-&gt;lchild-&gt;rchild-&gt;val);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>輸出</p>
<pre><code>  7
  The Node `root` has no children on the right!
  128
  128
</code></pre></li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://baike.baidu.com/item/二叉树/1602879">百度百科詞條 二叉樹</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「阿良良木健】告白·三部神曲</title>
    <url>/next-nest/2021/12/08/atunemic-love3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p><a href="https://zh.moegirl.org.cn/末日DISCO"><strong>末日Disco</strong></a>是<em>世界最後的狂歡</em>，亦是<em>末日最後的頌歌</em>；<br><a href="https://zh.moegirl.org.cn/明日DISCO"><strong>明日Disco</strong></a>是<em>世界最初的重生</em>，亦是<em>明日最初的頌歌</em>；<br>如若<em>在下定了決心以後，在一切都太晚以前，我還能夠</em>説出<a href="https://zh.moegirl.org.cn/I_LOVE_U"><strong>I LOVE U</strong></a>，<br>那麽在<a href="https://zh.moegirl.org.cn/心加心"><strong>心加心</strong></a>的旋律中，就請<em>讓我們，走向幸福的結局</em>。</p>
<span id="more"></span>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>Vocaloid CHINA 創作結社 Atunemic 的告白·三部神曲是由<code>世界DISCO</code>(2012)、<code>I LOVE U</code>(2013)、<code>Hear the Heart</code>(<strong>心加心</strong>, 2016)三部分(及各部分包含的衍生曲目)所組成的Vocaloid中文原創系列曲目。其中第一部<code>世界DISCO</code>為雙生曲目，包含作品<code>末日DISCO</code>與<code>明日DISCO</code>，第二部<code>I LOVE U</code>包含兩首衍生曲目(<code>二人三角</code>與<code>依存症</code>)。</p>
<p>整個系列皆爲同一支由<code>阿良良木健</code>、<code>蒼十三</code>、<code>歷歷路路</code>組成的主創團隊的作品，並一直使用 洛天依V3<sup><a href="#fn_1" id="reffn_1">1</a></sup> 作爲Vocaloid音源。</p>
<p>從最初的末日DISCO發佈起，這些曲目便在bilibili上激發彈幕告白的風潮，因而<strong>阿良良木健</strong>從此被稱爲<code>告白P</code>。</p>
<h2 id="Staff"><a href="#Staff" class="headerlink" title="Staff"></a>Staff</h2><ul>
<li>Music: 阿良良木健<sup><a href="#fn_2" id="reffn_2">2</a></sup></li>
<li>Lyrics: 蒼十三</li>
<li>Tuning: 阿良良木健</li>
<li>Illustration: 歷歷路路<sup><a href="#fn_3" id="reffn_3">3</a></sup></li>
<li>PV: 阿良良木健</li>
<li>Vocal: <strong><em>洛 天依 (Vocaloid3)</em></strong></li>
</ul>
<h2 id="Sekai-DISCO"><a href="#Sekai-DISCO" class="headerlink" title="Sekai DISCO"></a>Sekai DISCO</h2><p>告白·三部神曲之一，世界DISCO。<br>包含<code>末日DISCO</code>與<code>明日DISCO</code>，兩首互爲雙生曲目。</p>
<h3 id="header3-destruct-disco">末日DISCO</h3>

<blockquote>
<p>世界最後的狂歡　末日最後的頌歌</p>
<pre><code>如果沒有明天 該怎麼告別
怎麼跟過去的我 說一句再見
就讓我靠近 你冰冷的臉
看這世界 在一瞬間毀滅
</code></pre></blockquote>
<p><strong><em>末日DISCO<sup><a href="#fn_4" id="reffn_4">4</a></sup></em></strong> 是<strong>阿良良木健</strong>於2012年12月14日、15日分別投稿至bilibili和YouTube的VOCALOID中文原創歌曲，由<strong>洛天依</strong>演唱，為 <strong><em>明日DISCO</em></strong> 的雙生歌曲與告白三部曲的首作。殿堂曲，截至筆者編輯時間<code>(2021年12月09日01時)</code>已有<code>35.03</code>万次觀看，<code>1.43</code>万人收藏。</p>
<blockquote>
<p>當明日消失，末日到來，世界至此開始毀滅倒數。如果下一秒就是世界末日，你，該怎麼做？</p>
</blockquote>
<ul>
<li><p>Origin Work</p>
  
    <div id="aplayer-lEDctSPM" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="28830335" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p>  <a href="https://www.bilibili.com/video/av415362/?p=1">Bilibili: <code>av415362</code></a></p>
</li>
<li><p>Lyrics</p>
  <figure class="highlight plaintext"><figcaption><span>末日DISCO 歌詞</span><a href="https://zh.moegirl.org.cn/末日DISCO#歌词">萌娘百科詞條 末日DISCO 歌詞</a></figcaption><table><tr><td class="code"><pre><span class="line">天地搖擺　雙眼布滿塵埃</span><br><span class="line">人群往來　碾碎菸灰捲起陰霾</span><br><span class="line">霓虹燈彩　映著臉頰蒼白</span><br><span class="line">染上了這一刻的色彩</span><br><span class="line"></span><br><span class="line">舞廳狂歡　誰在興奮等待</span><br><span class="line">旋律節拍　隨著時間一起崩壞</span><br><span class="line">當下一秒　就是末日到來</span><br><span class="line">還有什麼事情讓你無法釋懷</span><br><span class="line"></span><br><span class="line">曾追尋的　曾猶豫的</span><br><span class="line">曾有過的　所有遺憾</span><br><span class="line">就在此刻　大聲地都說出來</span><br><span class="line"></span><br><span class="line">明白　你那份跳動的愛</span><br><span class="line">別再　裝作著無所謂的姿態</span><br><span class="line">現在　就跟著節奏搖擺</span><br><span class="line">將所有的偽裝拋開</span><br><span class="line">趁著　月亮沒披上黑白</span><br><span class="line">趕快　向最愛的人大聲告白</span><br><span class="line">將那些期待全部推翻</span><br><span class="line">明天不會到來　別再等待</span><br><span class="line"></span><br><span class="line">好想繼續　當你嘆息回憶</span><br><span class="line">好想回去　當你哭著後悔曾經</span><br><span class="line">如果可以　你說如果可以</span><br><span class="line">讓我回去　你說那天不該放棄</span><br><span class="line"></span><br><span class="line">已經離開　已不存在</span><br><span class="line">就不要再　留戀依賴</span><br><span class="line">珍惜現在　每一秒鐘的痛快</span><br><span class="line"></span><br><span class="line">明白　你那份跳動的愛</span><br><span class="line">別再　裝作著無所謂的姿態</span><br><span class="line">現在　就跟著節奏搖擺</span><br><span class="line">將所有的偽裝拋開</span><br><span class="line">趁著　月亮沒披上黑白</span><br><span class="line">趕快　向最愛的人大聲告白</span><br><span class="line">將那些期待全部推翻</span><br><span class="line">明天不會到來　別再等待　別再等待</span><br><span class="line"></span><br><span class="line">如果沒有明天　該怎麼告別</span><br><span class="line">怎麼跟過去的我　說一句再見</span><br><span class="line">就讓我靠近　你冰冷的臉</span><br><span class="line">看這世界　在一瞬間毀滅</span><br><span class="line"></span><br><span class="line">所以　明白　你那份跳動的愛</span><br><span class="line">別再　裝作著無所謂的姿態</span><br><span class="line">現在　就跟著節奏搖擺</span><br><span class="line">將所有的偽裝拋開</span><br><span class="line">地球　再無法逃離混沌</span><br><span class="line">你還　是否愚昧等待著重生</span><br><span class="line">就在　末日降臨這一刻</span><br><span class="line">讓我來詠唱　這最後的歌　最後的歌</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="header3-rebirth-disco">明日DISCO</h3>

<blockquote>
<p>世界最初的重生　明日最初的頌歌</p>
<pre><code>燃燒的夢想是 最初的歌
相信自己 其實你眼光仍清澈
就在你許下 願望的那刻
讓那天空 鋪上絢麗的顏色
</code></pre></blockquote>
<p><strong><em>明日DISCO<sup><a href="#fn_5" id="reffn_5">5</a></sup></em></strong> 是<strong>阿良良木健</strong>於2012年12月26日和27日分別投稿至YouTube和bilibili的VOCALOID中文原創歌曲，由<strong>洛天依</strong>演唱，為 <strong><em>末日DISCO</em></strong> 的雙生歌曲與告白三部曲的首作。殿堂曲，截至筆者編輯時間<code>(2021年12月09日01時)</code>已有<code>21.40</code>万次觀看，<code>0.98</code>萬人收藏。</p>
<blockquote>
<p>當末日過去，明日到來，世界至此進入新的紀元。在這萬物復甦的嶄新時刻，你，有何願望？</p>
</blockquote>
<ul>
<li><p>Origin Work</p>
  
    <div id="aplayer-NQBOdlTI" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="28830336" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p>  <a href="https://www.bilibili.com/video/av424616/?p=1">Bilibili: <code>av424616</code></a></p>
</li>
<li><p>Lyrics</p>
  <figure class="highlight plaintext"><figcaption><span>明日DISCO 歌詞</span><a href="https://zh.moegirl.org.cn/明日DISCO#歌词">萌娘百科詞條 明日DISCO 歌詞</a></figcaption><table><tr><td class="code"><pre><span class="line">霧靄陰霾　轉眼消逝散開</span><br><span class="line">風雨離散　朝霞映上天際純白</span><br><span class="line">人潮澎湃　驚嘆陽光還在</span><br><span class="line">讚美著新世界的色彩</span><br><span class="line"></span><br><span class="line">光景未改　人群熙攘往來</span><br><span class="line">鐘錶指針　依舊行走不願停擺</span><br><span class="line">末日重生　既然心跳還在</span><br><span class="line">還有什麼事情讓你無法釋懷</span><br><span class="line"></span><br><span class="line">曾追尋的　曾期待的</span><br><span class="line">不要猶豫　就趁現在</span><br><span class="line">別再徘徊　追尋明天的光彩</span><br><span class="line"></span><br><span class="line">明白　你不願放棄的愛</span><br><span class="line">現在　沿途的風景依然精彩</span><br><span class="line">你的夢想從不會腐壞</span><br><span class="line">總會有天綻放花開</span><br><span class="line">趁著　月亮褪去了黑白</span><br><span class="line">趕快　總有人等你一句告白</span><br><span class="line">別怕　全世界都是舞台</span><br><span class="line">願望都許下了為何等待</span><br><span class="line"></span><br><span class="line">拿起畫筆　現在依舊可以</span><br><span class="line">寫下音符　描繪你自己的旋律</span><br><span class="line">有些文字　總能寫出傳奇</span><br><span class="line">看看鏡子　那是世上唯一的你</span><br><span class="line"></span><br><span class="line">就算錯過　就算失落</span><br><span class="line">也要讓我　重新來過</span><br><span class="line">人生短暫　但夢想永不消散</span><br><span class="line"></span><br><span class="line">明白　你不願放棄的愛</span><br><span class="line">現在　沿途的風景依然精彩</span><br><span class="line">你的夢想從不會腐壞</span><br><span class="line">總會有天綻放花開</span><br><span class="line">趁著　月亮褪去了黑白</span><br><span class="line">趕快　總有人等你一句告白</span><br><span class="line">別怕　全世界都是舞台</span><br><span class="line">願望都許下了　為何等待　別再等待</span><br><span class="line"></span><br><span class="line">燃燒的夢想是　最初的歌</span><br><span class="line">相信自己　其實你眼光仍清澈</span><br><span class="line">就在你許下　願望的那刻</span><br><span class="line">讓那天空　鋪上絢麗的顏色</span><br><span class="line"></span><br><span class="line">明白　你不願放棄的愛</span><br><span class="line">現在　沿途的風景依然精彩</span><br><span class="line">你的夢想從不會腐壞</span><br><span class="line">總會有天綻放花開</span><br><span class="line">其實　你不必對誰依賴</span><br><span class="line">路上　總會有坎坷崎嶇障礙</span><br><span class="line">就讓我用僅有的歌聲</span><br><span class="line">和你一起歌唱　最初的歌　最初的歌</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="header3-sekaidisco-opinions">Personal Opinions</h3>

<p>(在此，筆者願淺談自己對這首曲目的拙見。)</p>
<p>時間回溯到2012年。<br>根據考古學者的相關研究，人們發現了瑪雅文明所留下的如下預言：</p>
<pre><code>在2012年12月21日，地球將結束第四個並進入第五個“太陽紀”，人類中唯有修成正果的“真人”方能回到低緯度，繼續進行“天人合一”的遷徙生活。
</code></pre><p>縱使是截至筆者編輯此份檔案的時間，仍然沒有相關科研結論能夠證明這份預言的真實性或合理性。但其語言中威慴力之大、描繪場景之恐怖，使得<code>2012年12月21日</code>被人們稱爲<strong>世界末日</strong>。<del>由此，這個事件為各路商家、媒體、電影製作公司挖掘出巨大商機，並催生了諸多如《2012》一樣的災難題材影片。</del></p>
<p>但是在這一對雙生曲目中，留下的唯有主創團隊的三個人對於<br>“如若末日真的降臨，有什麽重要的事尚未完成？”<br>“如若其後安然無恙，有什麽重要的事可以重來？”<br>這樣的問題的思考。</p>
<p>終於發現，其實對於作爲普通人的你我而言，重要的事情并沒有太多，但有些足以傾盡一生去爲之努力，有些將會決定一生。</p>
<p>告白這樣的事情顯然屬於後者。</p>
<p>在我們的生命中或許不會遇到諸如“世界末日”一樣毀滅一切、萬劫不復的災難，但是生活中早已習慣的日常卻是隨時可以被打破的：明天會發生什麽、下一秒會發生什麽，其實在你我真正迎來那個時刻之前，什麽都有可能發生，不論是你我知道的還是不知道的、你我能承受的還是無法接受的、意料之内的還是甚至情理之外的。。。</p>
<p>所以，還請珍惜當下尚且能夠把握的日常，還請不要浪費它，還請及時地邁出步伐，向心中所愛告白。</p>
<h2 id="I-LOVE-U"><a href="#I-LOVE-U" class="headerlink" title="I LOVE U"></a>I LOVE U</h2><blockquote>
<p>在下定了決心以後，在一切都太晚以前，我，只想要對你說!…<br>… I LOVE U</p>
</blockquote>
<p>告白·三部神曲之二， I LOVE U</p>
<pre><code>如果你可以肯定我的一片心意　如果你可以回應我的一個問題
如果你能夠願意請坐下來聆聽　這一份在我心底最深處的秘密
</code></pre><p><strong><em>I LOVE U<sup><a href="#fn_6" id="reffn_6">6</a></sup></em></strong> 是<strong>阿良良木健</strong>於2013年04月20日投稿至bilibili和Youtube的VOCALOID中文原創歌曲，由<strong>洛天依</strong>演唱，為告白三部曲的第二作，收錄於<strong>阿良良木健</strong>首張實體專輯<a href="https://zh.moegirl.org.cn/恋爱理论(专辑)"><strong>戀愛理論</strong></a>中。殿堂曲，截至筆者編輯時間<code>(2021年12月09日01時)</code>已有<code>68.92</code>万次觀看，<code>3.74</code>万次收藏。</p>
<p>本曲是一首溫馨向的告白歌曲。清新的旋律搭配少女心的歌詞與PV，呈現了戀愛的美好。</p>
<p>本曲在<a href="https://zh.moegirl.org.cn/周刊VOCALOID中文排行榜">周刊VOCALOID中文排行榜</a><a href="https://zh.moegirl.org.cn/周刊VOCALOID中文排行榜400">第400期</a>中獲得第23名，曾經是周刊VOCALOID中文排行榜主榜在榜時間距投稿時間最長的曲目（後被<a href="https://zh.moegirl.org.cn/三千世界鸦杀尽"><strong>三千世界鴉殺盡</strong></a>於443期打破）。</p>
<p>2019年07月12日舉辦的2019洛天依生日會演唱曲目之一。</p>
<h3 id="header3-iloveu-oriwork">Origin Work</h3>


    <div id="aplayer-hkHNYABt" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="427016438" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<ul>
<li><p>本家<a href="https://www.bilibili.com/video/av540768/">Bilibili: <code>av540768</code></a></p>
</li>
<li><p><strong>潛移默化P</strong>老師的Remix <a href="https://www.bilibili.com/video/av541198/">Bilibili: <code>av541198</code></a></p>
</li>
<li><p><strong>oCau</strong>老師的<a href="https://zh.moegirl.org.cn/IA"><strong>IA</strong></a>日語版</p>
  
    <div id="aplayer-BQRFNccc" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="429461621" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
</li>
</ul>
<h3 id="header3-iloveu-lyrics">Lyrics</h3>

<figure class="highlight plaintext"><figcaption><span>I LOVE U 歌詞</span><a href="https://zh.moegirl.org.cn/I_LOVE_U#歌词">萌娘百科詞條 I LOVE U 歌詞</a></figcaption><table><tr><td class="code"><pre><span class="line">如果你可以肯定我的一片心意　如果你可以回應我的一個問題</span><br><span class="line">如果你能夠願意請坐下來聆聽　這一份在我心底最深處的秘密</span><br><span class="line"></span><br><span class="line">午後的陽光照在你的眉梢　晴朗的就像你單純的微笑</span><br><span class="line">揚起的嘴角不敢讓你看到　有你在身旁是多麼的美妙</span><br><span class="line">有些小困擾在我身邊圍繞　也許得不到空想總是美好</span><br><span class="line">鎖定了目標直到無可救藥　卻鑽進死角不想從中逃掉</span><br><span class="line"></span><br><span class="line">懸在半空卻始終不敢確定　想不去想你卻始終無法忘記</span><br><span class="line">就算笑自己像小丑一樣滑稽　也只能夠不停繼續</span><br><span class="line"></span><br><span class="line">如果你可以肯定我的一片心意　如果你可以回應我的一個問題</span><br><span class="line">如果你願意相信我們這份默契　就讓我們用生命許下這個約定</span><br><span class="line">如果你能夠辨認我的一個眼神　如果你能夠確認我的一個疑問</span><br><span class="line">如果你能夠讓我相信夢想成真</span><br><span class="line">如果你能夠默認去承認　我這個偷偷喜歡你的人</span><br><span class="line"></span><br><span class="line">~ I LOVE U ~</span><br><span class="line"></span><br><span class="line">地球那麼小能讓我們遇到　原因也不少不止因為湊巧</span><br><span class="line">你注視著我我看著你傻笑　仿佛全世界靜止在這一秒</span><br><span class="line">遇到了苦惱你會幫我甩掉　你的煩心事也只有我知道</span><br><span class="line">明明是朋友卻比朋友更高　為何做不到心貼心的擁抱</span><br><span class="line"></span><br><span class="line">你的溫柔我小心翼翼收好　但我的心情你是否可以收到</span><br><span class="line">如果有一天你聽見我的心跳　希望你也能夠知道</span><br><span class="line"></span><br><span class="line">如果你可以肯定我的一片心意　如果你可以回應我的一個問題</span><br><span class="line">如果你願意相信我們這份默契　就讓我們用生命許下這個約定</span><br><span class="line">如果你能夠辨認我的一個眼神　如果你能夠確認我的一個疑問</span><br><span class="line">如果你能夠讓我相信夢想成真</span><br><span class="line">如果你能夠默認去承認　我這個默默喜歡你的人</span><br><span class="line"></span><br><span class="line">~ I LOVE U ~</span><br><span class="line"></span><br><span class="line">所以我決定不再掩飾著我自己　所以我就在這裡唱出我的旋律</span><br><span class="line">就算你會拒絕我也沒什麼關係　至少你在我心裡是永遠的記憶</span><br><span class="line">希望你可以回應我的那條訊息　希望你可以肯定我告白的勇氣</span><br><span class="line">期待著你會願意走出朋友關係</span><br><span class="line">期待著你能決定</span><br><span class="line">這一分這一秒這一刻走到一起</span><br><span class="line"></span><br><span class="line">~ I LOVE U ~</span><br></pre></td></tr></table></figure>
<h3 id="header3-iloveu-extra">Extra</h3>

<ol>
<li><p>在本曲目的pv中出現了各個語言中<code>我愛你</code>的表述，有位評論區的朋友記錄了下來</p>
 <blockquote><p>je t’aime ——French<br>ich liebe﻿ dich ——German<br>Σ ‘αγαπώ——Greek<br>Te amo——Spanish, Italian, Latin<br>Я люблю цябе——Russian<br>ฉันรักคุณ——Thai<br>T’estim ——Catalonian<br>사랑해요——Korean<br>Jag älskar dig——Swedish<br>אני אוהב אותך ——Hebrew<br>Kocham cię——Polish<br>Tôi yêu bạn——Vietnamese<br>أحبك——Arabic<br>Те сакам——macedonian<br>愛してる——Japanese<br>Ek is lief vir jou——Afrikaans<br>Ninakupenda——Swahili<br>ég elska þig—— Icelandic<br>aku cinta kamu—— Indonesian<br>Aš tave myliu——Lithuanian<br>szeretlek——Hungarian<br>Mahal kita——Filipino<br>Love tú——Irish<br>Mi﻿ amas vin——Esperanto<br>مجھے تم سے محبت ہے——Urdu<br>मैं तुमसे प्यार करता हूँ——Hindi<br>我爱你——Chinese<br>i love you——English<br>Love connects the world~ <code>(^ v ^)</code></p>
<footer><strong>視頻av540768評論區</strong><cite><a href="https://www.bilibili.com/video/av540768/#reply6488400">@喜依粉</a></cite></footer></blockquote>
</li>
</ol>
<h3 id="Love-Triangle"><a href="#Love-Triangle" class="headerlink" title="Love Triangle"></a>Love Triangle</h3><blockquote>
<p>我，不該去愛你。</p>
</blockquote>
<p><strong><em>I LOVE U</em></strong> 衍生曲目，續作之一。</p>
<p><strong><em>二人三角<sup><a href="#fn_7" id="reffn_7">7</a></sup></em></strong> 是<strong>阿良良木健</strong>於2015年8月5日投稿至bilibili和Youtube的VOCALOID中文原創歌曲，由<strong>洛天依</strong>主唱、<strong>樂正綾</strong>和聲，為網絡EP專輯《戀愛理論:序章》及<strong>阿良良木健</strong>首張實體專輯《戀愛理論》收錄曲。殿堂曲，截至筆者編輯時間<code>(2021年12月09日01時)</code>已有<code>22.36</code>万次觀看，<code>1.02</code>万人收藏。</p>
<p><em>歌曲講述的是單戀與三角戀的故事。女主分明知道自己和男主沒有情緣，卻偏要去愛他，從而造成了這心酸的三角關係。</em></p>
<ul>
<li><p>Origin Work</p>
  
    <div id="aplayer-HZsiFyal" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="33933173" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p>  <a href="https://www.bilibili.com/video/av2687815/?p=1">Bilibili: <code>av2687815</code></a></p>
</li>
<li><p>Lyrics</p>
  <figure class="highlight plaintext"><figcaption><span>二人三角 歌詞</span><a href="https://zh.moegirl.org.cn/二人三角#歌词">萌娘百科詞條 二人三角 歌詞</a></figcaption><table><tr><td class="code"><pre><span class="line">沒有辦法去預料也沒有一些徵兆</span><br><span class="line">不應該萌生的感情卻開始燃燒</span><br><span class="line">我在默默地祈禱逃離這無可救藥</span><br><span class="line">卻讓我不安定的心情又平添了煎熬</span><br><span class="line">總會去看見你和她溫柔的甜蜜</span><br><span class="line">然後想忘記你發現卻沒有意義</span><br><span class="line">總會去不經意活在你的影子裡</span><br><span class="line">演著孤單的喜劇</span><br><span class="line"></span><br><span class="line">想跟你一起到老在你身邊去依靠</span><br><span class="line">卻無法去靠近你擁著她的懷抱</span><br><span class="line">想念你那份微笑心裡卻有些糟糕</span><br><span class="line">想要去冷靜卻在心底無止境的哭號</span><br><span class="line">羨慕著你的姻緣　沉默嫉妒著冷笑</span><br><span class="line">不明白為何她跟你是良緣天造</span><br><span class="line">我想過我也知道你和我成真不了</span><br><span class="line">在這場單戀的感情里我只能是配角</span><br><span class="line"></span><br><span class="line">總會去看見你和她溫柔的甜蜜</span><br><span class="line">然後想忘記你發現卻沒有意義</span><br><span class="line">總會去不經意活在你的影子裡</span><br><span class="line">演著孤單的喜劇</span><br><span class="line"></span><br><span class="line">兩個人的愛情變成三角的原形</span><br><span class="line">是否要去放棄還是讓它去肆意</span><br><span class="line">就算我的心意換名譽一片狼藉</span><br><span class="line">也只想要你的心</span><br><span class="line"></span><br><span class="line">在這條小小小小路沒有了你　也許只有我走下去</span><br><span class="line">這世界有一種罪名　就是我不該去愛你</span><br><span class="line"></span><br><span class="line">兩個人的愛情變成三角的原形</span><br><span class="line">是否要去放棄還是讓它去肆意</span><br><span class="line">就算你已離去我也只想去沉浸</span><br><span class="line">在這戀愛的虛名</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Dependence-Syndrome"><a href="#Dependence-Syndrome" class="headerlink" title="Dependence Syndrome"></a>Dependence Syndrome</h3><blockquote>
<p>戀愛，是一種精神疾病。</p>
</blockquote>
<p><strong><em>I LOVE U</em></strong> 衍生曲目，續作之二。</p>
<p><strong><em>依存症<sup><a href="#fn_8" id="reffn_8">8</a></sup></em></strong> 是<strong>阿良良木健</strong>於2015年8月5日投稿至bilibili和Youtube的VOCALOID中文原創歌曲，由<strong>洛天依</strong>主唱、<strong>言和</strong>和聲，為網絡EP專輯《戀愛理論:序章》及<strong>阿良良木健</strong>首張實體專輯《戀愛理論》收錄曲。殿堂曲，截至筆者編輯時間<code>(2021年12月09日01時)</code>已有<code>55.65</code>万次觀看，<code>2.37</code>万次收藏。</p>
<p><em>本曲描述了兩個相反意象（護士天依和病號天依）由戀愛產生的依存心理，PV則以一種典型的蒙太奇手法講述著一個深層的故事。</em></p>
<p>本曲在投稿時並沒有足夠的信息，但由於PV中有較多的隱喻物件和場景，引起了觀眾的多種猜測。對此<strong>阿良良木健</strong>表示：「關於這首歌，我不會給出官方的解釋，就是希望能夠鼓勵各位繼續挖腦洞，提觀點。」但此前，<strong>阿良良木健</strong>在採訪中表示：「《依存症》講述的是『我』因為迷戀著一直喜歡的人，以至於不能自拔的故事。」這使得評論區中的「失戀糾結說」成為最可能的解釋。</p>
<p><del>值得一提的是，詞作之一<a href="https://zh.moegirl.org.cn/皓月(P主)"><strong>皓月</strong></a>表示，這首歌本來是寫給他女友的，然而直到分手了作品才發布。</del></p>
<p>此外PV中還有許多值得關注的細節：</p>
<ol>
<li>pv中護士天依懷有開心、害羞與憧憬的情緒，而病號天依則不安焦慮、表現出渴望。</li>
<li>病號天依和護士天依房間的擺設雖然不同，但位置是相同的。</li>
<li>護士天依帶上手套的畫面中，背景是病號天依和護士天依的剪影重疊。</li>
<li>影片開頭有數幀的文字<code>THIS IS TRANSITION</code>，結尾兩人牽手前有文字說明<code>LOVE IS THE END</code>。</li>
</ol>
<ul>
<li><p>Origin Work</p>
  
    <div id="aplayer-GgpghyrI" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="33933170" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p>  <a href="https://www.bilibili.com/video/av2687804/?p=1">Bilibili: <code>av2687804</code></a></p>
</li>
<li><p>Lyrics</p>
  <figure class="highlight plaintext"><figcaption><span>依存症 歌詞</span><a href="https://zh.moegirl.org.cn/依存症#歌词">萌娘百科詞條 依存症 歌詞</a></figcaption><table><tr><td class="code"><pre><span class="line">寫了一首小情歌想唱給你聽　聲音輕輕不想吵醒你夢中的旅行</span><br><span class="line">做了一隻小風鈴掛在你窗欞　鈴鈴叮叮清澈透明映著你的夢境</span><br><span class="line"></span><br><span class="line">總想去偷看著你在毫不經意　你的聲音一動一舉牽控我的呼吸</span><br><span class="line">每一次和你別離都倍感孤寂　如果思念是一種病是否我已晚期</span><br><span class="line"></span><br><span class="line">黃昏的天邊想你已經一整天</span><br><span class="line">夢繞魂牽　念著你名字入眠</span><br><span class="line">遙遠的夏天　不敢說的字眼</span><br><span class="line">我那麼戀你想念你　想許下我的永遠</span><br><span class="line"></span><br><span class="line">我對你依賴成迷　想不清哪些原理和原因</span><br><span class="line">你在糾纏我的思緒　讓我的天我的地都是你身影</span><br><span class="line">我對你依賴成迷　就算失去我也不想離去</span><br><span class="line">因為我會委屈沒有你</span><br><span class="line"></span><br><span class="line">我對你依賴成迷　卻只有默默隱藏著自己</span><br><span class="line">看著你漸漸地離去　到了最後也沒有問候的勇氣</span><br><span class="line">我對你依賴成迷　喜歡你自信開朗與風趣</span><br><span class="line">你像一個病菌　讓我難過也不能治癒</span><br><span class="line"></span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶      // LOVE IS PAIN</span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶      // LOVE IS POISON</span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶      // LOVE IS BITTER</span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶      // LOVE IS SICKNESS</span><br><span class="line"></span><br><span class="line">你跟我坐在一起卻沉默無語　不敢看著你的眼睛怕戳破了情緒</span><br><span class="line">你對我那些關心卻讓我擔心　你太完美我太悲劇不能配得上你</span><br><span class="line"></span><br><span class="line">傍晚的天邊想你已經一整夜</span><br><span class="line">夢繞魂牽　念著你名字入眠</span><br><span class="line">遙遠的夏天　不敢說的思念</span><br><span class="line">我那麼愛你想愛你　想親吻你的側臉</span><br><span class="line"></span><br><span class="line">我對你依賴成迷　想不清哪些原理和原因</span><br><span class="line">你在糾纏我的思緒　讓我的天我的地都是你身影</span><br><span class="line">我對你依賴成迷　就算失去我也不想離去</span><br><span class="line">因為我會委屈沒有你</span><br><span class="line"></span><br><span class="line">我對你依賴成迷　卻只有默默隱藏著自己</span><br><span class="line">看著你漸漸地離去　到了最後也沒有問候的勇氣</span><br><span class="line">我對你依賴成迷　喜歡你自信開朗與風趣</span><br><span class="line">你像一個病菌　讓我難過也不能治癒</span><br><span class="line"></span><br><span class="line">我對你依賴成迷　想不清哪些原理和原因</span><br><span class="line">當你對我不聞不理　我就沮喪像被風吹過的森林</span><br><span class="line">我對你依賴成迷　為了你我把自己都放低</span><br><span class="line">因為我好想去擁抱你</span><br><span class="line"></span><br><span class="line">我對你依賴成迷　希望你看到了我的心意</span><br><span class="line">我們之間有著默契　是完美的那一個化學的反應</span><br><span class="line">我對你依賴成迷　就像圍著你轉動的衛星</span><br><span class="line">你給我的微笑　讓我依存症無法痊癒</span><br><span class="line"></span><br><span class="line">&lt;-*- LOVE IS THE END -*-&gt;</span><br><span class="line"></span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶</span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶</span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶</span><br><span class="line">吶吶吶吶　吶吶吶吶吶吶</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Personal-Opinions"><a href="#Personal-Opinions" class="headerlink" title="Personal Opinions"></a>Personal Opinions</h3><p>(在此，筆者願淺談自己對這首曲目，及兩首衍生曲目的拙見。)</p>
<p>I LOVE U 是繼世界DISCO兩首曲目之後的，阿良良木健最先發佈的以告白與戀愛爲主題的曲目。<br>全曲曲風輕盈，描繪著戀愛少女積攢已久、希望得以釋放的向心儀之人告白的情感。<br>本作沒有上一部世界DISCO那樣宏大的世界末日／重生的背景，有的只有希望能夠打破的糾結的日常。<br>蒼十三老師的填詞由少女對心上人的描述逐漸轉向自己糾結的心情，最後為釋放與告白的刻畫，通過情感的愈發無法抑制來體現其愈發强烈。歷歷路路老師的曲繪更是渲染出完美契合旋律與言葉的氛圍。</p>
<p>根據阿良良木健本人的陳述，二人三角與依存症為 I LOVE U 的續作，但筆者認爲二人三角為假設的結局，依存症是建立在再之後的展望。</p>
<p>二人三角全程一圖流，所描繪的則是少女之所愛心有他屬，無法與少女相愛，在這樣 <del>扭曲(bushi)</del> 的背景下少女的心境。<br>“爲什麽，被選擇的不是我，而是那個女孩”<br>作爲三角戀的“第三方”，對於少女而言，這是無論如何也不想去接受的事實，但也是纏繞自身的問題。<br>最後的最後，少女陷入痛苦的泥沼，終於得到結論<br>“我不該去愛你。”</p>
<p>依存症是在此之後的故事。阿良良木健并未明確説明本曲目的意味，但是肯定了評論區中一位朋友的説法</p>
<blockquote><p>我也脑洞一下剧情。<br>两个天依或许并非意味着双重人格，而是两种心态。<br>由前作《二人三角》可知，天依原本喜欢的男生并没有接受她的告白，而是选择了阿绫，换句话说天依被那个男生抛弃了，她失恋了。<br>失恋使天依产生了两种不同的心态，一种是由病号天依所代表的“受到伤害，想要忘掉那个人”的心态，另外一种是由护士天依所代表的“仍然爱着那个人”的心态。<br>在整首曲子里病号天依的行为与护士天依越来越相似，其实意味着“仍然爱着那个人”的心态逐渐占据上风，而护士天依取出病号天依的心脏的行为意味着“仍然爱着那个人”的心态的胜利。<br>最终，两种本该互相对立的心态结合在一起，成为了依存症。<br>结尾部分出现的伤痕累累的病号天依，恐怕才是现实之中被依存症折磨得死去活来的天依吧。</p>
<footer><strong>視頻av2687804評論區</strong><cite><a href="https://www.bilibili.com/video/av2687804/#reply37360080">@ZJ12108333</a></cite></footer></blockquote>
<p>這位朋友的表述已然足夠清晰，由此我們可以看出，兩隻天依象徵著的兩種心態最終在對立中求得統一，達成了自己與自己的和解。</p>
<p>事實上，失戀，尤其是因自己在心上人心中比不上他人而導致的失戀，在這個世界上並不少見，不論是告白之前的糾結與困擾還是告白被拒的嫉妒與痛苦，都是難以避免的。<br>重要的是你我應該如何去看待它，如何與自己達成和解，<br>在第二部 I LOVE U 以及兩首衍生曲目中，阿良良木健、蒼十三與歷歷路路，三位老師爲你我帶來了屬於他們的答案。</p>
<h2 id="Hear-the-Heart"><a href="#Hear-the-Heart" class="headerlink" title="Hear the Heart"></a>Hear the Heart</h2><p>告白·三部神曲之三，心加心</p>
<pre><code>看白色花瓣飄逸　像星星落在水里
祝福的鐘聲響起　讓我們走向幸福的結局
</code></pre><p><strong><em>心加心<sup><a href="#fn_7" id="reffn_7">7</a></sup></em></strong> 是<strong>阿良良木健</strong>於2016年<ruby>05月20日<rt>我愛你</rt></ruby>投稿至bilibili的VOCALOID中文原創歌曲，由<strong>洛天依</strong>演唱，為告白三部曲的第三作，收錄於<strong>阿良良木健</strong>首張實體專輯《戀愛理論》中。殿堂曲，截至筆者編輯時間<code>(2021年12月09日01時)</code>已有<code>20.10</code>万次觀看，<code>1.33</code>万人收藏。</p>
<p>本曲是一首溫馨向的告白歌曲，<strong>阿良良木健</strong>特地邀請了各地區的網友投稿情書來參與製作PV，讓人體會到愛情中的感動與熱情。</p>
<h3 id="header3-heartheheart-oriwork">Origin Work</h3>


    <div id="aplayer-tArgocus" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="427016439" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<ul>
<li>本家<a href="https://www.bilibili.com/video/av4704467/">Bilibili: <code>av4704467</code></a></li>
</ul>
<h3 id="header3-heartheheart-lyrics">Lyrics</h3>

<figure class="highlight plaintext"><figcaption><span>心加心 歌詞</span><a href="https://zh.moegirl.org.cn/心加心#歌词">萌娘百科詞條 心加心 歌詞</a></figcaption><table><tr><td class="code"><pre><span class="line">世界有太多奇蹟教人不能言喻　像這一刻能夠遇見最好的你</span><br><span class="line">當我們從友情變成了愛情　甚至懷疑是否一切太容易</span><br><span class="line">曾經擔心自己會有什麼結局　但是緣分讓我們走在了一起</span><br><span class="line">看著你的眼睛我笑出聲音　想謝謝你能回應我的問題</span><br><span class="line"></span><br><span class="line">心加心太艱難雙手能牽在一起　從心底感嘆著能有這份運氣</span><br><span class="line">心貼心想這一刻擁在你懷裡　聆聽我稚嫩的心意</span><br><span class="line">一起去寫留給我們愛情的旋律　讓它去響徹在淡藍色的天際</span><br><span class="line">牽著手溫柔掌心觸摸著甜蜜　在傳遞心靈的感應</span><br><span class="line"></span><br><span class="line">所以我注視著你不用說太多言語　你一直傻笑仿佛都已經沉迷</span><br><span class="line">默許約定世界這刻都安靜　終於我沒有放棄等到了你</span><br><span class="line"></span><br><span class="line">世界有太多奇蹟教人不能言喻　像這一刻能夠遇見最好的你</span><br><span class="line">看著你的眼睛我笑出聲音　想謝謝你能回應我的問題</span><br><span class="line"></span><br><span class="line">心加心太艱難雙手能牽在一起　從心底感嘆著能有這份運氣</span><br><span class="line">心貼心想這一刻擁在你懷裡　聆聽我稚嫩的心意</span><br><span class="line">一起去寫留給我們愛情的旋律　讓它去響徹在淡藍色的天際</span><br><span class="line">牽著手溫柔掌心觸摸著甜蜜　在傳遞心靈的感應</span><br><span class="line"></span><br><span class="line">看白色花瓣飄逸　像星星落在水裡</span><br><span class="line">祝福的鐘聲響起　讓我們走向幸福的結局</span><br><span class="line"></span><br><span class="line">心加心太艱難雙手能牽在一起　從心底感嘆著能有這份運氣</span><br><span class="line">心貼心要永遠銘記那個期許　不辜負這一片心意</span><br><span class="line"></span><br><span class="line">所以我注視著你不用說太多言語　你一直傻笑仿佛都已經沉迷</span><br><span class="line">默許約定世界這刻都安靜　讓我們靠近見證幸福的降臨</span><br><span class="line"></span><br><span class="line">無比幸運好像經歷了夢境　你牽我的手我不經意間哭泣</span><br><span class="line">我們一起相互伴隨這生命　用一生證明一個永恆的美麗</span><br></pre></td></tr></table></figure>
<h3 id="header3-heartheheart-opinions">Personal Opinions</h3>

<p>(在此，筆者願淺談自己對這首曲目的拙見。)</p>
<p>這是<code>告白P</code>的告白·三部神曲的終篇。<br>三位老師筆下曲中的少女終於找到了屬於自己的真愛，一同走向聖殿。</p>
<p>至此，少女拾起勇氣，向心儀之人勇敢告白，雖然遭遇挫折，縱使面對萬劫不復的災難，她的意志也亦未曾動搖。經歷了這一整套過程之後，不論是誰都將在心中擁有自己對愛、對世界、對自己的理解。</p>
<p>在此，筆者也祝天下有情人終成 <del>姐弟(bushi)</del> 眷屬，但更重要的是，還請及時表達自己的心意。</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://zh.moegirl.org.cn/洛天依#V3">萌娘百科詞條 洛 天依 Vocaloid3</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <a href="https://zh.moegirl.org.cn/阿良良木健">萌娘百科詞條 阿良良木健</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. <a href="https://zh.moegirl.org.cn/歷歷路路">萌娘百科詞條 歷歷路路</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_4">
<sup>4</sup>. <a href="https://zh.moegirl.org.cn/末日DISCO">萌娘百科詞條 末日DISCO</a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_5">
<sup>5</sup>. <a href="https://zh.moegirl.org.cn/明日DISCO">萌娘百科詞條 明日DISCO</a><a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_6">
<sup>6</sup>. <a href="https://zh.moegirl.org.cn/I_LOVE_U">萌娘百科詞條 I LOVE U</a><a href="#reffn_6" title="Jump back to footnote [6] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_7">
<sup>7</sup>. <a href="https://zh.moegirl.org.cn/二人三角">萌娘百科詞條 二人三角</a>，官方英文名來自 <a href="https://vocaloidlyrics.fandom.com/wiki/二人三角_(Èr_Rén_Sānjiǎo)">Vocaloid Lyrics 詞條 二人三角</a><a href="#reffn_7" title="Jump back to footnote [7] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_8">
<sup>8</sup>. <a href="https://zh.moegirl.org.cn/依存症">萌娘百科詞條 依存症</a><a href="#reffn_8" title="Jump back to footnote [8] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_9">
<sup>9</sup>. <a href="https://zh.moegirl.org.cn/心加心">萌娘百科詞條 心加心</a><a href="#reffn_9" title="Jump back to footnote [9] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>VOCALOID</tag>
        <tag>VOCALOID China</tag>
        <tag>VOCALOID Comments &amp; Recommendations</tag>
        <tag>洛天依</tag>
        <tag>Atunemic (阿良良木健)</tag>
        <tag>Minco_P (歷歷路路)</tag>
        <tag>蒼十三</tag>
      </tags>
  </entry>
  <entry>
    <title>二叉樹筆記 II 樹的遍歷</title>
    <url>/next-nest/2021/11/23/bintree-02/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>前面講過了二叉樹的基本構造方法，於此我們來審察二叉樹的三種遍歷方法</p>
<ul>
<li>先序遍歷 <code>(preorder</code> traversal<code>, root-&gt;left-&gt;right)</code></li>
<li>中序遍歷 <code>(inorder</code> traversal<code>, left-&gt;root-&gt;right)</code></li>
<li>後序遍歷 <code>(postorder</code> traversal<code>, left-&gt;right-&gt;root)</code></li>
</ul>
<p>以<a href="https://www.luogu.com.cn/problem/P1305">洛谷 <code>P1305</code></a>的衍生題目<a href="http://noiclass.com/?page_id=11775">QUST <code>Q1295</code></a>爲例。</p>
<span id="more"></span>
<p>假設我們現在所得到的一棵二叉樹上節點的内容為整型數據，輸入為</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br><span class="line">0 1 4</span><br><span class="line">1 2 3</span><br><span class="line">2 -1 -1</span><br><span class="line">3 -1 -1</span><br><span class="line">4 5 8</span><br><span class="line">5 6 7</span><br><span class="line">6 -1 -1</span><br><span class="line">7 -1 -1</span><br><span class="line">8 -1 -1</span><br></pre></td></tr></table></figure>
<p>容易發現這是一棵擁有九個節點的二叉樹如下，其個節點上的<code>值</code>即爲該節點的編號</p>
<pre><code>root:   0   (根節點)
      /   \
    1       4
   / \     / \
  2   3   5   8
         / \
        6   7
</code></pre><h2 id="Construction"><a href="#Construction" class="headerlink" title="Construction"></a>Construction</h2><p>對於容量未知的二叉樹<sup><a href="#fn_1" id="reffn_1">1</a></sup>，我們會用一個足夠大的數組或者<code>vector</code>來存儲其節點</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">parent</span>, *<span class="title">lchild</span>, *<span class="title">rchild</span>;</span></span><br><span class="line">&#125; *root, *treenodes[<span class="number">393939</span>];</span><br></pre></td></tr></table></figure>
<p>在這道題目中，我們不僅把編號存儲到節點的<code>值</code>當中，同時也會放在數組中對應索引的位置</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != m; ++k) &#123;</span><br><span class="line">    <span class="keyword">int</span> idx, lch, rch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;idx, &amp;lch, &amp;rch);</span><br><span class="line">    <span class="keyword">if</span> (treenodes[idx] == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        <span class="comment">// 如若該節點不存在，則先構造該節點</span></span><br><span class="line">        treenodes[idx] = (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">        treenodes[idx]-&gt;val = idx;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (lch != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="comment">// 如若存在左子樹</span></span><br><span class="line">        <span class="keyword">if</span> (treenodes[lch] == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            <span class="comment">// 如若左女兒不存在，則先構造左女兒</span></span><br><span class="line">            treenodes[lch] = (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">            treenodes[lch]-&gt;val = lch;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 使節點與左女兒互相連接</span></span><br><span class="line">        treenodes[idx]-&gt;lchild = treenodes[lch]; <span class="comment">// 像節點聲明左女兒的位置</span></span><br><span class="line">        treenodes[lch]-&gt;parent = treenodes[idx]; <span class="comment">// 像左女兒聲明其母親即是該節點</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (rch != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="comment">// 右側處理同理類似</span></span><br><span class="line">        <span class="keyword">if</span> (treenodes[rch] == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">            treenodes[rch] = (struct Node *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(struct Node));</span><br><span class="line">            treenodes[rch]-&gt;val = rch;</span><br><span class="line">        &#125;</span><br><span class="line">        treenodes[idx]-&gt;rchild = treenodes[rch];</span><br><span class="line">        treenodes[rch]-&gt;parent = treenodes[idx];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Root Tracing, (從任何一個節點都可以)尋找這棵樹的根節點</span></span><br><span class="line">root = treenodes[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">while</span> (root-&gt;parent != <span class="literal">nullptr</span>)</span><br><span class="line">    <span class="comment">// 只要當前看到的節點還有母親，就向上爬</span></span><br><span class="line">    root = root-&gt;parent;</span><br></pre></td></tr></table></figure>
<p>此即主函數中構造這棵樹的方法。</p>
<h2 id="Traversal"><a href="#Traversal" class="headerlink" title="Traversal"></a>Traversal</h2><p>(以先序遍歷爲例)</p>
<p>先序遍歷的處理順序為<code>根-左-右</code>，</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://baike.baidu.com/item/二叉树/1602879">百度百科詞條 二叉樹</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>BST O</title>
    <url>/next-nest/2021/11/27/bintree-bst-01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p><code>BST</code>: Binary Search Tree, 二叉查找樹</p>
<p><code>BT</code>: Balanced Tree, 平衡樹</p>
<span id="more"></span>
<ul>
<li><code>OI-Wiki</code> 章節 <a href="https://oi-wiki.org/ds/bst/">二叉查找樹 簡介</a><ul>
<li><code>OI-Wiki</code> 章節 <a href="https://oi-wiki.org/ds/treap/">普通平衡樹 <code>Treap</code></a><ul>
<li><a href="https://www.luogu.com.cn/problem/P3369"><code>Luogu P3369</code> 「模板」普通平衡樹</a></li>
<li><a href="https://loj.ac/p/104/"><code>LOJ #104</code> 普通平衡樹</a></li>
<li><a href="https://ezoj.org.cn/problem/7/"><code>EZOJ #7</code> 「模板」普通平衡樹</a></li>
</ul>
</li>
<li><code>OI-Wiki</code> 章節 <a href="https://oi-wiki.org/ds/splay/">文藝平衡樹 <code>Splay</code></a><ul>
<li><a href="https://www.luogu.com.cn/problem/P3391"><code>Luogu P3391</code> 「模板」文藝平衡樹</a></li>
<li><a href="https://loj.ac/p/105/"><code>LOJ #105</code> 文藝平衡樹</a></li>
</ul>
</li>
<li><code>OI-Wiki</code> 章節 <a href="https://oi-wiki.org/ds/llrbt/">左偏紅黑樹</a></li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>Highlight!</title>
    <url>/next-nest/2021/10/24/code-highlight/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>To make sure that all the code blocks highlighted correctly. All the code samples are come from the demo of <a href="https://highlightjs.org/">https://highlightjs.org/</a> …</p>
<figure class="highlight plaintext"><figcaption><span>Sharing the World</span></figcaption><table><tr><td class="code"><pre><span class="line">Sharing our World</span><br><span class="line">Sharing our World</span><br><span class="line">I can see this future is right now</span><br><span class="line">Cause my voice is always going around</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#x27;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</span><br></pre></td></tr></table></figure>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="meta">#[derive(Debug)]</span></span><br><span class="line"><span class="keyword">pub</span> <span class="class"><span class="keyword">enum</span> <span class="title">State</span></span> &#123;</span><br><span class="line">    Start,</span><br><span class="line">    Transient,</span><br><span class="line">    Closed,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">impl</span> <span class="built_in">From</span>&lt;&amp;<span class="symbol">&#x27;a</span> <span class="built_in">str</span>&gt; <span class="keyword">for</span> State &#123;</span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">from</span></span>(s: &amp;<span class="symbol">&#x27;a</span> <span class="built_in">str</span>) -&gt; <span class="keyword">Self</span> &#123;</span><br><span class="line">        <span class="keyword">match</span> s &#123;</span><br><span class="line">            <span class="string">&quot;start&quot;</span> =&gt; State::Start,</span><br><span class="line">            <span class="string">&quot;closed&quot;</span> =&gt; State::Closed,</span><br><span class="line">            _ =&gt; <span class="built_in">unreachable!</span>(),</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;apples&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;count&quot;</span>: [<span class="number">12000</span>, <span class="number">20000</span>],</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: &#123;<span class="attr">&quot;text&quot;</span>: <span class="string">&quot;...&quot;</span>, <span class="attr">&quot;sensitive&quot;</span>: <span class="literal">false</span>&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;oranges&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;count&quot;</span>: [<span class="number">17500</span>, <span class="literal">null</span>],</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: &#123;<span class="attr">&quot;text&quot;</span>: <span class="string">&quot;...&quot;</span>, <span class="attr">&quot;sensitive&quot;</span>: <span class="literal">false</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span>(<span class="params">param1=<span class="string">&#x27;&#x27;</span>, param2=<span class="number">0</span></span>):</span></span><br><span class="line">    <span class="string">r&#x27;&#x27;&#x27;A docstring&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Gre\&#x27;ater&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span> + <span class="number">0b10l</span>) <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">&#x27;&#x27;&#x27;interpreter</span></span><br><span class="line"><span class="string"><span class="meta">... </span>prompt&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">width</span>: <span class="number">500px</span>;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;application/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">$init</span>(<span class="params"></span>) </span>&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">checked</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span> <span class="attr">id</span>=<span class="string">&#x27;title&#x27;</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- here goes the rest of the page --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$initHighlight</span>(<span class="params">block, cls</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (cls.search(<span class="regexp">/\bno\-highlight\b/</span>) != -<span class="number">1</span>)</span><br><span class="line">      <span class="keyword">return</span> process(block, <span class="literal">true</span>, <span class="number">0x0F</span>) +</span><br><span class="line">             <span class="string">` class=&quot;<span class="subst">$&#123;cls&#125;</span>&quot;`</span>;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="comment">/* handle exception */</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> / <span class="number">2</span>; i &lt; classes.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (checkCondition(classes[i]) === <span class="literal">undefined</span>)</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&#x27;undefined&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">web-component</span>&gt;</span>&#123;block&#125;<span class="tag">&lt;/<span class="name">web-component</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> $initHighlight;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="number">0</span>; i &lt; <span class="number">0xFFFF</span>; i++)</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class="line">  <span class="keyword">char</span> c = <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class="line">  m[<span class="string">&quot;key&quot;</span>] = <span class="string">&quot;\\\\&quot;</span>; <span class="comment">// this is an error</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">-2e3</span> + <span class="number">12l</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;topic&quot; (</span><br><span class="line">    &quot;id&quot; serial <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    &quot;forum_id&quot; <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    &quot;subject&quot; <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &quot;topic&quot;</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> forum_id <span class="keyword">FOREIGN</span> KEY (&quot;forum_id&quot;)</span><br><span class="line"><span class="keyword">REFERENCES</span> &quot;forum&quot; (&quot;id&quot;);</span><br><span class="line"><span class="comment">-- Initials</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> &quot;topic&quot; (&quot;forum_id&quot;, &quot;subject&quot;)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">2</span>, <span class="string">&#x27;D&#x27;&#x27;artagnian&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&quot;Dependency.h&quot;</span></span></span><br><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">WorldDataSource</span></span></span><br><span class="line"><span class="keyword">@optional</span></span><br><span class="line">- (<span class="built_in">NSString</span>*)worldName;</span><br><span class="line"><span class="keyword">@required</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)allowsToLive;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSString</span> *title;</span><br><span class="line">- (<span class="keyword">IBAction</span>) show;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> John Smith &lt;john.smith@example.com&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> l2f.gameserver.model;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">L2Char</span> <span class="keyword">extends</span> <span class="title">L2Object</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Short ERROR = <span class="number">0x0001</span>;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">moveTo</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span> </span>&#123;</span><br><span class="line">    _ai = <span class="keyword">null</span>;</span><br><span class="line">    log(<span class="string">&quot;Should not be called&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span> &gt; <span class="number">5</span>) &#123; <span class="comment">// wtf!?</span></span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">@objc</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span>: <span class="title">Entity</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> name: <span class="type">String</span>!</span><br><span class="line">  <span class="keyword">var</span> age:  <span class="type">Int</span>!</span><br><span class="line">  <span class="function"><span class="keyword">init</span>(<span class="params">name</span>: <span class="type">String</span>, <span class="params">age</span>: <span class="type">Int</span>)</span> &#123;</span><br><span class="line">    <span class="comment">/* <span class="comment">/* ... */</span> */</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// Return a descriptive string for this person</span></span><br><span class="line">  <span class="function"><span class="keyword">func</span> <span class="title">description</span>(<span class="params">offset</span>: <span class="type">Int</span> <span class="operator">=</span> <span class="number">0</span>)</span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;<span class="subst">\(name)</span> is <span class="subst">\(age <span class="operator">+</span> offset)</span> years old&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: Chunkfive; <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;Chunkfive.otf&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span>, <span class="selector-class">.usertext</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#F0F0F0</span>; <span class="attribute">background</span>: <span class="number">#600</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Chunkfive, sans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@import</span> url(print.css);</span><br><span class="line"><span class="keyword">@media</span> print &#123;</span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-attr">[href^=http]</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="built_in">attr</span>(href)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The Greeter class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Greeter</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">(name)</span></span></span><br><span class="line">    <span class="variable">@name</span> = name.capitalize</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">salute</span></span></span><br><span class="line">    puts <span class="string">&quot;Hello <span class="subst">#&#123;<span class="variable">@name</span>&#125;</span>!&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">g = Greeter.new(<span class="string">&quot;world&quot;</span>)</span><br><span class="line">g.salute</span><br></pre></td></tr></table></figure>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Makefile</span></span><br><span class="line">BUILDDIR      = _build</span><br><span class="line">EXTRAS       ?= <span class="variable">$(BUILDDIR)</span>/extras</span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: main clean</span></span><br><span class="line"><span class="section">main:</span></span><br><span class="line">	@echo <span class="string">&quot;Building main facility...&quot;</span></span><br><span class="line">	build_main <span class="variable">$(BUILDDIR)</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">	rm -rf <span class="variable">$(BUILDDIR)</span>/*</span><br></pre></td></tr></table></figure>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">float64</span>)</span><br><span class="line">    ch &lt;- <span class="number">1.0e10</span>    <span class="comment">// magic number</span></span><br><span class="line">    x, ok := &lt;- ch</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">`exitting now\`</span>)</span><br><span class="line">    <span class="keyword">go</span> <span class="built_in">println</span>(<span class="built_in">len</span>(<span class="string">&quot;hello world!&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">###### CONFIG</span></span><br><span class="line">ACCEPTED_HOSTS=<span class="string">&quot;/root/.hag_accepted.conf&quot;</span></span><br><span class="line">BE_VERBOSE=<span class="literal">false</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$UID</span>&quot;</span> -ne 0 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Superuser rights required&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="function"><span class="title">genApacheConf</span></span>()&#123;</span><br><span class="line">  <span class="built_in">echo</span> -e <span class="string">&quot;# Host <span class="variable">$&#123;HOME_DIR&#125;</span><span class="variable">$1</span>/<span class="variable">$2</span> :&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">; boilerplate</span></span><br><span class="line"><span class="section">[package]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;some_name&quot;</span></span><br><span class="line"><span class="attr">authors</span> = [<span class="string">&quot;Author&quot;</span>]</span><br><span class="line"><span class="attr">description</span> = <span class="string">&quot;This is \</span></span><br><span class="line"><span class="string">a description&quot;</span></span><br><span class="line"><span class="section">[[lib]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="variable">$&#123;NAME&#125;</span></span><br><span class="line"><span class="attr">default</span> = <span class="literal">True</span></span><br><span class="line"><span class="attr">auto</span> = <span class="literal">no</span></span><br><span class="line"><span class="attr">counter</span> = <span class="number">1_000</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>測試Testing!</tag>
      </tags>
  </entry>
  <entry>
    <title>(未完成!!)「上原步夢】 Say Good-Bye 涙 (Solo3) &amp; Break the System (Solo4) 曲推</title>
    <url>/next-nest/2021/11/02/comments-ayumu-solo03-solo04/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><div class="note warning">
            <h2 id="Attention"><a href="#Attention" class="headerlink" title="Attention!!"></a>Attention!!</h2><p>本篇尚未完成。</p>
          </div>
<pre><code>特別じゃない　普通の女の子
だって変われるんだ絶対
</code></pre><p>我並不特別　只是個普通的女孩<br>縱使是這樣的我　也是絕對能夠改變的</p>
<pre><code>託された願い　最上階まで
</code></pre><p>寄托我以心愿　我将直上巅峰</p>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><a href="https://zh.moegirl.org.cn/Say_Good-Bye_泪" title="萌娘百科詞條 Say Good-Bye 涙"><strong><em>Say Good-Bye 涙</em></strong></a> 與 <a href="https://zh.moegirl.org.cn/Break_The_System" title="萌娘百科詞條 Break the System"><strong><em>Break the System</em></strong></a> 分別是虹咲學園學園偶像同好會第三張專輯《<a href="https://zh.moegirl.org.cn/Just_Believe!!!(专辑)">Just Believe!!!</a>》與第四張專輯《<a href="https://zh.moegirl.org.cn/L!L!L!_(Love_the_Life_We_Live)(专辑)">L! L! L! (Love the Life We Live)</a>》收錄曲之一，皆由 <a href="https://zh.moegirl.org.cn/上原步梦" title="萌娘百科詞條 上原 步夢"><strong><em>上原 步夢</em></strong></a> 演唱。</p>
<span id="more"></span>
<ul>
<li><h2 id="psi-maintitle">Say Good-Bye 涙</h2>

  <h3 id="psi-description">Description</h3>

<p>  <a href="https://zh.moegirl.org.cn/Say_Good-Bye_泪" title="萌娘百科詞條 Say Good-Bye 涙"><strong><em>Say Good-Bye 涙</em></strong></a> 在2020年6月4日的特別企劃「虹學音~樂週！」第2周中首次公開此歌曲的試聽。</p>
<blockquote>

    <div id="aplayer-CjVCjijz" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1834947989" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av498391399/">Bilibili: <code>av498391399</code></a></p>
</blockquote>
<p>  這首曲目一改步夢以往溫柔、緩慢、甜美、細緻的風格(參見步夢的出道曲目 <a href="https://zh.moegirl.org.cn/夢への一歩"><em>夢への一歩</em></a> 與曲目 <a href="https://zh.moegirl.org.cn/開花宣言"><em>開花宣言</em></a> )，轉而增強了靈動、帥氣與疾走感。</p>
<p>  在遊戲《<a href="https://zh.moegirl.org.cn/LoveLive!学园偶像祭ALL_STARS">LoveLive! All Stars</a>》劇情中步夢經歷與主人公的衝突、對過去的反思、拾起重新踏步向前的決心之後，把自己的決心化作這首歌。</p>
<p>  比起以往像是向主人公唱的情歌，從這裡開始，步夢所歌唱出的旋律中承載著自己及對學園偶像的思考。</p>
  <h3 id="psi-fromcomments">From Comments</h3>

<p>  在此，請允許筆者引用<a href="https://www.bilibili.com/video/av498391399/#comment"><code>av498391399</code>評論區</a>中的朋友們對這首曲目的解讀：</p>
  <blockquote><p>终于等到了，总觉得有些淡淡的迷茫感，但还是带着对未来的期待</p>
<p>个人感觉这首歌体现的是步梦心态的变化吧，结合AS最新一章的剧情看的话，之前步梦算有点走一步看一步的心态，偶像活动上比较依赖侑，而两人出现矛盾后，步梦也开始反思过去的经历，最后调整好了心态，打算继续前进的决心</p>
<p>结合现实中虹团经历的话，个人感觉，步梦、阿兔嘭的人气一直欠高，作为立德的角色，中之人的压力应该比较大的，今后动画和Live上应该会遇到更大的挑战。solo从“追逐梦想”、“开花宣言”转向“告别眼泪”，应该是表达出阿兔嘭现在怀着自信的精神，放下过去不快的经历，走向未来的未知舞台这一过程</p>
<footer><strong>av498391399評論區</strong><cite><a href="https://www.bilibili.com/video/av498391399/#reply2992065564">No.10字幕组成员@教父散香</a></cite></footer></blockquote>
  <blockquote><p>曲风更加积极，结合阿兔嘭从原x21成员到加入企划初期再到迷你live、first live、LL FES、宣布动画化、宣布2nd live。阿兔嘭变得更加积极更加充满希望，跟曲风很贴合。</p>
<footer><strong>av498391399評論區</strong><cite><a href="https://www.bilibili.com/video/av498391399/#reply2994319357">@老車長</a></cite></footer></blockquote>
  <h3 id="psi-lyrics">Lyrics</h3>

  <figure class="highlight plaintext"><figcaption><span>Say Good-Bye 涙 歌詞</span><a href="https://zh.moegirl.org.cn/Say_Good-Bye_泪#歌词">萌娘百科詞條 Say Good-Bye 涙</a></figcaption><table><tr><td class="code"><pre><span class="line">* 作詞・作曲: Akira Sunset</span><br><span class="line">* 編曲: 遠藤ナオキ</span><br><span class="line">* 翻譯: No.10字幕組</span><br><span class="line"></span><br><span class="line">今日が來るのが怖くて</span><br><span class="line">害怕明天的到來</span><br><span class="line">また眠れなくて</span><br><span class="line">輾轉反側無法入眠</span><br><span class="line">顔色も最悪だ</span><br><span class="line">臉色也蒼白無力</span><br><span class="line">自信がなくたって</span><br><span class="line">就算沒有自信</span><br><span class="line">全力でやれば伝わるはずだって</span><br><span class="line">只要盡了全力就能傳達到</span><br><span class="line"></span><br><span class="line">いつもそんな気持ちの私だけど</span><br><span class="line">總是懷著這種心情的自己</span><br><span class="line">あなたがくれる優しさに</span><br><span class="line">不知是否對你所給的溫柔</span><br><span class="line">寄りかかって　甘えていたのかな？</span><br><span class="line">產生了依賴　接收者你的好意</span><br><span class="line">この足で踏み出さなくちゃ</span><br><span class="line">得靠自己走出這困境</span><br><span class="line"></span><br><span class="line">もう涙なんか見せない</span><br><span class="line">直到夢想實現之日</span><br><span class="line">ため息だってつかない</span><br><span class="line">我將不再以淚洗面</span><br><span class="line">夢葉えるその日まで</span><br><span class="line">不再長吁短嘆</span><br><span class="line">次に涙流すのは</span><br><span class="line">下一次流淚將不會是獨自一人</span><br><span class="line">一人じゃなく皆一緒に</span><br><span class="line">而是與大家一起</span><br><span class="line">最高の景色を見る時だ</span><br><span class="line">看到最棒的景色之時　喜極而泣</span><br><span class="line">頼りなくてごめんねなんて</span><br><span class="line">對不起　我是如此不可靠</span><br><span class="line">もう二度と言わないよ絶対</span><br><span class="line">我不會再說出這種話了　絕對</span><br><span class="line"></span><br><span class="line">ほんの少しかもしれない</span><br><span class="line">也許真的微乎其微</span><br><span class="line">だけど確実に</span><br><span class="line">但它的確存在</span><br><span class="line">歩みは進んでるんだ</span><br><span class="line">我的步伐在緩步向前</span><br><span class="line">ここまで來れたなら</span><br><span class="line">都到了這一步了</span><br><span class="line">ゴールが見えなくたって怖くない</span><br><span class="line">即使沒有結果　我也不再害怕</span><br><span class="line"></span><br><span class="line">私のこと私が信じなくちゃ</span><br><span class="line">若是自己都不信任自己</span><br><span class="line">誰が信じてくれるの</span><br><span class="line">那麼誰還願意相信我呢</span><br><span class="line">もっと自信持って自分らしく</span><br><span class="line">更加自信才更加像我</span><br><span class="line">どんな時も笑顔でいよう</span><br><span class="line">無論何時都笑容滿面</span><br><span class="line"></span><br><span class="line">もう悲しくなんかないよ</span><br><span class="line">無論再發生怎樣的事</span><br><span class="line">例えどんなことがあっても</span><br><span class="line">我都不會再傷心難過</span><br><span class="line">心は決して折れない</span><br><span class="line">心也絕不會再受挫了</span><br><span class="line">未來だけを見つめてる</span><br><span class="line">一心只想抓住那未來</span><br><span class="line">振り返ったりはしない</span><br><span class="line">不再時而回首來路</span><br><span class="line">最高の思い出だけ連れて行こう</span><br><span class="line">只帶著最美好的記憶前行</span><br><span class="line">特別じゃない　普通の女の子</span><br><span class="line">我並不特別　只是個普通的女孩</span><br><span class="line">だって変われるんだ絶対</span><br><span class="line">縱使是這樣的我　也是絕對能夠改變的</span><br><span class="line"></span><br><span class="line">もう涙なんか見せない</span><br><span class="line">直到夢想實現之日</span><br><span class="line">ため息だってつかない我</span><br><span class="line">將不再以淚洗面</span><br><span class="line">夢葉えるその日まで</span><br><span class="line">不再長吁短嘆</span><br><span class="line">次に涙流すのは</span><br><span class="line">下一次流淚將不會是獨自一人</span><br><span class="line">一人じゃなく皆一緒に</span><br><span class="line">而是與大家一起</span><br><span class="line">最高の景色を見る時だ</span><br><span class="line">看到最棒的景色之時　喜極而泣</span><br><span class="line">頼りなくてごめんねなんて</span><br><span class="line">對不起　我是如此不可靠</span><br><span class="line">もう二度と言わないよ絶対</span><br><span class="line">我不會再說出這種話了　絕對</span><br></pre></td></tr></table></figure>
  <h3 id="psi-extra">Extra</h3>

<p>  筆者個人相信，<a href="https://zh.moegirl.org.cn/夢への一歩"><code>一</code></a><a href="https://zh.moegirl.org.cn/開花宣言"><code>步</code></a><a href="https://zh.moegirl.org.cn/Say_Good-Bye_泪"><code>一</code></a><a href="https://zh.moegirl.org.cn/Break_The_System"><code>步</code></a>地，經過大家的努力與熱愛，終將看到實現自己、看到喜愛她的人們、真正成爲偶像的 <a href="https://zh.moegirl.org.cn/上原步梦" title="萌娘百科詞條 上原 步夢"><strong><em>上原 步夢</em></strong></a> 。</p>
</li>
<li><h2 id="phi-maintitle">Break the System</h2>

  <h3 id="phi-description">Description</h3>

<p>  <a href="https://zh.moegirl.org.cn/Break_The_System" title="萌娘百科詞條 Break the System"><strong><em>Break the System</em></strong></a> 於2021年9月13日在遊戲LoveLive!學園偶像祭ALL STARS中初次公開。<br>  在LoveLive!學園偶像祭ALL STARS的角色羈絆劇情中， <a href="https://zh.moegirl.org.cn/上原步梦" title="萌娘百科詞條 上原 步夢"><strong><em>上原 步夢</em></strong></a> 體驗加入虹咲學園科幻研究部，並以此為主題創作了這首歌曲。</p>
  <h3 id="phi-lyrics">Lyrics</h3>

  <figure class="highlight plaintext"><figcaption><span>Break the System 歌詞</span><a href="https://zh.moegirl.org.cn/Break_The_System#歌词">萌娘百科詞條 Break the System</a></figcaption><table><tr><td class="code"><pre><span class="line">* 作詞・作曲: nana hatori, shun ÷1</span><br><span class="line">* 編曲: shun ÷1</span><br><span class="line">* 翻譯: 虹之咲字幕組</span><br><span class="line">  * 翻譯: 黒川Kira</span><br><span class="line">  * 校對: 桐原, 結他熊, 潮風</span><br><span class="line">  * 潤色: 尼洛</span><br><span class="line"></span><br><span class="line">＜絶対的全能システム＞</span><br><span class="line">&gt;&gt;&gt; 絕對的全能系統</span><br><span class="line">＜覆すアルゴリズム＞</span><br><span class="line">&gt;&gt;&gt; 顛覆的固定程式</span><br><span class="line">＜ノイズ塗れディストーション＞</span><br><span class="line">&gt;&gt;&gt; 噪聲滿溢歪曲變形</span><br><span class="line">＜出口の無いディメンション＞</span><br><span class="line">&gt;&gt;&gt; 此間次元全無出路</span><br><span class="line"></span><br><span class="line">記憶は鮮明で　まるで現実で</span><br><span class="line">記憶仍然鮮明 如同現實一般</span><br><span class="line">歯痒いほど懐かしい</span><br><span class="line">懷念得心急如焚</span><br><span class="line">当たり前なんて　存在しなくて</span><br><span class="line">並不存在什麼理所當然</span><br><span class="line">それでもキミはいつも眩しい光</span><br><span class="line">儘管如此你仍是那耀眼的光芒</span><br><span class="line"></span><br><span class="line">Ah 夢の中ならば</span><br><span class="line">Ah 如果身處夢境之中的話</span><br><span class="line">Ah 壊していけ　ルールなんて無いから</span><br><span class="line">Ah 那就將一切都破壞掉 規則根本就不存在</span><br><span class="line">狂い出すシステム</span><br><span class="line">系統 狂亂失序</span><br><span class="line">減少するエントロピー</span><br><span class="line">熵值 極速下跌</span><br><span class="line">切り開く　未来</span><br><span class="line">開闢嶄新的未來</span><br><span class="line"></span><br><span class="line">越えて行け　無限大へ</span><br><span class="line">向無限大處飛躍前進</span><br><span class="line">いま　解き放て</span><br><span class="line">如今解開所有束縛</span><br><span class="line">託された願い　最上階まで</span><br><span class="line">寄託我以心願 我將直上巔峰</span><br><span class="line">悪足掻きだって　未完成でも</span><br><span class="line">拚命掙扎也好 半途而廢也罷</span><br><span class="line">ベクトル定めて</span><br><span class="line">就要將宿命的矢量定下</span><br><span class="line">鮮やかに世界描いて</span><br><span class="line">鮮明地描繪出這世界</span><br><span class="line"></span><br><span class="line">-*- Break The System -*-</span><br><span class="line"></span><br><span class="line">＜絶対的全能システム＞</span><br><span class="line">&gt;&gt;&gt; 絕對的全能系統</span><br><span class="line">＜覆すアルゴリズム＞</span><br><span class="line">&gt;&gt;&gt; 顛覆的固定程式</span><br><span class="line">＜ノイズ塗れディストーション＞</span><br><span class="line">&gt;&gt;&gt; 噪聲滿溢歪曲變形</span><br><span class="line">＜出口の無いディメンション＞</span><br><span class="line">&gt;&gt;&gt; 此間次元全無出路</span><br><span class="line"></span><br><span class="line">一つの偶然が　奇跡のイレギュラー</span><br><span class="line">一次偶然 引發了奇蹟般的異常</span><br><span class="line">重なる磁石のように　引き寄せ合って</span><br><span class="line">如同重疊的磁石 相互吸引</span><br><span class="line">歪んだセオリーが　導く運命は</span><br><span class="line">歪曲的理論所引導的命運</span><br><span class="line">この手で破るパラドックス</span><br><span class="line">就是要用這雙手來打破的悖論</span><br><span class="line">邪魔はさせない</span><br><span class="line">任何人也休想攪擾</span><br><span class="line"></span><br><span class="line">Ah 無重力の大空へ</span><br><span class="line">Ah 向着無重力的遙遠天空</span><br><span class="line">Ah 飛ばしていけ　境界線超えるまで</span><br><span class="line">Ah 疾馳而上 直到飛越邊界</span><br><span class="line">暴走　崩壊寸前</span><br><span class="line">暴走 崩壞臨近</span><br><span class="line">想像絶する感情</span><br><span class="line">感情 難以想像</span><br><span class="line">立ち向かう　アンノウン</span><br><span class="line">對抗未知的命運</span><br><span class="line"></span><br><span class="line">変えていけ　不可逆性なら</span><br><span class="line">去顛覆改變  若是不可逆轉的規則</span><br><span class="line">見つけ出せ</span><br><span class="line">就去努力追尋吧</span><br><span class="line">消えそうなほど　微かな希望でも</span><br><span class="line">即使只有將要消逝的微薄的希望</span><br><span class="line">信じたその　心を</span><br><span class="line">那顆如此相信的心</span><br><span class="line">灯す輝きを</span><br><span class="line">點亮它的光芒</span><br><span class="line">必ず明日へ繋いで</span><br><span class="line">必定將延續到明天</span><br><span class="line"></span><br><span class="line">悲しみの　種からは</span><br><span class="line">從悲傷的種子裏</span><br><span class="line">強く儚い花が芽生える</span><br><span class="line">會開出堅強又脆弱易逝的花朵</span><br><span class="line">美しく　狂い咲く</span><br><span class="line">絢麗地盛開 盡情地怒放</span><br><span class="line">守るべき未来に　愛ある限りは</span><br><span class="line">在那理應守護的未來 只要還有愛存在</span><br><span class="line"></span><br><span class="line">だから</span><br><span class="line">所以</span><br><span class="line"></span><br><span class="line">越えて行け　無限大へ</span><br><span class="line">向無盡的遠方飛躍</span><br><span class="line">いま　解き放て</span><br><span class="line">如今解開所有束縛</span><br><span class="line">託された願い　最上階まで</span><br><span class="line">寄託我以心願 我將直上巔峰</span><br><span class="line">悪足掻きだって　未完成でも</span><br><span class="line">拚命掙扎也好 半途而廢也罷</span><br><span class="line">ベクトル定めて</span><br><span class="line">就要將宿命的矢量定下</span><br><span class="line">鮮やかに世界描いて</span><br><span class="line">鮮明地描繪出這世界</span><br><span class="line">信じたその　心を</span><br><span class="line">那顆如此相信的心</span><br><span class="line">灯す輝きを</span><br><span class="line">點亮它的光芒</span><br><span class="line">必ず明日へ繋いで</span><br><span class="line">必定將延續到明天</span><br></pre></td></tr></table></figure>
<p>  </p><h4 id="phi-lyrics-analysis">Analysis</h4><br>  其中在兩處間奏部分出現的四句歌詞的意指亦很有趣，在某種程度上可以解讀出曲目背後虛構故事的背景。<p></p>
  <details>
  <summary> 有興趣的朋友可以<code>點擊此處</code>閲讀以下相關筆記</summary>

  <pre><code>
  ＜絶対的全能<ruby>システム<rt>System</rt></ruby>＞              //=> 絕對的全能系統
  ＜覆す<ruby>アルゴリズム<rt>Algorithm</rt></ruby>＞                //=> 執行覆蓋算法
  ＜<ruby>ノイズ<rt>Noise</rt></ruby>塗れ<ruby>ディストーション<rt>Distortion</rt></ruby>＞      //=> 噪聲塗抹失真
  ＜出口の無い<ruby>ディメンション<rt>Dimension</rt></ruby>＞        //=> 沒有出口的維度
  </code></pre>

  <p>在此我們簡單介紹一下裏面提到的<ruby>覆蓋<rt>Covering</rt>算法<rt>Algorithm</rt></ruby>，這是<a href="https://baike.baidu.com/item/数据挖掘/216477">數據挖掘</a>當中面對分類任務，常用的一種模型。</p>

  <p>其實這個模型比起<a href="https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression">邏輯回歸</a>、<a href="https://scikit-learn.org/stable/modules/naive_bayes.html">樸素Bayes</a>或<a href="https://scikit-learn.org/stable/modules/svm.html#classification">SVM</a>這些在<a href="https://baike.baidu.com/item/机器学习/217599">機器學習</a>中常見的分類模型，它更像是一種<code>挑選機制</code>(雖説單就這點而言也有點<a href="https://scikit-learn.org/stable/modules/tree.html#classification">決策樹</a>的感覺)：具體地説這個模型的訓練過程的話，則是通過不斷地在全體個體中，<strong>逐個挑選</strong>符合條件的個體，<strong>提取它們的特徵</strong>，提取過特徵的個體會<strong>在使用後立即遺棄</strong>的方式，綜合生成適用於某一類個體的共同挑選規則，而不符合這一規則的個體即被視爲另類，所以説這個比起前面提到的常用模型，更像是一種<strong>規則驅動</strong>的機制。</p>

  <p>如若使用僞代碼的話，大概會表述如下：</p>

  <figure class="highlight cpp"><figcaption><span>覆蓋算法僞C++/js代碼</span></figcaption><table><tr><td class="code"><pre><span class="line">(D, Att_Vals) =&gt; &#123;</span><br><span class="line">    Rule_Set = &#123;&#125;; <span class="comment">//學習的規則集初試為空</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="class"><span class="keyword">class</span> <span class="title">do</span> &#123;</span></span><br><span class="line">        repeat &#123;</span><br><span class="line">            Rule = <span class="built_in">Learn_One_Rule</span>(D, Att_Vals, class);</span><br><span class="line">            <span class="comment">//根據特徵提取新的規則，然後刪除使用過的個體</span></span><br><span class="line">            從D中刪除被Rule覆蓋的元組;</span><br><span class="line">        &#125; <span class="built_in">until</span> (終止條件被滿足);</span><br><span class="line">        Rule_Set += Rule;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Rule_Set;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
  </details>

  <h3 id="phi-extra">Extra</h3>

</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>萌娘百科詞條 上原 步夢: <a href="https://zh.moegirl.org.cn/上原步梦">https://zh.moegirl.org.cn/上原步梦</a></li>
<li>萌娘百科詞條 Say Good-Bye 涙: <a href="https://zh.moegirl.org.cn/Say_Good-Bye_泪">https://zh.moegirl.org.cn/Say_Good-Bye_泪</a></li>
<li>萌娘百科詞條 Break the System: <a href="https://zh.moegirl.org.cn/Break_The_System">https://zh.moegirl.org.cn/Break_The_System</a></li>
<li>萌娘百科詞條 大西亞玖璃 (阿兔嘭): <a href="https://zh.moegirl.org.cn/大西亚玖璃">https://zh.moegirl.org.cn/大西亚玖璃</a></li>
<li>「中日双语字幕」虹咲三专 步梦solo Say Good-Bye 涙 <a href="https://www.bilibili.com/video/av498391399/">av498391399</a> 2020-06-04</li>
<li><code>leeshum</code> -「数据挖掘课程笔记」基于规则的分类-顺序覆盖算法（sequential covering algorithm）<a href="https://www.cnblogs.com/leeshum/p/4876025.html">https://www.cnblogs.com/leeshum/p/4876025.html</a></li>
<li><code>09120912zhang</code> - Covering Algorithms: Constructing Rules <a href="https://www.cnblogs.com/09120912zhang/p/7249574.html">https://www.cnblogs.com/09120912zhang/p/7249574.html</a></li>
<li><code>qq_42714369</code> - 第四章 算法：基础方法 覆盖算法 <a href="https://blog.csdn.net/qq_42714369/article/details/92228761/">https://blog.csdn.net/qq_42714369/article/details/92228761/</a></li>
</ol>
<p>文字內容引用遵守《知識共享 署名-非商業性使用-相同方式共享 3.0》協議。</p>
<style>/*NexT*/main.main>div.main-inner>div.content-wrap>div.content>article.post-block>div.post-body>ul{list-style-type:hebrew}main.main>div.main-inner>div.content-wrap>div.content>article.post-block>div.post-body>ul>li::marker{font-size:1.6em}</style>
]]></content>
      <tags>
        <tag>Virtual Idols (虛擬偶像)</tag>
      </tags>
  </entry>
  <entry>
    <title>「Superstar】Eps#12插入曲 Starlight Prologue 曲推</title>
    <url>/next-nest/2021/11/01/comments-starprologue/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><div class="note warning">
            <h2 id="Attention"><a href="#Attention" class="headerlink" title="Attention!!"></a>Attention!!</h2><p>第一次寫非VOCALOID曲目的曲推，有覺得寫得不好的地方請歡迎來懟我，<br>當然對於我覺得你說得不對的地方，我不保證不會懟回來</p>
          </div>
<blockquote><!-- lyrics in codeblock -->
<pre><code>Looking for light
いま動き始めた僕らの物語
どんな奇跡だって 起こすのさ
</code></pre><footer><strong>Liella!</strong><cite><a href="https://zh.moegirl.org.cn/Starlight_Prologue">Starlight Prologue</a></cite></footer></blockquote>
<p><img src="/next-nest/2021/11/01/comments-starprologue/starprologue-moment.jpeg" alt="Cover of &quot;Starlight Prologue&quot;, from av336162034"></p>
<p>(Cover Image from <a href="https://www.bilibili.com/video/av336162034/"><code>av336162034</code></a>)</p>
<h2 id="Intro-簡介"><a href="#Intro-簡介" class="headerlink" title="Intro (簡介)"></a>Intro (簡介)</h2><p><a href="https://zh.moegirl.org.cn/Starlight_Prologue" title="萌娘百科詞條 Starlight Prologue"><strong><em>Starlight Prologue</em></strong></a> <sup><a href="#fn_1" id="reffn_1">1</a></sup> 是《<a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!">LoveLive!Superstar!!</a>》电视动画第12囘的插曲，由 <a href="https://zh.moegirl.org.cn/Liella!" title="萌娘百科詞條 Liella!"><strong><em>Liella!</em></strong></a> <sup><a href="#fn_2" id="reffn_2">2</a></sup> 演唱，收录于动画第三张插入曲单曲《<a href="https://zh.moegirl.org.cn/Nonfiction!!_Starlight_Prologue">ノンフィクション!!/Starlight Prologue</a>》中。该单曲于2021年10月20日发售。</p>
<span id="more"></span>
<h2 id="Staff-製作組"><a href="#Staff-製作組" class="headerlink" title="Staff (製作組)"></a>Staff (製作組)</h2><ul>
<li>Lyrics (作詞): 宮嶋 淳子</li>
<li>Composition (作曲): 小幡 康裕</li>
<li>Arrangement (編曲): 山下 洋介</li>
<li>String Arrangement (管弦樂編曲): 兼松 眾</li>
</ul>
<h2 id="Miscellaneous-雜談"><a href="#Miscellaneous-雜談" class="headerlink" title="Miscellaneous (雜談)"></a>Miscellaneous (雜談)</h2><ol>
<li><p>本曲目爲番劇第12囘的Insertion，因此人們在對本曲目進行評價的時候經常與第12囘《Song for All》聯係在一起。<br> 該囘目因其中出現大量元素與<a href="https://zh.moegirl.org.cn/LoveLive!">LoveLive!</a><a href="https://zh.moegirl.org.cn/LoveLive!/TV动画作品#TV动画第二期">第二季</a><a href="https://www.bilibili.com/bangumi/play/ep80125/">第九囘《心之Melody》</a>衝撞性雷同，而被觀衆認定爲是編劇<a href="https://zh.moegirl.org.cn/花田十辉">花田十煇</a>複刻前作的產物。<br> 對應地，人們也常常把這首 <a href="https://zh.moegirl.org.cn/Starlight_Prologue" title="萌娘百科詞條 Starlight Prologue"><strong><em>Starlight Prologue</em></strong></a> 拿來和那一囘的插入曲目 <a href="https://zh.moegirl.org.cn/Snow_halation"><em>Snow Halation</em></a> <sup><a href="#fn_3" id="reffn_3">3</a></sup> 進行比較。<br> 在此，筆者不對劇情及與過往劇情相似部分作多餘評價。</p>
</li>
<li><p>這是本曲目在專輯中的封面:<img src="/next-nest/2021/11/01/comments-starprologue/cover-starprologue.jpeg" alt="Cover of the Album, Episode &quot;Starlight Prologue&quot;">封面的構圖與一單 <a href="https://zh.moegirl.org.cn/起始是你的天空"><strong><em>始まりは君の空</em></strong></a> <sup><a href="#fn_4" id="reffn_4">4</a></sup> <code>みんなで叶える物語盤(大家一起實現的故事盤)</code>封面的構圖完全一致;<img src="/next-nest/2021/11/01/comments-starprologue/始まりは君の空A.jpeg" alt="Cover of the Album &quot;Hajimari wa kimi no sora&quot; (始まりは君の空), Episode &quot;みんなで叶える物語&quot;">不僅如此，其與專輯<a href="https://zh.moegirl.org.cn/Nonfiction!!_Starlight_Prologue">Nonfiction!!/Starlight Prologue</a>兩款當中另一個盤的封面(曲目 <a href="https://zh.moegirl.org.cn/Nonfiction!!"><strong><em>Nonfiction!!</em></strong></a> <sup><a href="#fn_5" id="reffn_5">5</a></sup>)相比，<a href="https://zh.moegirl.org.cn/平安名堇"><strong>堇</strong></a>和<a href="https://zh.moegirl.org.cn/涩谷香音"><strong>香音</strong></a>所作的動作亦十分相近，皆是向紙面外方向伸出左手…<img src="/next-nest/2021/11/01/comments-starprologue/cover-nonfiction.jpeg" alt="Cover of the Album, Episode &quot;Nonfiction!!&quot;"></p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~">Liella! First LoveLive! Tour ~Starlines~</a><sup><a href="#fn_6" id="reffn_6">6</a></sup><a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#群马公演" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演)">群馬公演</a>的兩天(<a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day1（10.30）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day1)">Day1: Oct 30<sup>th</sup>, 2021</a> &amp; <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day2（10.31）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day2)">Day2: Oct 31<sup>st</sup>, 2021</a>)的節目單 <em><a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day1（10.30）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day1)">完</a> <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day2（10.31）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day2)">全</a> <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day1（10.30）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day1)">一</a> <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day2（10.31）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day2)">致</a></em> ，兩次都在第18首，亦即Encore前的倒數第二首的位置上。</p>
</li>
<li><p>截至筆者編輯時間(2021年11月2日)，本曲目已在<a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~">Liella! First LoveLive! Tour ~Starlines~</a> <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#群马公演" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演)">群馬公演</a>的兩天(<a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day1（10.30）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day1)">Day1: Oct 30<sup>th</sup>, 2021</a> &amp; <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day2（10.31）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day2)">Day2: Oct 31<sup>st</sup>, 2021</a>)各登場一次，在<a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~#Day2（10.31）" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~ (群馬公演, Day2)">Day2</a>的<strong>live現場、以及諸多民間轉播的場合</strong>，臺下的觀衆們通過應援棒變色自行復現了番劇中地面裝飾燈釋放金色輝光的瞬間，效果及其震撼——<strong>這是大家一起實現的故事！</strong><br> 下面的視頻為一處轉播點的觀衆實現變色的實錄<br> (官方主場當然也有實現變色啦…場外就有大佬在講解與組織變色的計劃，但是導播沒有錄上<del>建議和花田十煇一起放飛<span class="hidiv">，建議讓提出此囘高强度巡演的策劃駝著他倆飛，這家夥才是真的罪大惡極</span></del>。)</p>
 <iframe src="//player.bilibili.com/player.html?aid=933946661&bvid=BV1sT4y1d7Qg&cid=434180384&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

</li>
</ol>
<h2 id="My-Personal-Opinion"><a href="#My-Personal-Opinion" class="headerlink" title="My Personal Opinion"></a>My Personal Opinion</h2><p>(筆者在此淺談自己對這首曲目的看法。)</p>
<p>或許番劇劇情中有大量雷同、衝撞、致敬的成分，但與<em>Snow Halation</em>相比，<a href="https://zh.moegirl.org.cn/Starlight_Prologue" title="萌娘百科詞條 Starlight Prologue"><strong><em>Starlight Prologue</em></strong></a> 完全是背景、情感、風格、含義截然不同的另一首歌。<br>筆者在2015年入宅之時對<em>Snow Halation</em>有所耳聞，但當時并未深入研究，因此或許對於那支曲目并無太强的先入爲主之感。<br>在認真聽完兩首歌之後，在筆者個人看來，<em>Snow Halation</em>是<a href="https://zh.moegirl.org.cn/M&#39;s"><em>μ’s</em></a>成立已有較長時間，成員之間的羈絆趨於深厚，大家將自己的心願匯聚，共同化作的一首，大家共同完成的曲目，以此戰勝昔日的對手<a href="https://zh.moegirl.org.cn/A-RISE"><em>A-Rise</em></a>而挺進決賽。<br>但 <a href="https://zh.moegirl.org.cn/Starlight_Prologue" title="萌娘百科詞條 Starlight Prologue"><strong><em>Starlight Prologue</em></strong></a> 則是大家剛剛結成，準備出發的號角<span class="hidiv">(首 戰 敗 北)</span>，比起<em>Snow Halation</em>略帶悲傷的抒情<del>(在某些方面真的不輸通常意義上的情歌<span class="hidiv">，希：“計劃”通</span>)</del>，更多的是啓程時刻的希望與明亮之感。<br>如若真的要説這支曲目本身是在呼應誰的話，那麽筆者認爲應當是 <a href="https://zh.moegirl.org.cn/未来预报哈利路亚!"><strong><em>未来予報ハレルヤ！</em></strong></a> 。<br>正如歌詞中所説得一楊，如今， <a href="https://zh.moegirl.org.cn/Liella!" title="萌娘百科詞條 Liella!"><strong><em>Liella!</em></strong></a> 與<strong><em>喜歡Liella!的大家</em></strong>之間的故事才剛剛開始，到目前爲止，我們經厤著的有遺憾、有驚喜、也有滿足感，接下來，讓我們一起書寫下新的續篇。</p>
<h2 id="From-Comments-評論區精選"><a href="#From-Comments-評論區精選" class="headerlink" title="From Comments (評論區精選)"></a>From Comments (評論區精選)</h2><p>(在此，請允許筆者引用<a href="https://www.bilibili.com/video/av336162034/#comment"><code>av336162034</code>評論區</a>中，筆者認爲非常值得的幾條，分享給大家)</p>
<blockquote><p>开头每个人的solo都是在说自己和liella的故事啊！<br>可可:你我的相遇<br>香音:给予我莫大的勇气<br>堇:是你将我带到起跑线<br>千:但接下来就该轮到我了<br>恋:晴空万里的未来去创造吧！<br>我永远喜欢liella!</p>
<footer><strong>av336162034評論區</strong><cite><a href="https://www.bilibili.com/video/av336162034/#reply5602500769">@是南边呀</a></cite></footer></blockquote>
<blockquote><p>昨晚十二点半看完了最后一集…五味杂陈呀<br>目前（个人）认为曲调最好听的：私的幸福你≥wish song ≈ starlight≥未来预报<br>场面最震撼的：Tiny stars＝nonfiction ≥starlight<br>最有意义的：每一首歌</p>
<footer><strong>av336162034評論區</strong><cite><a href="https://www.bilibili.com/video/av336162034/#reply5609277803">@葫闹</a></cite></footer></blockquote>
<blockquote><p>随着12话的「Starlight Prologue」演出完成，星团的第一季圆满撒花，但真正的梦想不会止步于此的对吧？正如这集live的名字，星团在此刻唱响了星光般的「序曲」。每个人的信念，羁绊，成长，一点一点连结起来，转动着故事的齿轮，描绘着liella晴空万里的未来，想起最初看到朗读动画，看到第一集时对这次lovelive的期望与信心，如今我认为星团绝对做到了。尽管渺小，因为不是孤身一人，便能不放弃的向前，这样紧握着炽热信念的五人，追逐着同一个梦想，此般相遇如同是神赐予的吻。无论在哪一次元，liella的故事都刚刚翻开第一页，尽管会不安，犹豫，怀疑，但想要歌唱的心情将每一个团员心中怀抱的情感在五线谱上连结起来。而这个传递着热切希望的星团终会到达她们梦想中的彼方，school idol从第一话的无人问津到如今十二话登上梦中的舞台，她们最初的热爱便不再是虚构。<br>        感谢星团带给我的悸动，和永不言弃的决意<br>        撒，想要让歌声传达到宇的宙角落，那就在这片一切开始的天空迎接如风的未来，奏响梦想吧，liella！</p>
<footer><strong>av336162034評論區</strong><cite><a href="https://www.bilibili.com/video/av336162034/#reply5601840114">@星环Starring</a></cite></footer></blockquote>
<h2 id="Lyrics-歌詞"><a href="#Lyrics-歌詞" class="headerlink" title="Lyrics (歌詞)"></a>Lyrics (歌詞)</h2><figure class="highlight vocatag vocalyrics">
            <table>
                <tbody>
                    <tr>
                        <td class="gutter">
                            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre>
                        </td>
                        <td class="code">
                            <pre><span class="line">* 作詞: 宮嶋 淳子<br>* 作曲: 小幡 康裕<br>* 編曲: 山下 洋介<br>* 弦編曲: 兼松 衆<br><span class="base16colored-magenta"><br><span class="base16colored-orange">ちいさく瞬いた　胸の奥でまた<br>叶えにいこうよって憧れが騒ぐ</span><br><span class="base16colored-cyan">いそいで駆け出した　なんでもできるさ<br>出会いがくれた</span>大きな勇気<br><br><span class="base16colored-green">始まりは君から</span><br><span class="base16colored-red">でも次は僕から</span><br><span class="base16colored-blue">晴れわたる未来を創るよ</span><br>どこまでも走る<br><br>Looking for light<br>いま動き始めた僕らの物語<br><span class="base16colored-green">どんな奇跡だって</span><span class="base16colored-cyan">起こすのさ</span><br>キラキラ大空に舞い散る夢<br>かき集めてひとつひとつ<br>叶えてゆこう<br><br><span class="base16colored-blue">ぎゅっとね　結んでった僕らの願いは<br>思いもよらないカタチに変わってく</span><br><span class="base16colored-red">ときめきこぼれて　目と目あわせ笑った<br>どの瞬間も</span>宝物さ<br><br><span class="base16colored-green">振り返ればいつも</span><br><span class="base16colored-cyan">笑顔の君がいる</span><br><span class="base16colored-green">この時が続いて</span>ゆくように<br>もっと強くなる<br><br>Going the way<br>明日は何色に染まってゆくのだろう<br>果てしない希望があふれだす<br>キラキラ輝くセカイはきっと<br>まだ知らないはずむ鼓動<br>教えてくれる<br><br><span class="base16colored-red">信じる気持ちが揺らぐときは</span><br><span class="base16colored-blue">想いを歌にして伝えよう</span><br><span class="base16colored-green">涙は一番うれしい日に</span><br><span class="base16colored-cyan">とっておく</span>　そう決めたんだから<br><br><span class="base16colored-orange">Looking for light<br>いま動き始めた僕らの物語<br>どんな奇跡だって</span>起こすのさ<br>キラキラ大空に舞い散る夢<br>かき集めてひとつひとつ<br>叶えてゆこう<br><br><span class="base16colored-orange">君と煌めきを</span><br>描くよ　ずっと</span></span></pre>
                        </td>
                    </tr>
                </tbody>
            </table>
        </figure>
<h2 id="Extra-額外項"><a href="#Extra-額外項" class="headerlink" title="Extra (額外項)"></a>Extra (額外項)</h2><p>筆者在此謹代表筆者個人，</p>
<h3 id="預祝Liella-1stLive後面的公演順利進行！"><a href="#預祝Liella-1stLive後面的公演順利進行！" class="headerlink" title="預祝Liella!1stLive後面的公演順利進行！"></a>預祝<a href="https://zh.moegirl.org.cn/Liella!" title="萌娘百科詞條 Liella!"><strong><em>Liella!</em></strong></a><a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~" title="萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~"><code>1<sup>st</sup>Live</code></a>後面的公演順利進行！</h3><p><code>✿ヽ(°▽°)ノ✿</code></p>
<h2 id="References-參考文獻"><a href="#References-參考文獻" class="headerlink" title="References (參考文獻)"></a>References (參考文獻)</h2><ol>
<li>萌娘百科詞條 Starlight Prologue: <a href="https://zh.moegirl.org.cn/Starlight_Prologue">https://zh.moegirl.org.cn/Starlight_Prologue</a></li>
<li>萌娘百科詞條 Nonfiction!!/Starlight Prologue: <a href="https://zh.moegirl.org.cn/Nonfiction!!_Starlight_Prologue">https://zh.moegirl.org.cn/Nonfiction!!_Starlight_Prologue</a></li>
<li>「中字」Starlight Prologue（星光序言）-Liella!《LoveLive!Superstar!!》第12话插入歌 <a href="https://www.bilibili.com/video/av336162034/">av336162034</a> 2021-10-17</li>
</ol>
<blockquote id="fn_1">
<sup>1</sup>. <a href="https://zh.moegirl.org.cn/Starlight_Prologue">萌娘百科詞條 Starlight Prologue</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <a href="https://zh.moegirl.org.cn/Liella!">萌娘百科詞條 Liella!</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. <a href="https://zh.moegirl.org.cn/Snow_halation">萌娘百科詞條 Snow Halation</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_4">
<sup>4</sup>. <a href="https://zh.moegirl.org.cn/起始是你的天空">萌娘百科詞條 始まりは君の空</a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_5">
<sup>5</sup>. <a href="https://zh.moegirl.org.cn/Nonfiction!!">萌娘百科詞條 Nonfiction!!</a><a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_6">
<sup>6</sup>. <a href="https://zh.moegirl.org.cn/LoveLive!Superstar!!_Liella!_First_LoveLive!_Tour_~Starlines~">萌娘百科詞條 Liella! First LoveLive! Tour ~Starlines~</a><a href="#reffn_6" title="Jump back to footnote [6] in the text."> &#8617;</a>
</blockquote>
<p>文字內容引用遵守《知識共享 署名-非商業性使用-相同方式共享 3.0》協議。</p>
]]></content>
      <tags>
        <tag>Virtual Idols (虛擬偶像)</tag>
      </tags>
  </entry>
  <entry>
    <title>不同語言中節點結構的定義 I</title>
    <url>/next-nest/2021/11/27/different-nodes-01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>鏈表節點</p>
<span id="more"></span>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    ListNode *next;</span><br><span class="line">    <span class="built_in">ListNode</span>(<span class="keyword">int</span> x) : <span class="built_in">val</span>(x), <span class="built_in">next</span>(<span class="literal">NULL</span>) &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><figcaption><span>C#</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ListNode</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> val;</span><br><span class="line">    <span class="keyword">public</span> ListNode next;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ListNode</span>(<span class="params"><span class="built_in">int</span> x</span>)</span> &#123;</span><br><span class="line">        val = x;</span><br><span class="line">        next = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><figcaption><span>Java</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    ListNode next;</span><br><span class="line">    ListNode(<span class="keyword">int</span> x) &#123;</span><br><span class="line">        val = x;</span><br><span class="line">        next = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><figcaption><span>JavaScript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ListNode</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.val = val;</span><br><span class="line">    <span class="built_in">this</span>.next = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Or in TypeScript ...</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span> </span>&#123;</span><br><span class="line">    <span class="attr">val</span>: number</span><br><span class="line">    <span class="attr">next</span>: ListNode | <span class="literal">null</span></span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">val?: number, next?: ListNode | <span class="literal">null</span></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.val = (val===<span class="literal">undefined</span> ? <span class="number">0</span> : val)</span><br><span class="line">        <span class="built_in">this</span>.next = (next===<span class="literal">undefined</span> ? <span class="literal">null</span> : next)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight py"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        self.val = x</span><br><span class="line">        self.<span class="built_in">next</span> = <span class="literal">None</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>敬啓，世界。</title>
    <url>/next-nest/2021/10/12/holax-sekai/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><h1 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h1><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

    <div id="aplayer-xrvhqJBm" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="430026356" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;Greenlights&quot;</span>    <span class="comment"># also `hexo n`</span></span><br><span class="line">$ hexo server               <span class="comment"># also `hexo s`</span></span><br><span class="line">$ hexo generate             <span class="comment"># also `hexo g`</span></span><br><span class="line">$ hexo deploy               <span class="comment"># also `hexo d`</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p>
<h2 id="Markdown-Test"><a href="#Markdown-Test" class="headerlink" title="Markdown Test"></a>Markdown Test</h2><h3 id="Codeblock-amp-Lyrics’-Render-Test"><a href="#Codeblock-amp-Lyrics’-Render-Test" class="headerlink" title="Codeblock &amp; Lyrics’ Render Test"></a>Codeblock &amp; Lyrics’ Render Test</h3><figure class="highlight plaintext"><figcaption><span>Sumire-rap</span><a href="https://zh.moegirl.org.cn/Day1">Day1</a></figcaption><table><tr><td class="code"><pre><span class="line">作詞：KEN THE 390　作曲：めんま、KEN THE 390　編曲：家原正樹</span><br><span class="line"></span><br><span class="line">閉まったままのアンサーを解き放つよ今日</span><br><span class="line">ここから世界中へ　大きい夢</span><br><span class="line">一緒に叶えに行こう　手を繋いで　あの角の向こう</span><br><span class="line">いつも通りの景色　変えるレシピ　見つけられたよ</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">繰り返しのルーティンに色をつけるミュージック</span><br><span class="line">僕らだけがわかる合図　合わせていくチューニング</span><br><span class="line">唯一無二　それぞれ　代わりなんていない</span><br><span class="line">代わり映えしない　今　変えてきたい</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><figcaption><span>liella-starter.js</span><a href="https://liella.tv/">星象馆传送门</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> hostname = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">1337</span>;</span><br><span class="line">http.createServer(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.writeHead(<span class="number">200</span>, &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/plain&quot;</span> &#125;);</span><br><span class="line">  res.end(<span class="string">&quot;できっこないよって思ってたことも 踏みだせばほら叶うんだ\n&quot;</span>);</span><br><span class="line">&#125;).listen(port, hostname, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`At http://<span class="subst">$&#123;hostname&#125;</span>:<span class="subst">$&#123;port&#125;</span>/ 今、始まるよSymphony`</span>);</span><br><span class="line">&#125;);</span><br><span class="line">(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> liella = <span class="built_in">require</span>(<span class="string">&quot;Liella&quot;</span>);</span><br><span class="line">    liella.restart(<span class="string">&quot;Generation II!&quot;</span>);</span><br><span class="line">    &#125;)();</span><br></pre></td></tr></table></figure>
<h3 id="Atunemic-Recommendations"><a href="#Atunemic-Recommendations" class="headerlink" title="Atunemic Recommendations"></a>Atunemic Recommendations</h3><ol>
<li><p><a href="https://zh.moegirl.org.cn/末日DISCO">末日Disco</a></p>
<blockquote>
<p>當明日消失，末日到來，世界至此開始毀滅倒數。如果下一秒就是世界末日，你，該怎麼做？</p>
<pre><code>如果沒有明天 該怎麼告別
怎麼跟過去的我 說一句再見
就讓我靠近 你冰冷的臉
看這世界 在一瞬間毀滅
</code></pre></blockquote>
 <!-- split -->
<blockquote>

    <div id="aplayer-BLKehHGy" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="28830335" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av415362/">Bilibili: <code>av415362</code></a></p>
</blockquote>
<p> 世界最後的狂歡　末日最後的頌歌</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/明日DISCO">明日Disco</a></p>
<blockquote>
<p>當末日過去，明日到來，世界至此進入新的紀元。在這萬物復甦的嶄新時刻，你，有何願望？</p>
<pre><code>燃燒的夢想是 最初的歌
相信自己 其實你眼光仍清澈
就在你許下 願望的那刻
讓那天空 鋪上絢麗的顏色
</code></pre></blockquote>
 <!-- split -->
<blockquote>

    <div id="aplayer-XmGlpYIi" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="28830336" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av424616/">Bilibili: <code>av424616</code></a></p>
</blockquote>
<p> 世界最初的重生　明日最初的頌歌</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/I_LOVE_U">I LOVE U</a></p>
<blockquote>
<p>在下定了決心以後，在一切都太晚以前，我，只想要對你說!…<br>… I LOVE U</p>
<pre><code>如果你可以肯定我的一片心意　如果你可以回應我的一個問題
如果你能夠願意請坐下來聆聽　這一份在我心底最深處的秘密
</code></pre></blockquote>
 <!-- split -->
<blockquote>

    <div id="aplayer-ggjtwiNf" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="427016438" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av540768/">Bilibili: <code>av540768</code></a></p>
</blockquote>
<p> 告白P 告白三部曲之二</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/心加心">Hear the Heart (心加心)</a></p>
<blockquote>
<pre><code>看白色花瓣飄逸　像星星落在水里
祝福的鐘聲響起　讓我們走向幸福的結局
</code></pre></blockquote>
 <!-- split -->
<blockquote>

    <div id="aplayer-hfmXNFtK" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="427016439" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av4704467/">Bilibili: <code>av4704467</code></a></p>
</blockquote>
<p> 告白P 告白三部曲之三</p>
</li>
</ol>
<ul>
<li><p><a href="https://zh.moegirl.org.cn/CONNECT~心的连接~">CONNECT~心的連接~</a></p>
<blockquote>
<pre><code>找尋自己　存在的目的　再次相信你就是唯一
...
勇敢的心　勾繪著夢境　現在追就不要再猶豫
</code></pre></blockquote>
<!-- split -->
<blockquote>

    <div id="aplayer-UWCYwFMN" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="2902209" data-server="netease" data-type="album" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av1231151/">Bilibili: <code>av1231151</code></a></p>
</blockquote>
<p>本曲目初登場於2014拜年祭</p>
</li>
</ul>
<h3 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h3><p><img src="https://liella-gen2.github.io/imagehost/青春追梦人.jpeg" alt="青春追夢人 封面"></p>
<h3 id="Footnote"><a href="#Footnote" class="headerlink" title="Footnote"></a>Footnote</h3><p>(from <a href="https://segmentfault.com/a/1190000040651943/">https://segmentfault.com/a/1190000040651943/</a>)</p>
<p>Markdown<sup><a href="#fn_1" id="reffn_1">1</a></sup> 可以提高排版效率，并将文本转换为 HTML<sup><a href="#fn_html" id="reffn_html">html</a></sup></p>
<blockquote id="fn_1">
<sup>1</sup>. Markdown 是一种纯文本标记语言<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_html">
<sup>html</sup>. HyperText Markup Language 超文本标记语言<a href="#reffn_html" title="Jump back to footnote [html] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>洛天依</tag>
        <tag>Atunemic (阿良良木健)</tag>
        <tag>Minco_P (歷歷路路)</tag>
        <tag>蒼十三</tag>
        <tag>測試Testing!</tag>
      </tags>
  </entry>
  <entry>
    <title>記錄了一點在青島下雪時的景象</title>
    <url>/next-nest/2021/12/26/images-snow-qingdao-2021/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p><del>無需<code>tiktok</code>也能記錄的美好生活</del></p>
<span id="more"></span>
<h2 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h2><ol>
<li>平安夜當天<code>(Dec 24<sup>th</sup>)</code>已經開始降雪。當天在<code>QUST</code><sup><a href="#fn_1" id="reffn_1">1</a></sup>的午後冬陽，看來并沒能還原當時的景象。冬日的晴空往往更加清澈湛藍，一如寒風將層雲吹散，只剩下太陽懸挂在空中一般。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211224_123709.jpeg" alt="IMG_20211224_123709"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211224_151809.jpeg" alt="IMG_20211224_151809"></li>
<li>次日<code>(Dec 25<sup>th</sup>)</code>早晨，市南區某處的街道上不僅已有積雪，但部分已被清掃。不論怎樣，感謝環衛崗位的師傅們爲我們城市辛苦工作。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_091944.jpeg" alt="IMG_20211225_091944"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_091954.jpeg" alt="IMG_20211225_091954"></li>
<li>大型超商家樂福、地鐵2號綫站點浮山所<sup><a href="#fn_2" id="reffn_2">2</a></sup>、以及串聯它們的香港中路，香港中路車行道上中間部分，很有可能已被化雪車優先清掃，作爲青島市最重要的主幹路之一，需要時刻保證其正常通行。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_092058.jpeg" alt="IMG_20211225_092058">超商銀座附近的綠化區域。觀察可以發現灌木葉片上的積雪，甚是好玩。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_092147.jpeg" alt="IMG_20211225_092147"></li>
<li>世奧大廈，<code>學而思培優</code>青島站總部所在地。我曾經在此與在青島站的中山路部度過無數中學時代的青春、曾經因無知而癡迷於理科的青春。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_092536.jpeg" alt="IMG_20211225_092536">從這裏也能看見遠處的家樂福。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_092552.jpeg" alt="IMG_20211225_092552">世奧大廈樓前的地面，比起車輪碾壓過的痕跡，更像是環衛崗位的師傅們用拖把清掃的痕跡。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_092651.jpeg" alt="IMG_20211225_092651"></li>
<li>越過世奧大廈，向五四廣場<sup><a href="#fn_4" id="reffn_4">4</a></sup>方向深入。陽光照耀之下，積雪略微汎著金色，這是從視覺上也能感受到的溫暖。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_093357.jpeg" alt="IMG_20211225_093357"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_093427.jpeg" alt="IMG_20211225_093427"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_093608.jpeg" alt="IMG_20211225_093608">道路上對積雪的清掃也是以讓出行車路綫優先，其他的地方還沒有處理。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_093655.jpeg" alt="IMG_20211225_093655">這個地方似乎還沒有掃到。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_093737.jpeg" alt="IMG_20211225_093737"></li>
<li>五四廣場附近，綠化帶的灌木葉片上也存有積雪。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_093833.jpeg" alt="IMG_20211225_093833">五四廣場，雕塑<code>五月的風</code><sup><a href="#fn_5" id="reffn_5">5</a></sup>附近也是只有行車道被進行了清掃。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094019.jpeg" alt="IMG_20211225_094019"><code>五月的風</code>雕塑下的花壇中灌木葉片積雪意外的少。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094152.jpeg" alt="IMG_20211225_094152">可能出於人行道過寬的緣故，環衛師傅們優先清掃出了人行之路。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094218.jpeg" alt="IMG_20211225_094218"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094313.jpeg" alt="IMG_20211225_094313"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094322.jpeg" alt="IMG_20211225_094322">辛苦了，真的辛苦師傅們了（<code>π/2==90°</code>鞠躬）。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094328.jpeg" alt="IMG_20211225_094328"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094339.jpeg" alt="IMG_20211225_094339">這裏的噴泉設施，地面上積雪並不多，但是很均匀不像是被人爲削減的樣子。初步推斷是被<strong><em>優先而且徹底</em></strong>地清掃過一回，然後又經歷過一段時間的積雪導致的。之所以要優先清掃，大概是噴泉區域多通水結構，更易結冰。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_094414.jpeg" alt="IMG_20211225_094414"></li>
<li>來到一家<code>便利蜂</code>便利店，玻璃鏡片上的溫度使遇到的水蒸氣瞬間液化，形成了這一層“水霧”<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_095210.jpeg" alt="IMG_20211225_095210"></li>
<li>回到世奧大廈附近，這應該才是車輪留下的痕跡。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_095852.jpeg" alt="IMG_20211225_095852">年少的朋友們，走向輔導班，一如三年前的我自己。<img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_100143.jpeg" alt="IMG_20211225_100143"><img src="/next-nest/2021/12/26/images-snow-qingdao-2021/IMG_20211225_100859.jpeg" alt="IMG_20211225_100859"></li>
</ol>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://www.qust.edu.cn/">青島科技大學 官網</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <a href="https://baike.baidu.com/item/浮山所站/23305085">百度百科詞條 青島地鐵(2號綫) 浮山所站</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_4">
<sup>4</sup>. <a href="https://baike.baidu.com/item/五四广场/1111704">百度百科詞條 五四廣場</a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_5">
<sup>5</sup>. <a href="https://baike.baidu.com/item/五月的风/5900119">百度百科詞條 五月的風</a><a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>歌詞測試</title>
    <url>/next-nest/2021/11/06/lyrics-block/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>如題，是歌詞<code>染色</code>模塊測試。<br>之前還是萬年巨坑，突然就很順利地填上了。</p>
<span id="more"></span>
<h2 id="渲染效果"><a href="#渲染效果" class="headerlink" title="渲染效果"></a>渲染效果</h2><ul>
<li>HarryP (針原 翼) (feat. RIN, MIKU) - 一閃光</li>
</ul>
<figure class="highlight vocatag vocalyrics">
            <table>
                <tbody>
                    <tr>
                        <td class="gutter">
                            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre>
                        </td>
                        <td class="code">
                            <pre><span class="line"><span class="base16colored-orange">とくとく流れているのは あなたに縋りついた血だ<br>鮮血汩汩流出 瞬間染紅了你的衣襟<br><br>涙の代わりに込み上げて <span class="base16colored-cyan">燃えさかる幻影の炎だろう</span><span class="base16colored-orange"><br>取而代之的是泣血椎心 </span><span class="base16colored-cyan">是燃燒後火焰的殘影</span></span></span></pre>
                        </td>
                    </tr>
                </tbody>
            </table>
        </figure>
<ul>
<li>人形兔 (feat. 五色戰隊(洛天依、樂正綾、樂正龍牙、墨清弦、徵羽摩柯)) - Hear me!</li>
</ul>
<pre class="vocalyricsblock"><code><span class="base16colored-blue">洛天依: 放學後空無一人的操場<br>拉勾以後就不許臨陣脫逃　好不好<br><span class="base16colored-red">樂正綾: 肩上的吉他和小小夢想<br>要為它們長出堅強的翅膀　我知道<br><br><span class="base16colored-blue">徵羽摩柯: Can you hear me now?　麥克風在手中握緊不放<br><span class="base16colored-yellow">墨清弦: 　Can you hear me now?　不用在意任何疑惑目光<br><span class="base16colored-cyan">樂正龍牙: Can you hear me now?　有你在一定能實現願望<br></span></span></span></span></span>讓淚水與歡笑　逆光也閃耀</code></pre>
]]></content>
      <tags>
        <tag>測試Testing!</tag>
      </tags>
  </entry>
  <entry>
    <title>It NEVER Entered my Mind</title>
    <url>/next-nest/2021/10/24/it-never-entered-my-mind/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><h1 id="It-NEVER-Entered-my-Mind"><a href="#It-NEVER-Entered-my-Mind" class="headerlink" title="It NEVER Entered my Mind"></a>It NEVER Entered my Mind</h1><p><code>SwannsWay</code></p>
<blockquote>
<p>Summary:<br>Christmas is, pretty obviously, a romantic affair; Shioriko knew, and perhaps it was this fact alone that kept her mind running faster than it ever had.</p>
</blockquote>
<span id="more"></span>
<blockquote>
<p>Notes:<br>(See the end of the work for notes.)</p>
</blockquote>
<h2 id="Chapter-I"><a href="#Chapter-I" class="headerlink" title="Chapter I"></a>Chapter I</h2><p>“On Christmas, huh?” Kaoruko had said. Shioriko figured her sister would get a kick out of that. “Well, a proper date might actually do you some good. I’m glad you were ‘ tricked into this. ’”</p>
<p>“I was tricked into this,” Shioriko protested, but her sigh signaled obvious weak resistance. “At any rate, it’s not a date. She’s just a friend from class.”</p>
<p>“Is she cute?” Kaoruko asked, almost indifferently.</p>
<p>“Don’t be ridiculous,” Shioriko quipped, feeling splotches of heat forming on her face. “She’s a girl. We’re both girls.”</p>
<p>“Uh, okay? When has that ever stopped anyone before?” Kaoruko asked. “It has certainly never stopped me before.”</p>
<p>“Kaoruko!” Shioriko hissed, and looked around as if her sister had just divulged a millennium-old secret. “If mother and father knew that, they would…”</p>
<p>“They would what? Disown me? Please, Shioriko,” Kaoruko laughed. “I know enough family secrets to bankrupt their entire operation tomorrow if I wanted to.”</p>
<p>Shioriko sighed, pinching the bridge of her nose. “I can’t tell if you’re being serious or not, Kaoruko.”</p>
<p>Kaoruko hummed a note into the receiver. “Maybe it’s better that way, sweetie. So, where are you guys going?”</p>
<p>“Shimokitazawa,” Shioriko said, rolling her eyes. “It was her suggestion, as neither of us really goes there very often.”</p>
<p>“Ooooh, trendy,” Kaoruko said, sounding genuinely impressed, which irritated Shioriko. “I’ll shoot some recommendations your way later. You should stay at the Shinjuku apartment if you’re planning to go all the way there.”</p>
<p>“That was my intention. I might offer her to stay in your be—“ Shioriko started, before she had absolutely any time to think about how her words could be construed (or misconstrued). She could not even think of a fall-back. “Um, yeah. I’m looking forward…to it.”</p>
<p>Shioriko could practically hear her older sister break into a grin.</p>
<p>“My bedroom, huh? Nice,” Kaoruko sang, sounding pleased. “It’s soundproof, you know? Just clean up after you two are done.”</p>
<p>Which were the last words Shioriko heard before she summarily ended the call, walking over to the kitchen sink and splashing cold water on her face.</p>
<p>Shioriko can’t seem to make her heart stop beating at the speed of sound, light, and other such fast things, combined and multiplied by another very large number. That’s how she reckons it, mostly because it stops her from being angry at herself for not understanding why it even beats like this in the first place.</p>
<p>And why am I here this early? She wonders, as she swings her body on the heels of her brown loafers near the entrance of the metro station—their agreed rendezvous. She could look at her watch, but she already knows it will be a while, so she walks over to a nearby outdoor café ( isn’t it winter? ) and orders some tea. It smells of a spring meadow, she thinks, as the steaming liquid envelops her and makes her brain fire signals through every corner of her nervous, freezing existence.</p>
<p>Ayumu Uehara.</p>
<p>It’s not exactly that she had lied to Kaoruko either, save maybe by omission. She had fully intended to spend Christmas by herself, curled up in bed and reading a book, or maybe even getting ahead in her classes. As her first holiday break not spent at the main Kyoto house, in the company of her family, she did not (indeed, could not) consider this season any different than any other regular vacation. And as with every other vacation of her life, she would spend it either studying, volunteering somewhere, or in quiet repose—in the solitude of her room. That is, until the last day of class.</p>
<p>“Shioriko, is that your family?” Ayumu had said, pointing at Shioriko’s laptop wallpaper. “I’m sorry. I didn’t mean to look.”</p>
<p>“Ayu—Uehara,” she stuttered. Why had she stuttered? “Yes, I…those are my parents, and she is my sister.”</p>
<p>“Wow, she’s gorgeous,” Ayumu said, eyes wide open. Shioriko was used to that reaction and yet, for perhaps the first time in her life, felt only something unpleasant from it. “Looks like it runs in the family.”</p>
<p>Oh.</p>
<p>“I…,” Shioriko tried, failed, and tried again. “I used to have long hair like her, as well.”</p>
<p>What? Who cares, Shioriko?</p>
<p>Ayumu hummed happily, hands in her coat pockets, giving Shioriko’s hair a once-over, as if imagining it flowing down her tense shoulders. Much like Shioriko had been earlier, she swung her weight on the heels of her boots.</p>
<p>“Yes, I…I usually…,” Shioriko could not think of anything to say under such scrutiny. Had Ayumu’s eyes always been so pretty? “This is the first time we are not spending the holidays together. They will be in Kyoto and…well, I will be in the dorms.”</p>
<p>“Oh,” Ayumu said, suddenly stopping. “You mean, like, Christmas and stuff?”</p>
<p>And the rest, it should go without saying, is history.</p>
<p>Christmas in their country is, pretty obviously, more of a romantic affair; Shioriko knew, and perhaps it was this fact alone that kept her mind running faster than it ever had. She watches swaths of couples stroll hand in hand out through the station turnstiles, no doubt on their way to some romantic hole-in-the-wall that was sure to impress. Shioriko hasn’t come up with much of a “plan”—she has some ideas of things they could do, sure, but nothing she might call date-worthy ( as if I knew what that even meant , she thinks)—and yet, she figures that, given the perfectly-platonic nature of this…meet-up…there might not be much harm in a little spontaneity. </p>
<p>She reckons that, given her reasoning of this whole thing, it isn’t no wonder she didn’t have many friends in high-school.</p>
<p>Or maybe—oh, my god—or maybe this is a date, and I am preposterously unprepared for it , is her first thought as she watches Ayumu swipe her card on the electronic turnstile and look around. From across the street, Shioriko finds herself rendered immobile by who-knows-what invisible force.</p>
<p>Shioriko doesn’t know too much about fashion outside of what Kaoruko teaches her, but even she knows enough to recognise Ayumu as a stylish person. Unlike herself, Ayumu looks to be fairly popular with her classmates, and Shioriko reckons that Ayumu may have never as much looked her way if they hadn’t been paired up for a short project halfway through the semester. What Shioriko sometimes finds funny (though not so much now), was that she didn’t find it particularly difficult to talk to Ayumu at first. It had been just a project for a class, after all, and sure, Shioriko would never be dubbed as particularly friendly, but even she could hold herself up in conversation (especially if it was about school). It became difficult to talk to Ayumu as the barriers of formality slowly gave way to a surprisingly warm acquaintanceship; it reminds Shioriko of the smell of cypress, dissipating into the chilly, diaphanous refractions of a winter morning’s light. She thinks of several other metaphorical suggestions as she freezes on Ayumu catching sight of her, and waving excitedly before crossing the street to catch up to her. She wears a slim tartan skirt, with a threaded sweater stylishly tucked at the waist. Matching wool coat and beret, Shioriko guesses, and dark tights meeting under Chelsea boots. A classic, feminine getup that looks like it was made for Ayumu—like it was meant to knock out anybody that had as much as a pair of eyes.</p>
<p>And a pair of eyes Shioriko does indeed have.</p>
<p>“I’m sorry, I hope you weren’t waiting for long…” Ayumu says, her sentence fading as she gives Shioriko a slow, painfully long once-over. “Wow, Shioriko. Wow. You look so…different.”</p>
<p>‘ Different’ is a word for it , Shioriko thinks, chastising herself for not opting for something— anything —else in her very limited selection of western-styled clothing. She had decided, against her usual infallible judgement, to listen to Kaoruko and go for something her sister picked. Never one for dresses, she wears a pair of faded skinny jeans of Kaoruko’s, its waist circumscribing a tucked-in black turtleneck sweater. Tokyo is cold this year, so both a gray, fine tweed blazer underneath a black wool peacoat completes Shioriko’s outfit, like a bow on a very monochrome Christmas present.</p>
<p>“I…these are not all my…they’re…,” Shioriko starts, wondering if the Japanese language has always been so difficult. She lands, instead, on a sigh. “They’re a bit…boyish, are they not?”</p>
<p>She awkwardly shoves her hands in her peacoat pocket, too quickly for it to appear like a natural gesture. Ayumu takes a moment to smile a radiant display that puts the city’s holiday decorations to shame, eclipsing the cold of the December wind with a warmth that hails from the pit of Shioriko’s stomach, spreading in elegant swirls throughout her body—a single drop of rose-coloured ink landing on Shioriko’s once-crystalline conscience.</p>
<p>“They are boyish,” Ayumu says and, before Shioriko has any time to react, holds out her open palm. Shioriko forgets how to breathe. “And it suits you. Let’s go eat something?”</p>
<p>A nod, which is all Shioriko can offer apart from her balmy hand ( thank goodness for gloves ), and then they’re on their way.</p>
<p>“Vice-president?” Ayumu says, eyes wide in obvious surprise. “Of the student council? Like, of the whole school?”</p>
<p>Shioriko can’t help a bit of a proud, almost wry, smile. This wouldn’t be the first time somebody hadn’t felt that particular piece of information coming a bit out of left-field. She knew most, including Ayumu, did not mean any harm, but it always feels peculiar to her that nobody sees it coming.</p>
<p>By now, they’ve moved to a little restaurant, a few ways up a gentle hill off one of the main streets, that specializes in curry. She hardly knows, and tries not to think about, the romantic value of a curry shop, but Kaoruko had strongly recommended it and Ayumu seemed genuinely excited at the prospect. Besides, Shioriko muses, judging by both their immediate neighbors (two couples speaking to each other with tangible intimacy that makes Shioriko just the smallest bit uncomfortable), not even a working-class ramen shop could escape the romanticism of the holiday.</p>
<p>Why exactly do I care if this place is romantic, again?</p>
<p>“That’s so cool!” Ayumu says, clasping her hands below her chin. Shioriko feels prouder than ever for something that, at least for her, has always been par for the course. “Wait a second. That would mean that you work with Setsuna, no?”</p>
<p>Shioriko cocks her head just a tiny bit, not recognizing the name.</p>
<p>“Oh, uh,” Ayumu says, correcting course and looking a bit sheepish. “With um…Nana, I mean.”</p>
<p>“Oh,” Shioriko says, with a perk. “President Nakagawa? Yes, of course. Are you friends with her?”</p>
<p>“You…could say that?” Ayumu says, making a face. “We’re coworkers…of sorts.”</p>
<p>“What do you—,“ Shioriko starts.</p>
<p>“Hello! Welcome to Rojiura,” The waitress chirps, suddenly occupying the whole of Ayumu’s attention. “May I take your order?”</p>
<p>Ayumu, looking visibly relieved, begins discussing her options when a flash catches Shioriko’s eye. Turning, she realises it to be Ayumu’s phone which, facing up, lit up at a notification for a text message. Much as Shioriko, out of prudence and propriety, willed herself not to look at the contents of the message, she did not manage to turn her head in time to miss the name of its sender:</p>
<p>❤️ Yuu ❤️</p>
<p>A feeling hitherto unknown to Shioriko springs from a dusty alcove in her chest, quickly running laps down her spine and up her arms, freshly clamming up her palms and fogging her brain. When she tries to push the feeling back down the pit of her stomach, it retaliates with such fervor that the sensation makes her want to cry out.</p>
<p>Shioriko had known and understood, at least to a clinical degree, the meaning of jealousy, but she figures nothing could have so starkly illustrated its experience than the feeling that now pullulated her body.</p>
<p>“Shioriko?” she hears. “Are you okay?”</p>
<p>She snaps out of it, and looks up to find both Ayumu and their waitress looking at her—the former with heartbreakingly candid concern.</p>
<p>Jealousy doesn’t mix well with guilt, Shioriko learns.</p>
<p>“Y-yes. Yes, of course,” Shioriko manages, clearing her throat with some effort. “I must be really hungry. I’ll have the vegetable curry, please.”</p>
<p>“Understood,” the waitress says, with expert cordiality. “And please do not hesitate to let me know if you need anything else.”</p>
<p>Ayumu waits for the waitress to be out of earshot before she reaches out and gently grasps Shioriko’s forearm with her hand.</p>
<p>“Are you sure you’re okay? You looked really pale for a second there,” Ayumu says, cautiously. And then, smiling: “That’s more like it. The colour is returning to your face.”</p>
<p>“Oh,” Shioriko musters, reckoning the heat that splotched her cheeks must have something to do with that. “That’s…good.”</p>
<p>“Anyway,” Ayumu says, looking satisfied and finally removing her hand. “Speaking of Nana, she actually recommended I check out a place around here that she likes going to.”</p>
<p>“She did?” Shioriko asks, genuinely surprised. President Nakagawa comes to Shimokitazawa? Shioriko makes a mental note to ask her ever-serious superior about that after the holidays.</p>
<p>“M-hm!” Ayumu sings, and Shioriko feels like she would happily listen to the voice forever. “You like music, right?”</p>
<p>The shop is unassuming, off one of the main streets, and sparsely decorated with nautical accents. A pretty redhead welcomes them from the counter and invites them to take their time looking around before sitting down. Shioriko hadn’t been to a record shop in a while, not since she used to accompany her sister to shop for used vinyls in Shimogyō, but those old, dusty shops didn’t resemble the subtle chicness of the place Ayumu had suggested, which seemed to be equipped with a sort of bar and several tables. Nonetheless, the sight of record players felt homely and familiar. Kaoruko would like her , Shioriko thinks with a smile, before she catches herself and shakes her head.</p>
<p>“So, this is how the place works,” Ayumu starts excitedly, spinning on her heels to face Shioriko, and the latter’s breath hitches for the thousandth time that night. “Go look for a record or two that you’d like to listen to. I’ll order us drinks in the meantime. Once you’re back, we both listen to the record wearing headphones that play from the same turntable, while we drink. We can, of course, just have our drinks and talk, right? But I read online that the charm of the place is relaxing at our table, and letting the music do the talking.”</p>
<p>Ayumu sounded so excited at the idea that, regardless of whether Shioriko may be into it as well (she was), she would do it in a heartbeat. She scans the room and spots a corner table, straddled by the store’s large front windows and a wooden display case, creating a secluded spot in the otherwise open space. It’s perfect, Shioriko thinks.</p>
<p>“Sounds fun,” Shioriko says, smiling; she points to the open table. “Let’s get that spot…before anyone else does.”</p>
<p>Ayumu orders them glasses of wine while Shioriko selects a couple of records for them to listen to. The selection is mostly not a contemporary fare, but she recognises a good amount of names from her childhood. She opts for a couple of ones that she remembers being pleasant, fetching a Beach Boys LP and a Nino Ferrer 7-inch 45 that she’s surprised to find anywhere else outside of her father’s eclectic collection. When she returns to the table, she’s surprised to find Ayumu waiting with a record already on the turntable, looking at her sweetly, resting her chin on one hand.</p>
<p>“I’m sorry, I saw this one on my way back from the bar and knew we had to listen to it,” Ayumu says, motioning at an old, dusty record sleeve bearing the picture of a trumpet player. Jazz, on Christmas, huh? “Let’s?”</p>
<p>The record begins with a sleepy, intimate rendition of a show tune from the 40s (at least, according to the back of the sleeve), recorded in 1954 in the United States. Shioriko finds it perfect for the mood, as she sinks deep into the padded chair opposite to Ayumu. It doesn’t do much to calm her nerves though; Ayumu raises her glass in a silent toast and takes a sip of the claret, not taking her eyes off Shioriko’s for even a moment. Shioriko, for a lack of some better response, does the same and takes a sip from her own cup.</p>
<p>She doesn’t drink very often, but she reckons she will need it tonight.                                           -Summary:<br>“Well, that was rather direct, wasn’t it?” Ayumu says, smiling. “Come here, Shioriko.”</p>
<blockquote>
<p>Notes:<br>(See the end of the chapter for notes.)</p>
</blockquote>
<h2 id="Chapter-II"><a href="#Chapter-II" class="headerlink" title="Chapter II"></a>Chapter II</h2><p>Shioriko struggled with even getting her wallet out of her bag and against the metro turnstile scanner. By the time she’s across, Ayumu is leaning against the station wall, watching her, and decidedly amused. Her cheeks are red, to be sure, but she seems to be handling the two glasses of wine that they each had better than Shioriko is.</p>
<p>“You okay, Shioriko?” Ayumu says, her smile softening. “Do you want me to get you some water?”</p>
<p>“I think I will be okay,” Shioriko says, as truthful as her inebriation allows. “I usually only drink saké, and even that is usually limited to my family’s new year celebrations.”</p>
<p>“That sounds nice,” Ayumu says, holding on to Shioriko’s arm as they climb the stairs down to their track. “Your family sounds cool.”</p>
<p>“I suppose, yes. I have not really thought about it too much,” Shioriko says, ignoring the heat radiating from Ayumu’s arm, through both their coats and right to Shioriko’s core. In her current state, however, she can’t bring herself to care too much.</p>
<p>They step onto a Shinjuku-bound train where, by some miracle, a couple rushes out of their seats. After mulling it over a bit, and at the behest of quite possibly the nicest salarymen in Tokyo, who insist they take the seats, they alight on the warm velvet; all the while, Ayumu does not let go of Shioriko’s arm.</p>
<p>“Well, I am used to people thinking Kaoruko is cool,” Shioriko says, not knowing where else to take the conversation, and in dire need of a distraction from a certain lot of unfamiliar, very intrusive thoughts. “I suppose she is what you would call the…cooler…sibling?”</p>
<p>Ayumu hums to herself thoughtfully. “I’m sure she’s cool. She certainly looks it.”</p>
<p>Yep, there it is , Shioriko thinks, and holds back a sigh.</p>
<p>“But I happen to like you better,” Ayumu says, shooting straight through Shioriko’s foggy conscience.</p>
<p>“Oh,” Shioriko manages, and can’t even imagine the shade of red that must be burning through her face at the moment. “Th-Thank you.”</p>
<p>She’s then surprised to hear Ayumu sigh in a peculiar way, which Shioriko doesn’t like. She turns to find Ayumu looking down at her hands crossing elegantly over her lap. She doesn’t look happy, that much is certain, and Shioriko begins to panic.</p>
<p>“Hey, Shioriko?” Ayumu begins, not looking her way. “I think I should apologise for today.”</p>
<p>Shioriko freezes. “Apologise? But why?”</p>
<p>Ayumu shrugs a bit, and uncoils her arm from Shioriko’s, who instantly misses it in possibly the most bittersweet way possible.</p>
<p>“I don’t know how to explain it, but I get the feeling that I’ve been making you uncomfortable all day today,” Ayumu says, sounding genuinely upset at this notion. “That was not my intention whatsoever. I’m not usually like this…this pushy , I guess.”</p>
<p>“Pushy?”</p>
<p>“You know, I’m not usually one to suggest things, or plans outings like this. I think this may be the first time I ask somebody on a…”</p>
<p>The train slows to a stop, and the doors open to the bustle of Yoyogi-Hachiman Station. Shioriko doesn’t notice, and holds her breath.</p>
<p>“…um, well. I’m really sorry if I’ve been making you uncomfortable,” Ayumu says, barely audible. “I hope you had some fun, at least.”</p>
<p>“Uehara?” Shioriko steels herself.</p>
<p>“Hm?”</p>
<p>“I…did not mind you asking me to do things,” Shioriko says. “I cannot think of the last time I was so happy to be out with someone. This…might be the best Christmas I have ever had.”</p>
<p>It was Ayumu’s turn to be rendered speechless, and instead looks at Shioriko with an intensity that has her breaking into cold sweat.</p>
<p>“But, um,” Shioriko continues. “If you are used to being more on the receiving end of requests, then…”</p>
<p>I’m so sorry, mom and dad.</p>
<p>“Odaiba is a bit far, so I was planning on spending the night at my family’s apartment in Shinjuku,” Shioriko says, not believing herself. “Why don’t we watch a movie there…or something?”</p>
<p>Ayumu’s lips part.</p>
<p>“You can stay over too. We have a spare room and…well, if you want to, anyway,” Shioriko says, and runs out of steam. “Sorry, I am not sure why I said that.”</p>
<p>Ayumu slinks her arm around Shioriko yet again, drawing a tiny, surprised gasp from her.</p>
<p>“That sounds like a lovely idea,” Ayumu says. “If I’m not imposing too much—and please, tell me if I am—then I’d be glad to.”</p>
<p>Shioriko is having a good amount of trouble breathing, and she figures the sight of Ayumu uncorking a bottle of wine at the kitchen counter, in the conspiratorial silence of the large, empty apartment, might have everything to do with it.</p>
<p>What the hell am I doing?</p>
<p>“That stereo is amazing,” Ayumu says, signaling to the old turntable set of Shioriko’s father’s. “Do you guys still use it?”</p>
<p>“Yes, definitely,” Shioriko says, thankful to have something else to think about. “If you open the drawers next to the cabinet speakers you’ll find some of my father’s records.”</p>
<p>Shioriko gets up and pads towards the stereo, sliding the drawers’ wooden door and revealing a set of carefully stored vinyls.</p>
<p>“It is not his main collection, but it has some good stuff,” Shioriko says, picking out a Joāo Gilberto record she likes. Without having to think about it, she slides the disk out of its protective sleeve, then out of the paper one, placing it carefully on the turntable and turning the system on. Before moving the needle to the first groves, she takes a soft brush with a wooden handle and lightly presses it on the spinning vinyl, removing a thin film of accumulated dust. Finally, sliding the arm to the first song of side A, she lets it alight. As the sentimental strings of the track stream from the speakers, Shioriko turns to find Ayumu sitting at the table, with two glasses of Merlot at the ready. Shioriko wills herself not to look at Ayumu’s legs—colour shifting from the dark of her tights and the gentle, suggestive pinks of her skin underneath.</p>
<p>“Wow,” Ayumu says, smiling with her chin resting on her palm, staring straight at Shioriko. “That was kind of amazing.”</p>
<p>Shioriko doesn’t know what it was that she did that was so amazing, but she certainly is glad that she did.</p>
<hr>
<p>They talk, with surprising ease, through about half of the bottle and some snacks. Shioriko finds herself really enjoying the warm, dulcet high of the wine. It feels of the carelessness of childhood, tinged with the intimacy and maturity of adulthood. And to be sharing it with one as Ayumu, who takes whatever topic Shioriko may bring up in vivid conversation, makes it all the better. As Shioriko takes another sip from her glass, sweet bossa nova dissipating her uncoiling inhibition, she finds herself meeting—and this time, for a very long time—Ayumu’s eyes, during one of the conversation’s natural pauses.</p>
<p>And then, Ayumu’s phone rings.</p>
<p>“Oh,” Ayumu says, looking at the screen, then at Shioriko. “Dang it. Do you mind if I take this on the balcony?”</p>
<p>“Not at all,” Shioriko says, a little confused. “Take your coat. It’s cold out.”</p>
<p>“Thanks,” Ayumu says, smiling sweetly. She gives Shioriko’s hand a gentle squeeze, and drags her fingers lightly on her skin as she removes it. “I’ll be right back.”</p>
<p>“Okay,” Shioriko says, temporarily losing her ability to construct a longer sentence.</p>
<p>And such a feeling would have remained, had she not picked up Ayumu’s first words into the phone, before she closed the balcony’s door. A sweet:</p>
<p>“Hi Yuu! I’m sorry I haven’t called.”</p>
<p>Oh.</p>
<hr>
<p>Shioriko steps into the bathroom and takes a few deep breaths; she is angry, she doesn’t know why, and she doesn’t like it.</p>
<p>She is being unreasonable, and she knew it, but somewhere in the confines of her young, inexperienced mind, she feels her anger to be oddly justifiable. There is a certain sobriety in her frustration that wrings her back to her usual logical self—the one who spelt danger on this whole date idea from the very beginning and to whom Shioriko refused to listen to, choosing instead to ignore every red flag hoisted around her heart’s most sensitive places. Those very same spots now reeled in a way Shioriko didn’t understand.</p>
<p>She looks in the mirror and discovers a few stray tears running down her face, thrown under the starkness of the bathroom’s harsh lights. Why is she so upset? She does not trust herself to face Ayumu in this state, so she furiously seeks a contingency plan. She figures, above everything else that plagued her mind, that her most urgent need was to find out where Ayumu stood with respect to her.</p>
<p>What, exactly, is Ayumu looking for? she asks herself.</p>
<p>If she figures this out, then, in her own time, she can help reconstruct her own reality, pulling whatever she can from the vestiges of what she hopes will not be heartbreak.</p>
<p>Heartbreak? Yes, that’s what this could turn into, and you know it.</p>
<p>This simple, unwavering admission calms Shioriko a good amount, and she realises that she may have been more angry at herself all this time than at Ayumu. She figures there will be time, later, to think about what it would imply with respect to her life, and what she should do about it.</p>
<p>But there were other things to be done for the time being.</p>
<p>She finds Ayumu back at the table. Stepping into view, Ayumu smiles sweetly, before it falls somewhat. Shioriko had tried to fix her makeup as best as possible, but who knows what she must look like.</p>
<p>“Shioriko?” Ayumu calls, with some caution. “Are you okay?”</p>
<p>“Yes,” Shioriko says, not trusting herself with more than that. Before sitting back down, she goes to the turntable and places the record on side B, taking a couple more discrete breaths on the way. She sits back down and finds a glass of water next to her glass of wine.</p>
<p>“Hydration is important,” Ayumu says, sounding sheepish.</p>
<p>The remark catches Shioriko by surprise, and she can’t help but laugh. Ayumu laughs with her, holding that dainty hand of hers in front of her mouth. Shioriko, for a moment, forgets why she was upset in the first place. The feeling is short lived, though, as she feels, below the table, the feeling of Ayumu’s foot drawing slow, languid circles on hers.</p>
<p>They are impossibly warm and, lest Shioriko pass out from a heat stroke, she skips several steps in her plan and blurts out:</p>
<p>“Um,” She starts. “Who…called earlier?”</p>
<p>“Huh?” Ayumu says, face flushed and clearly distracted. “Oh, just now?”</p>
<p>Shioriko nods.</p>
<p>“That was Yuu; we live together back at the dorms,” Ayumu responds. Roommates. Okay . A simple enough answer, but something about the way she avoids Shioriko’s eyes makes her uneasy. “She just wanted to ask why I wasn’t home yet. I forgot to tell her I wasn’t coming back tonight.”</p>
<p>“I see,” Shioriko says and hopes that she sounds casual enough. “She must really care about you.”</p>
<p>“Well,” Ayumu starts, a small smile tugging at her lips. “We’ve been together since we were kids. We’ve been looking out for each other ever since, so I can’t imagine not caring about her like that as well.”</p>
<p>It hits Shioriko like a speeding bullet and she doesn’t know how to react. Ayumu, too, seems to notice the sudden shift in the atmosphere, and turns to look at Shioriko. She feels fresh tears welling up from the depths of her asphyxiating world, and takes a large swig from her wine glass to hide as much of it as possible.</p>
<p>“Shioriko?” Ayumu says, suddenly alarmed.</p>
<p>“I’m okay,” Shioriko says, coughing a little. “I think it’s…wonderful to be together with somebody like that.”</p>
<p>Ayumu peers at her thoughtfully for a few moments, her eyes darting all over Shioriko’s face in search for something Shioriko couldn’t begin to understand. She finds it painful to meet Ayumu’s gaze, but something inside Shioriko alerts her of the importance of this moment—as if that delicate thread connecting her to Ayumu would be severed should she so much as blink.</p>
<p>“Oh,” Ayumu finally says, her eyes suddenly wide. “Oh, no. Yuu? No, no. It’s not like that. We’re very close friends—she’s my best friend—but nothing more. Nothing…like that, anyway.”</p>
<p>Ah.</p>
<p>“Ah,” Shioriko parrots herself, out loud, and feels as if the weight of all the water of all the oceans of the whole world had been lifted from her chest. “Yes, yes. That makes sense. That is a relief.”</p>
<p>Ayumu blinks twice, before Shioriko has time to realise why. A small, knowing, and puncturing smile makes its way across Ayumu’s mouth. “ What is a relief?”</p>
<p>“I…” Shioriko tries. “I don’t know why I said that.”</p>
<p>A terribly long (by Shioriko’s estimation, anyway) pause.</p>
<p>“Hey, Shioriko?”</p>
<p>“Yes?”</p>
<p>“Should we watch that movie?”</p>
<p>“Yes.”</p>
<p>They watch an old, British, Christmas comedy with so many characters that Shioriko has a hard time remembering all of their names, but that Ayumu seems to love. Just as well , Shioriko thinks to herself; given their close proximity on the couch, underneath a single blanket, there was not a story simple enough for Shioriko to have been able to focus on. The fact that the bottle of wine lay empty on the kitchen counter, its contents now performing chemical mischief through Shioriko’s small body, did not help in the least bit. At certain points during the movie, they laugh heartily and press their bodies against each other, making Shioriko wonder if this is what intimate friendship—shy not of a single platonic touch—is like.</p>
<p>The fact that Ayumu, then, does not move back to her original position and instead sinks her weight against Shioriko’s chest reminds her that this is likely something else entirely.</p>
<hr>
<p>When the movie ends and the credits start to roll, neither of them moves, nor says a word. Shioriko is at a complete loss, as she can’t see Ayumu’s face from her vantage point.</p>
<p>She wonders if Ayumu has fallen asleep, and if so, it would be impolite to wake her up. At the same time, she reasons, it would be less polite to have her sleep uncomfortably, when she could obviously offer better accommodations. What troubled her the most, however, was that she didn’t want Ayumu to move, and she wondered, at this point, if she was taking advantage of Ayumu.</p>
<p>That is not what she wants.</p>
<p>She continues this internal dialogue through the entirety of the credits, and the screen returns to the main menu. Still no word from Ayumu.</p>
<p>“Hey, Uehara?” Shioriko whispers, not knowing what else to do.</p>
<p>“Ayumu,” Ayumu says, in full voice, startling Shioriko. She turns up to look at Shioriko. “You can call me Ayumu by now, silly.”</p>
<p>“Ayumu,” Shioriko says, and it feels so good that she almost has to gasp it. “Should we…call it a night?”</p>
<p>“Hmm,” Ayumu hums, resting her chin but not taking her eyes off Shioriko. “If you want.”</p>
<p>Then, Shioriko remembers.</p>
<p>“Your present,” Shioriko says. “I forgot to give you your present.”</p>
<p>“Huh? You got me a present?” Ayumu says, rising a little. “You…what? You didn’t have to!”</p>
<p>“Well, um, it’s Christmas, right?” Shioriko says, feeling awkward. “Can I…go get it? I will be right back.”</p>
<p>“Okay,” Ayumu says, sounding almost sad. “But come back?”</p>
<p>Shioriko nods and slowly removes herself from the warmth of the blanket. Reaching for the plastic bag inside the leather backpack she’s had on all day, she takes a small, flat object, wrapped neatly in paper with little cartoon ships on them. She walks over to the couch, and hands it to Ayumu.</p>
<p>“Oh, Shioriko,” Ayumu says, beaming at her. “Thank you. I am so sorry; I didn’t know if getting you something would have made you uncomfortable. So I…I guess I opted for being safe.”</p>
<p>“Please, do not worry. I bought this rather last minute, myself,” Shioriko hurries to say. “Today, in fact.”</p>
<p>“Oh,” Ayumu says. “Can I open it?”</p>
<p>Shioriko nods, feeling suddenly self-conscious. It really had been a last-minute purchase—a lightning-fast consensus made between her, the pretty redhead at the store, and her colleague with the light grey-brown hair, before she came back from the bathroom.</p>
<p>“A record,” Ayumu says, and then gasps. “Don’t tell me. You got it at the store?”</p>
<p>“It’s by Otis Redding,” Shioriko stutters, feeling the need to justify herself. “I used to dance to this song all the time with my dad. I think you’ll like it. At least, I hope you do.”</p>
<p>A lull, and Shioriko holds her breath.</p>
<p>“God, you truly are too much for me to handle,” Ayumu says.</p>
<p>Before Shioriko has time to think of a response, Ayumu rises from the couch and heads toward the turntable. Wordlessly asking Shioriko for permission, she changes the settings to 7-inch 45, and lowers the needle onto the groves. These Arms Of Mine begins playing.</p>
<p>Walking back over to the couch, Ayumu sits next to Shioriko, listening to the music. Not knowing what else to do, Shioriko does the same, holding her left hand under her right and taking deep breaths again. The lyrics were, for a lack of a better word, incriminating. Shioriko hadn’t much thought about it when she bought the record, but she knew the words by heart and knew exactly what they meant in English. And now, hearing the smooth, pained crooning ride those gentle piano triplets, bringing stark clarity to her feelings, Shioriko knew that a lot—too much—was riding on how effectively they were being communicated to Ayumu.</p>
<p>When the record ends, Shioriko waits a few, silent moments before getting up to the turntable, and setting the needle back in place. Taking one last, long breath, she turns around and looks at Ayumu—whose eyes glisten under the little light that filters through the window, from the clear night outside.</p>
<p>“Well, that was rather direct, wasn’t it?” Ayumu says, smiling. “Come here, Shioriko.”</p>
<p>Shioriko awkwardly pads her way towards Ayumu, who takes her hand as soon as she’s close enough. Then, without warning, she pulls Shioriko down toward her, resulting in Shioriko landing directly on top of Ayumu, spread out down the length of the couch. Shioriko could not imagine the way fear and urgency churned their way down her chest and her stomach, rendering her breathless before she had any time to process the situation. She stood before a wide, endless precipice—one she knew she would never return from, and yet could not wait to jump into.</p>
<p>“Shioriko?” Ayumu asked, bringing her left index finger softly onto Shioriko’s lower lip. “I’m going to do something, and I want you to stop me if you don’t like it. Is that okay?”</p>
<p>Shioriko might have known that her first kiss wouldn’t go like they did in Kaoruko’s dramas, but nothing could have prepared her for the sensation of absolute catharsis—of unmitigated bliss—that came with kissing Ayumu Uehara. She might have rued the fact that she was not completely sober, for had her remaining drunkenness not propelled her to seek them again and again, she might have otherwise faltered. Was it the alcohol, then, that possessed her to lower the direction of her mouth, planting those kisses not on Ayumu’s lips, but onto her exposed neck? Perhaps , she thought, later. At any rate, she might also blame it for not hesitating before softly taking Ayumu’s skin between her teeth when Ayumu, between bated breaths, had asked her to.</p>
<p>There is a fair amount of hesitation. Shioriko, after all, could not be ignorant of the implication of Ayumu placing Shioriko’s hand on the belt of her skirt, gently pushing both down. Shioriko could not be blamed for being scared—possibly more than she had ever been in her life. It was not then, but rather at the point when all that remained of Ayumu’s clothes were her sweater and underwear, and when Ayumu reached to unclasp Shioriko’s bra from under her sweater, that Shioriko finally hit a block on the road and tensed up. Ayumu instantly stops.</p>
<p>“Should we stop?” Ayumu smiles, looking at Shioriko with an expression that promised infinite understanding under its aegis. Shioriko could have cried. “We can stop.”</p>
<p>“No,” Shioriko says. “It’s okay. I’m okay.”</p>
<p>“Hey, Shioriko,” Ayumu says, looking up and past Shioriko. “How about we move to your bedroom?”</p>
<p>Shioriko feels herself losing almost all semblance of self-control as she is pulled by Ayumu’s hand, who pads her way leisurely from the couch to Shioriko’s room—her bare legs a shadowed suggestion, and only barely, under her oversized sweater. Once inside her room, Shioriko closes the door and is met, under that oppressive silence, by Ayumu. Running her fingers through Shioriko’s hair, Ayumu breathes with such palpable urgency that Shioriko wants nothing more than to relieve her of whatever spell the night has cast on both of them.</p>
<p>Shioriko tries something, nudging her nose under Ayumu’s chin and planting a single kiss on her exposed neck. She is surprised by the results: Ayumu offers virtually no resistance and, much on the contrary, appears to collapse onto the simplicity of the gesture, as if asking Shioriko for more. Shioriko makes an important discovery then: That, for what could have been the whole night, Ayumu had been waiting for her to take the initiative; that it may have been much beyond Ayumu’s gentle disposition to force herself onto the headstrong Shioriko and, now that the latter had made her first advance onto the former’s expectant skin, it may as well have been a message of complete and utter capitulation.</p>
<p>It’s a short trip to Shioriko’s bed, and she doesn’t even bother with Ayumu’s sweater. That magnetic topography of Ayumu’s body gives Shioriko silent instructions: the heat of Ayumu’s pliancy providing the fuel—the little push of Ayumu’s hand on the back of Shioriko’s head the spark that lights it all. Ayumu throws her head back and lets herself be taken; Shioriko, nervous as she might have been, never lets her movements escape the rhythm of Ayumu’s bated breaths.</p>
<p>They shift their bodies before long.</p>
<p>Shioriko had never thought it possible to feel this way; celestial bodies moving towards alignment, casting wave after wave of light and sound over them and washing their combined chemistries into astral pastels. Ayumu, impressing onto Shioriko’s bare back the candour of her desire, pushes her fingers through the thick of the warming air until Shioriko, unable to withstand that insurmountable mountain, collapses into an infinitesimal ball of fire and calls out Ayumu’s name over and over again.</p>
<p>Ayumu was loving, and gentle, and patient, beyond Shioriko’s wildest expectations; Shioriko cries a little, surprising even herself, as they lay in bed afterwards. Without anything by way of hesitation, Ayumu holds Shioriko and strokes loving patterns on the younger girl’s back, being gentle on the marks inflicted only minutes before. Not even Shioriko knows what goes through her head for a few hazy moments, thinking of everything and nothing at all in the span of a single second. She feels lost in the abstract melancholy of loving but not quite knowing how.</p>
<p>But love she does, as she feels Ayumu’s fingers coil around hers, and she reckons she’ll have plenty of time later to work these things out.</p>
<p>Shioriko awakens from a deep sleep sometime in the early morning, alone. She thinks it a cruel trick of nature to have her, even for a second, think that what transpired the night before—the consummated dilution of a single drop of rose-coloured ink landing on Shioriko’s once-crystalline heart, giving it the most radiant of hues—had been just a dream. Ayumu breaks that spell when, walking out of the bathroom wearing only Ayumu’s black turtleneck, hugging the immaculate sinuosity of her figure, gives her a smile.</p>
<p>Whatever residual guilt dissipates from Shioriko almost instantly and, whenever it was to come back, she at least knew she’d have somebody to help her keep it at bay.</p>
<p>“So,” Kaoruko says, and Shioriko anticipates it. “How did it go? Did you get laid?”</p>
<p>“Hm…yup,” Shioriko decides, pretty much on the spot. “Four times, actually.”</p>
<p>“Good, good,” Kaoruko laughs, picking up on Shioriko’s nonchalance. “Wouldn’t expect anything less from my baby sister.”</p>
<p>On the other side of the receiver, Shioriko can hear the sound of running water, and the clinking of plates. She’s a little disappointed that Kaoruko doesn’t pry.</p>
<p>“I’m assuming mother and father aren’t around,” Shioriko says.</p>
<p>“Nah, they’re out visiting the neighbours. I’m gonna go meet them later,” Kaoruko says. “So, did the now-changed Shioriko Mifune learn something new about herself from her date with whatshername?”</p>
<p>“Ayumu,” Shioriko laughs, with the customary eye-roll. She thinks about it for a few moments, and finally makes up her mind. “Well, I guess I did learned that I am what they call a ‘top.’”</p>
<p>Shioriko hears what sounds like a splash of water on the other end of the receiver, and not long after, the sound of running water stops.</p>
<p>“Pardon?” says Kaoruko.</p>
<p>“Hm?” parries Shioriko.</p>
<p>“…Shioriko?” asks Kaoruko, slowly and evenly. “My Shioriko? Little Shiopi? The same Shiopi who used to cover my eyes whenever there was a kiss scene in one of my dramas until she was like, in high school? Student-council-vice-president Shioriko?”</p>
<p>“Could you…stop calling me Shiopi?” Shioriko sighs, bringing a hand to her forehead, and trying her hardest to hold back a smile.</p>
<p>“On second thought, I think I’ll be stopping by Tokyo after leaving Kyoto,” Kaoruko says, with some effort. “I don’t know if I want to interrogate this Ayumu girl or shake her hand.”</p>
<p>“Absolutely not. You do not touch her,” Shioriko says, adopting her best student council timbre. And then, so soft that the phone barely picks it up: “But…if you want to meet her, I’m sure she’d like that as well.”</p>
<p>“It’s set, then!” Kaoruko shrieks into the phone. “I’ll send you the details of my train later. I’m so happy for you!”</p>
<p>“Thanks,” Shioriko just says, and then:</p>
<p>“Wait…wait a second,” Kaoruko stops. “Did…did you say four times?”</p>
<p>Which were the last words Shioriko heard before she summarily ended the call, walking over to the kitchen sink and splashing cold water on her face.</p>
<ol>
<li><p>Notes I:</p>
<blockquote>
<p>This came…much later than expected lmao. Super sorry for the wait! I had the hardest time writing THE scene lmao. I essentially had the entire chapter written except for bits and pieces of that part. I think I’m relatively satisfied with it now, so I hope those who get around to reading it enjoy it. As always, any and all feedback is more than welcome!</p>
<p>By the way, the title of the fic is a reference to the jazz record they listen to in Shimokitazawa. It’s a Miles Davis recording from his Volume 3 album, if anybody is interested in checking that out!</p>
<p>ShioPomu is an entire mood tbh. Nijigasaki S2 announcement when??</p>
</blockquote>
</li>
<li><p>Notes II:</p>
<blockquote>
<p>I wanted to get the whole two chapters up by today, since it was Christmas, but the holidays were a bit busy, so I hope this first chapter is enough to keep those of you who think ShioPomu is criminally under-appreciated hooked for the rest! I will do my best to get the second one up by the new year. :)</p>
<p>I hope anybody who celebrated had a safe and wonderful holiday season, and thank you for reading! &lt;3 Any feedback is much welcome.</p>
</blockquote>
</li>
</ol>
]]></content>
      <tags>
        <tag>測試Testing!</tag>
      </tags>
  </entry>
  <entry>
    <title>「宵宮（原神）同人EP」剎那如夢人生</title>
    <url>/next-nest/2021/11/04/mons-dreamin-moment-life/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><pre><code>咲いて咲いて咲いて
夜空に舞った
セツナチックジンセー
歓声を頂戴
</code></pre><p>綻放！綻放！綻放！<br>在夜空中舞蹈，<br>給這剎那如夢的一生，<br>添上一點歡鬧。</p>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><a href="https://music.163.com/#/song?id=1871029743" title="網易雲音樂 セツナチックジンセー"><strong><em><ruby>剎那<rt>セツナ</rt>如夢<rt>チック</rt>人生<rt>ジンセー</rt></ruby></em></strong></a> 是由 <a href="https://space.bilibili.com/530682/">夢鼠計劃 (Project Mons)</a> 製作，於2021年8月16日投稿至Bilibili的原神 <a href="https://zh.moegirl.org.cn/宵宮" title="萌娘百科詞條 宵宮"><strong><em>長野原 宵宮</em></strong></a> 同人EP曲目，本曲目由與夢鼠長期合作的日本歌手 <a href="https://space.bilibili.com/2130520151/">空柚(くゆ)</a> 演唱。</p>
<span id="more"></span>
<blockquote>

    <div id="aplayer-afOXzowV" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1871029743" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p>Bilibili: <a href="https://www.bilibili.com/video/av547299837/"><code>av547299837</code></a></p>
</blockquote>
<h2 id="About-Naganohara-Yoimiya"><a href="#About-Naganohara-Yoimiya" class="headerlink" title="About Naganohara Yoimiya"></a>About <a href="https://zh.moegirl.org.cn/宵宮" title="萌娘百科詞條 宵宮"><strong><em>Naganohara Yoimiya</em></strong></a></h2><p>——關於 <a href="https://zh.moegirl.org.cn/宵宮" title="萌娘百科詞條 宵宮"><strong><em>長野原 宵宮</em></strong></a></p>
<p><a href="https://zh.moegirl.org.cn/宵宮" title="萌娘百科詞條 宵宮"><strong><em>宵宮</em></strong></a> 是由<a href="https://zh.moegirl.org.cn/MiHoYo">miHoYo</a>研發的遊戲《<a href="https://zh.moegirl.org.cn/原神">原神</a>》及其衍生作品的登場角色。</p>
<blockquote>
<pre><code>慶典開場，煙花綻放！
</code></pre></blockquote>
<p>才華橫溢的煙花工匠。<br>「長野原菸花店」現任店主，被譽為「夏祭的女王」，在稻妻城內可謂是家喻戶曉。<br>稻妻城每年舉辦的各式慶典都會用到宵宮精心製作的煙花，她有著焰火般旺盛的創造力，總能為人們帶來無與倫比的驚喜。<br>宵宮童心未泯，時常與孩子們一同玩些簡單又不失趣味的小遊戲，或是陪他們一起去找亮晶晶的小玩意兒。<br>孩童的純粹讓她感到無比快樂。<br>她也熱衷於社交，總是抓住一切機會與人攀談，似乎有著無盡的逸聞和想法亟待分享。<br>原則與匠心，是宵宮最為珍重之物——煙花雖然轉瞬即逝，絢爛的光影卻能永遠留存於人們心中。<br><strong>既是一瞬，也是永恆。</strong><br>這份短暫的奇蹟，便是她給予周圍人的「守護」。<br>「正是因為有大家的寄託，煙花才能以如此美妙的姿態一直存在下去吧。」</p>
<h3 id="Character-Experience"><a href="#Character-Experience" class="headerlink" title="Character Experience"></a>Character Experience</h3><ul>
<li><strong>第二章 第一幕 「不動鳴神，恆常樂土」</strong><br>給半四郎假神之眼並讓他躲過了眼狩令，與旅行者一起前往「町奉行所」救援製作假神之眼的正勝師傅。<br>在「町奉行所」裡看到正在對正勝師傅動私刑的守衛們被九條裟羅禁止。<br>宵宮用煙花吸引了守衛們，上前營救正勝師傅，九條裟羅發現並默許其行為。<br>然後與旅行者分離開，帶著正勝師傅去求醫。</li>
<li><strong>琉金之章 第一幕</strong><br>大人們為了三個孩子不亂跑而講了一個「大貉妖」的故事，宵宮也配合著並給這三個孩子煙花作為打敗「大貉妖」的武器。<br>和旅行者一起回到長野原舉辦煙花會。<br>藏匿偷渡回稻妻正被天領奉行通緝的朔次郎，幫助他逃出稻妻。<br>和旅行者為朔次郎準備逃出稻妻的船隻，為煙花會準備煙花材料，朔次朗對於是否再次離開稻妻猶豫不決。<br>宵宮和旅行者一起找一對老顧客，讓他們的兒子——在天領奉行作官的今谷佳祐幫忙，了解到今谷佳祐和朔次郎曾經發生過矛盾。<br>回到長野原，聽到今谷佳祐帶天領奉行的人來抓朔次朗，連忙追過去。<br>詢問孩子們線索，擊敗攔路的天領奉行眾，與今谷佳祐打賭，戰勝今谷佳祐為朔次郎贏得單獨坦白的機會，今谷佳祐與朔次朗和解。<br>最後長野岩煙花會開始，與旅行者觀看煙花，並給旅行者一張「長野原菸花店」的紙條。</li>
<li><strong>第二章 第三幕 「千手百眼，天下人間」</strong><br>給旅行者一個「特大號煙花」。</li>
</ul>
<h3 id="About-the-Character"><a href="#About-the-Character" class="headerlink" title="About the Character"></a>About the Character</h3><ul>
<li>由於日語CV植田佳奈的代表角色為<a href="https://zh.moegirl.org.cn/遠坂凜">遠坂凜</a>且為<a href="https://zh.moegirl.org.cn/伊什塔爾(Fate">弓系角色</a>)，且宵宮擁有<a href="https://zh.moegirl.org.cn/關西腔">關西腔</a>，因此宵宮得到了“關西遠坂凜”“關西腔弓凜”的外號。</li>
<li>宵宮所在家族的姓為“長野原”，父親為長野原龍之介，因此其全名應該是“長野原 宵宮”，與<a href="https://zh.moegirl.org.cn/芭芭拉">芭芭拉</a>、<a href="https://zh.moegirl.org.cn/香菱">香菱</a>一樣，官方提供了理論上的姓氏，但是沒有提及全名。</li>
<li>跟踪導彈真君<ul>
<li>在蓄力時產生3枚 <em>焰硝矢</em> ，這些 <em>焰硝矢</em> 起到跟踪作用，因此得名。</li>
</ul>
</li>
<li>宵宮有個相關的每日委託「煙花試玩計劃」，旅行者可以放有各種圖案花樣的煙花。</li>
</ul>
<h2 id="Staff"><a href="#Staff" class="headerlink" title="Staff"></a>Staff</h2><ul>
<li>Music/Lyrics: U-DON</li>
<li>Arrangement: あずきどん。</li>
<li>Vocal: 空柚_official</li>
<li>Illustration: 阿稳同学_</li>
<li>PV: K_Lacid</li>
<li>Management: Mizuyo</li>
</ul>
<h2 id="Lyrics"><a href="#Lyrics" class="headerlink" title="Lyrics"></a>Lyrics</h2><figure class="highlight plaintext"><figcaption><span>セツナチックジンセー 歌詞</span></figcaption><table><tr><td class="code"><pre><span class="line">- Project Mons 2021 -</span><br><span class="line">A)</span><br><span class="line">しかと思い込め火を付けろ</span><br><span class="line">浮世飾る刹那</span><br><span class="line">後の祭りとか要らへんで</span><br><span class="line">騒げ 恥を捨てて</span><br><span class="line">B)</span><br><span class="line">あー酔いに酔って馬鹿げた夢を見る</span><br><span class="line">そういうもんやってカッコつけて</span><br><span class="line">よりによって素面で恋に泣く</span><br><span class="line">ぐしゃぐしゃでも見上げりゃ ほら</span><br><span class="line">「綺麗やろ？」</span><br><span class="line">C)</span><br><span class="line">咲いて咲いて咲いて</span><br><span class="line">夜空に舞った</span><br><span class="line">セツナチックジンセー</span><br><span class="line">歓声を頂戴</span><br><span class="line">なあ この絶景に涙は似合わんで</span><br><span class="line">吸って吐いて吸って</span><br><span class="line">思いっきり吐いて</span><br><span class="line">冴え渡った脳内</span><br><span class="line">心配はオーライ！</span><br><span class="line">さあ どの瞬間もまばたき御免や</span><br><span class="line">D)</span><br><span class="line">躊躇ってなどくれるなよ</span><br><span class="line">派手に咲き誇れ夏の花</span><br><span class="line">まだまだ今宵は旅の途中 託すんや輝きを</span><br><span class="line">何度でも「もう一度！」</span><br><span class="line">C2)</span><br><span class="line">咲いて咲いて咲いて</span><br><span class="line">夜空に舞った</span><br><span class="line">セツナチックジンセー</span><br><span class="line">お手を拝借</span><br><span class="line">なあ 無理難題が丁度ええやんか</span><br><span class="line">吸って吐いて吸って</span><br><span class="line">思いっきり吐いて</span><br><span class="line">打ち上がった正体</span><br><span class="line">気分はどうなん？</span><br><span class="line">さあ ほな永遠にまばたき御免や</span><br><span class="line">まだ消えないで</span><br></pre></td></tr></table></figure>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>萌娘百科詞條 宵宮: <a href="https://zh.moegirl.org.cn/宵宮">https://zh.moegirl.org.cn/宵宮</a></li>
</ol>
]]></content>
      <tags>
        <tag>Genshin Impact (原神)</tag>
      </tags>
  </entry>
  <entry>
    <title>「Omoi】君が飛び降りるのなら</title>
    <url>/next-nest/2021/11/05/omoi-kimigatobio/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><pre><code>君が飛び降りるのならば僕は　笑って一緒に飛び降りる
止めてくれるとでも思ったか！僕らの絆を見くびるか！
</code></pre><p>如若你要一躍而下　我會笑著和你一同躍下<br>別以為你能阻止我！別小看我們的羈絆啊！</p>
<p><img src="https://liella-gen2.github.io/imagehost/君が飛び降りるのなら.jpeg" alt="Cover of 君が飛び降りるのなら, from moegirl"></p>
<p>(Cover Image &amp; PV Background of 君が飛び降りるのなら, by <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> )</p>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><a href="https://zh.moegirl.org.cn/如若你跳落的話" title="萌娘百科词条 君が飛び降りるのなら"><strong><em>Kimi ga Tobioriru no Nara</em></strong></a> is an original VOCALOID work vocal-featuring Miku by <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a>, which was submitted to Niconico on June 13<sup>th</sup>, 2017, and later to YouTube &amp; Bilibili.<br>Its title in Chinese <strong>如若你跳落的話</strong> was translated by the mover, which was later adopted when <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> submitted the work to Bilibili on April 29<sup>th</sup>, 2019.<br>A new version titled <strong>君が飛び降りるのならば</strong> with reporduced PV by coalowl and rewritten lyrics, was submitted to the platforms mentioned above on Nov <sup>11th</sup>, 2020.<br><del>Nevertheless, its new title has a new character <code>ば</code>.</del></p>
<p><a href="https://zh.moegirl.org.cn/如若你跳落的話" title="萌娘百科词条 君が飛び降りるのなら"><strong><em>君が飛び降りるのなら</em></strong></a> 是 <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 於2017年6月13日投稿至niconico，後來投稿至YouTube和Bilibili的VOCALOID原創歌曲，由初音MIKU演唱。<br>其中文譯名為<strong>如若你跳落的話</strong>，是搬運者自行對標題進行翻譯得到的，後來在 <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 於2019年4月29日投稿至Bilibili時也採用了這個譯名。<br>2020年11月6日投稿了重填詞PV由coalowl重製版本的<strong>君が飛び降りるのならば</strong><del>然而這個版本的標題比原版多了一個<code>ば</code>字</del>。</p>
<span id="more"></span>
<blockquote>

    <div id="aplayer-zHsKPSJi" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1824854135" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av50818415/">Bilibili: <code>av50818415</code></a> (Niconico: <code>sm32358510</code>)</p>
</blockquote>
<ul>
<li>重製版<blockquote>

    <div id="aplayer-ysKOfNrA" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="123883355" data-server="netease" data-type="album" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme=" #39c5bb"></div>
<p><a href="https://www.bilibili.com/video/av797684560/">Bilibili: <code>av797684560</code></a></p>
</blockquote>
</li>
</ul>
<h2 id="About-Omoi"><a href="#About-Omoi" class="headerlink" title="About Omoi"></a>About Omoi</h2><p><a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> is a male-female VOCALOID-producing duo formed by former high school classmates Sakurai<code>♂</code> and Kimura<code>♀</code>.<br>They specialized in producing synthesizer rock works.</p>
<p><a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 是一男一女的二人VOCALOID創作組合，成員櫻井(男生)和木村(女生)是高中時的同學。<br>他們的風格以合成搖滾爲主。</p>
<p>Sakurai is in charge of the songwriting (lyrics&amp;composition), instrumental (drum, synthesizer, guitar), as well as the tuning; Kimura is in charge of the instrumental (synthesizer, keyboard, guitar).</p>
<p>櫻井主要負責作詞曲、調聲、及打鼓等樂器，木村主要負責使用合成器、鋼琴、吉他等樂器。</p>
<p>Sakurai thought of singing songs with VOCALOID because he is not very good at singing.<br>Nevertheless, he didn’t know anything about chords and accompaniment, so he found Kimura, who was relatively good at these content, and started the combination activity in a semi-mandatory manner.</p>
<p>櫻井之所以會想到用VOCALOID來演唱歌曲，是因為自己不太擅長唱歌。但是他在和弦、伴奏等方面一竅不通，於是找到了相對十分擅長這些內容的木村，以半強制的方式開始了組合活動。</p>
<p>They started producing in 2012, and first debuted in 2013 with the song “Snow Drive”.<br>The VOCALOID mainly used in their songs is Hatsune Miku, yet they have also started to utilize Kagamine Rin, GUMI and IA for background chorus in their recent works.</p>
<p>兩人在2012年結成組合，2013年發表處女作《Snow Drive》。<br>他們使用的VOCALOID以初音MIKU爲主，後來也開始使用鏡音RIN、GUMI、IA來在他們的作品中進行和聲。</p>
<pre><code>Omoiと申します。
絶対の歌です。
</code></pre><p><a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> is used to describe their work in one sentence in the description when submitting the work.<br>The meaning of the sentence above is…</p>
<p><em>We’re Omoi, this a song of absoluteness.</em></p>
<p><a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 喜歡用一個詞來描述二人自己創作的曲目，並在投稿時放到簡介裡面，投這首歌的時候就曾在Niconico寫下上面的話，意為</p>
<p><em>我們是Omoi，這是一首絕對的歌曲。</em></p>
<ul>
<li><code>Omoi</code> Official Website: <a href="https://www.omoi3965.com/">https://www.omoi3965.com/</a></li>
<li><code>Omoi</code> Blog: <a href="https://omoi3965.blog.fc2.com/">https://omoi3965.blog.fc2.com/</a></li>
</ul>
<h2 id="Original-Work-av50818415"><a href="#Original-Work-av50818415" class="headerlink" title="Original Work av50818415"></a><a href="https://www.bilibili.com/video/av50818415/">Original Work <code>av50818415</code></a></h2><iframe src="//player.bilibili.com/player.html?aid=50818415&bvid=BV1w441187ES&cid=88977701&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="Staff"><a href="#Staff" class="headerlink" title="Staff"></a>Staff</h2><ul>
<li>Music/Lyrics/Arrangement/Tuning/Illustration: <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a></li>
</ul>
<p><del>真正意義上的一體機，少見的六邊形戰士</del></p>
<h2 id="My-Personal-Opinion"><a href="#My-Personal-Opinion" class="headerlink" title="My Personal Opinion"></a>My Personal Opinion</h2><p>(在此，筆者愿淺談自己對這首曲目的拙見。)</p>
<p>這首曲目似乎是以陪伴著主人公的miku的視角，講述miku得知主人公行將跳樓之後對主人公所説的話。<br>但這些話有可能是創作這首曲目的 <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 在平日中所想過的、說過的。<br>大家活在這個世界上，沒有人是容易的，總有獨自罹受困難與痛苦的過程。<br>雖然困難需要自己去解決，但是痛苦是可以與大家一起去面對的哦~<br>這些，既是曲目中miku對主人公的話語，也是在現實中 <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 與朋友之間的話語，<br>更是 <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 與miku獻給傾聽這些話語的諸位的鼓舞。<br>激烈的曲風，其深處流淌著真摯的情感；<br>稚嫩的話語之中，閃爍著溫柔的光芒。</p>
<h2 id="Lyrics"><a href="#Lyrics" class="headerlink" title="Lyrics"></a>Lyrics</h2><figure class="highlight plaintext"><figcaption><span>君が飛び降りるのなら 歌詞</span></figcaption><table><tr><td class="code"><pre><span class="line">* 翻譯: そらね</span><br><span class="line"></span><br><span class="line">いきなり歌い始めてごめんね</span><br><span class="line">抱歉突然開始唱起歌來</span><br><span class="line">ちょっとだけそのまま聞いててね</span><br><span class="line">稍微就這樣聽著吧</span><br><span class="line">本日お伝えしたいのは</span><br><span class="line">今天想傳達給你的事</span><br><span class="line">とっても大事な君のこと！</span><br><span class="line">超級重要的你的事喲</span><br><span class="line"></span><br><span class="line">出會った日は覚えてないけど</span><br><span class="line">雖然有時候會和你吵架</span><br><span class="line">なんでも知ってるつもりだよ</span><br><span class="line">但也正因為如此對彼此無所不知</span><br><span class="line">君の長所は真面目なこと</span><br><span class="line">你的優點是非常認真</span><br><span class="line">でも中二病がひどい！</span><br><span class="line">只是中二病太嚴重了！</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">君が飛び降りるのならば僕は</span><br><span class="line">若你要一躍而下的話</span><br><span class="line">笑って一緒に飛び降りる</span><br><span class="line">我也會笑著和你一躍而下</span><br><span class="line">止めてくれるとでも思ったか！</span><br><span class="line">別以為你可以阻止我！</span><br><span class="line">僕らの絆を見くびるか！</span><br><span class="line">別小看我們的羈絆啊！</span><br><span class="line"></span><br><span class="line">そして手を繋いで落ちて行こう</span><br><span class="line">然後我們牽著手一起落下吧</span><br><span class="line">地面めがけてピースしよう</span><br><span class="line">朝向地面比耶吧 ( •̀ ω •́ )y</span><br><span class="line">でもそういえば何かを</span><br><span class="line">不過說起來好像</span><br><span class="line">忘れているような...</span><br><span class="line">忘記了什麼事...</span><br><span class="line">ああそうだ！見たいテレビがあった！</span><br><span class="line">啊啊想起來了！有想看的電視的節目啊！</span><br><span class="line">やっぱり飛ぶの後でにしませんか！</span><br><span class="line">一躍而下果然還是以後再説吧！</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">君に出會ってからというもの</span><br><span class="line">從遇見你開始</span><br><span class="line">全てなんだかおかしくなった</span><br><span class="line">全部都變得奇怪了起來</span><br><span class="line">佔いなんて信じていなかったけど</span><br><span class="line">明明是個不相信占卜的人</span><br><span class="line">たまには良いと思えた</span><br><span class="line">等回過神來已經深陷其中</span><br><span class="line"></span><br><span class="line">変な音楽に觸れて</span><br><span class="line">總是推薦我聽奇怪的音樂</span><br><span class="line">変な漫畫も沢山読んで</span><br><span class="line">推薦我看奇怪的漫畫</span><br><span class="line">気付いたら僕も君の事</span><br><span class="line">左右著別人的人生</span><br><span class="line">笑えなくなっていた！</span><br><span class="line">開什麼玩笑你這傢伙給我記住！</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">君が飛び降りるのならば僕は</span><br><span class="line">若你要一躍而下的話</span><br><span class="line">君よりも先に飛び降りる</span><br><span class="line">我會比你先一躍而下</span><br><span class="line">説得されるとでも思ったか！</span><br><span class="line">別以為你可以說服我！</span><br><span class="line">僕の馬鹿さを甘く見るな！</span><br><span class="line">不要小看我的傻勁啊！</span><br><span class="line"></span><br><span class="line">え何？あの有名ボカロＰが</span><br><span class="line">誒什麼？那個有名的 VOCALOID-P</span><br><span class="line">明日新曲上げるだって？</span><br><span class="line">明天要發布新的曲目嗎？</span><br><span class="line">ってなんでこんな大事な時まで</span><br><span class="line">都到了這麼重要的時候</span><br><span class="line">Twitter見てんのさ君は…</span><br><span class="line">你怎麼看起了Twitter？</span><br><span class="line">もう僕ら明日それ見なきゃ</span><br><span class="line">所以明天看不到（那首新曲）的話</span><br><span class="line">この世界にさよならできないじゃん！ああ</span><br><span class="line">我們就無法向這個世界告別！啊----</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">いつか　僕らは</span><br><span class="line">終有一天 我們</span><br><span class="line">ナニモノか分かるかな</span><br><span class="line">也能夠得到答案嗎？</span><br><span class="line">そんな　未來は</span><br><span class="line">直到遺忘那樣的未來之前</span><br><span class="line">來る訳は　ないよな就</span><br><span class="line">這樣一直保密吧</span><br><span class="line"></span><br><span class="line">飛び降りる前の　確認事項</span><br><span class="line">準備跳下去之前需要確認的注意事項</span><br><span class="line">ガスの元栓　窓の戸締り</span><br><span class="line">記得關上燃氣　鎖好門窗</span><br><span class="line">ハードディスクは　叩き割っとく</span><br><span class="line">鍵盤要不要直接砸掉呢？</span><br><span class="line">…のはもったいなくてやめたけど</span><br><span class="line">...還是算了吧太浪費了呀</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">君が飛び降りるのならば僕は</span><br><span class="line">若你要一躍而下的話</span><br><span class="line">笑って一緒に飛び降りる</span><br><span class="line">我也會笑著和你一躍而下</span><br><span class="line">止めてくれるとでも思ったか！</span><br><span class="line">別以為你可以阻止我！</span><br><span class="line">僕らの絆を見くびるか！</span><br><span class="line">別小看我們的羈絆啊！</span><br><span class="line"></span><br><span class="line">次に僕らが出會う世界でも</span><br><span class="line">若是下次我們再次相遇的世界</span><br><span class="line">またこんな風になれたらいいね</span><br><span class="line">也能像這樣就好了呢</span><br><span class="line">生まれ変わったら何になるか</span><br><span class="line">若是輪迴轉世會變成什麼呢</span><br><span class="line">本で佔ってみようか</span><br><span class="line">試著用書本占卜吧？</span><br><span class="line">君は玉ねぎ　僕はタイヤ你</span><br><span class="line">是「洋蔥」　我是「輪胎」</span><br><span class="line">やっぱり飛ぶの今度にしませんか…？</span><br><span class="line">果然一躍而下還是改到下次吧……？</span><br><span class="line">本當に飛べる日　目指して</span><br><span class="line">將真的、真的能夠一躍而下的那天當作目標</span><br><span class="line">もうちょっとだけ一緒に居ませんか！</span><br><span class="line">要不要稍微再繼續在一起呢！</span><br></pre></td></tr></table></figure>
<h2 id="From-Comments"><a href="#From-Comments" class="headerlink" title="From Comments"></a>From Comments</h2><p>(在此，筆者希望能夠引用<a href="https://www.bilibili.com/video/av797684560/#comment">曲目<code>PV重製版</code>視頻評論區</a>的朋友們的話)</p>
<blockquote><p>特别喜欢这首歌的活力和纯真感，明明歌词在谈很压抑的事(劝导自杀者？），但却没有故作高姿态的温柔关怀，也没有讲什么生死哲理和道德约束，只有充满力量的真情…在之前那个视频循环过n次。等一个改词后的翻译。先谢谢翻译大佬<code>[抱拳]</code></p>
<footer><strong>視頻av797684560評論區</strong><cite><a href="https://www.bilibili.com/video/av797684560/#reply3679267817">@balanceRR</a></cite></footer></blockquote>
<blockquote><p>这真的好棒好的一首歌 言词轻松活泼却比很多“世界其实很美好你要坚强”之类的话有力很多<br>我会陪你一起跳的<br>还有电视剧没看那就下次吧<br>下周漫画主角要胜利了那就下次吧<br>今天跳会转生成洋葱和轮胎那就下次吧</p>
<p>这是最棒的下次一定</p>
<footer><strong>視頻av797684560評論區</strong><cite><a href="https://www.bilibili.com/video/av797684560/#reply3692618796">@八老爷生前是个体面人</a></cite></footer></blockquote>
<blockquote><p>看了歌词之后就好想哭啊……………..真的被这首歌触动到了毕竟生活这样经常也会有想跳的时候，这个时候要是有人能像这首歌讲的那样在身边真的会很开心会想着一起的</p>
<footer><strong>視頻av797684560評論區</strong><cite><a href="https://www.bilibili.com/video/av797684560/#reply3680481509">@烛棘</a></cite></footer></blockquote>
<blockquote><p>谢谢你，感受到歌曲的力量了，发自内心的感谢你。</p>
<footer><strong>視頻av797684560評論區</strong><cite><a href="https://www.bilibili.com/video/av797684560/#reply3743686602">@千代月狐</a></cite></footer></blockquote>
<h2 id="Extra"><a href="#Extra" class="headerlink" title="Extra"></a>Extra</h2><p>(在此，筆者慾講述一點本曲與自己相關的經歷)</p>
<p>筆者個人也一直有處處吃癟，時時受挫的時候。<br>正如上文所説，活在這個世界上沒有一個人是容易的，<br>完全會有各種不幸同時降臨的階段。<br>筆者曾有過參加<a href="https://oi-wiki.org/contest/oi/#noip"><code>NOIp</code></a>等<a href="https://zh.moegirl.org.cn/OI"><code>OI</code></a>競賽的夢想，<br>但因爲文化課成績不夠好，這個夢想還未開始便迎來結束。<br>在此之後，筆者經常性地進入無綫頹唐徘徊彷徨的狀態，<br>當各種不幸在一個心智只有15.5嵗的高中生身上發生時，縱使它們再微小不過，也足以壓垮這個孩子。<br><em>Nevertheless,</em><br>這首歌拯救了我。<br>愿這份來自 <a href="https://zh.moegirl.org.cn/Omoi" title="萌娘百科词条 Omoi"><strong><em>Omoi</em></strong></a> 的溫柔，也能為屏幕前的你，帶來溫暖的慰藉、短暫的小憩與繼續前行的力量。</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>萌娘百科词条 君が飛び降りるのなら: <a href="https://zh.moegirl.org.cn/如若你跳落的話">https://zh.moegirl.org.cn/如若你跳落的話</a></li>
<li>萌娘百科词条 Omoi: <a href="https://zh.moegirl.org.cn/Omoi">https://zh.moegirl.org.cn/Omoi</a></li>
<li>「Omoi」如若你跳落的話（君が飛び降りるのなら）- 初音未来 <a href="https://www.bilibili.com/video/av50818415/">av50818415</a> 2019-04-29</li>
<li>「Omoi」如若你跳落的話（君が飛び降りるのならば）- 初音未来 <a href="https://www.bilibili.com/video/av797684560/">av797684560</a> 2020-11-06</li>
<li>Vocaloid wiki in Fandom, Omoi: <a href="https://vocaloid.fandom.com/wiki/Omoi">https://vocaloid.fandom.com/wiki/Omoi</a></li>
<li>初音ミク wiki, Omoi: <a href="https://w.atwiki.jp/hmiku/pages/28820.html">https://w.atwiki.jp/hmiku/pages/28820.html</a></li>
<li>初音ミク wiki, 君が飛び降りるのなら: <a href="https://w.atwiki.jp/hmiku/pages/37012.html">https://w.atwiki.jp/hmiku/pages/37012.html</a></li>
</ol>
<p>文字内容默认使用《知识共享 署名-非商业性使用-相同方式共享 3.0》协议。</p>
]]></content>
      <tags>
        <tag>VOCALOID</tag>
        <tag>VOCALOID Comments &amp; Recommendations</tag>
        <tag>Hatsune Miku (初音MIKU)</tag>
        <tag>Omoi</tag>
      </tags>
  </entry>
  <entry>
    <title>千醬！我真的好喜歡你啊!!爲了你我要推導π的展開式！!!----</title>
    <url>/next-nest/2021/10/13/pi-chi-chan/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>有一天，群裏的朋友在萌娘百科上注意到</p>
<p><img src="https://liella-gen2.github.io/imagehost/pi.jpeg" alt></p>
<p>光是背出來怎麽夠呢??爲了千醬，我們當然要把它推導出來啊!!</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>如題，對於 $\mathrm{R}$ 上的任意周期函數 $f(x)$ ，…</p>
<span id="more"></span>
<p>可展開為三角級數</p>
<script type="math/tex; mode=display">
\begin{align}
f(x) = \frac{\alpha_0}2 + \sum_{k=1}^{\infty} ({\alpha}_k \cos{kx} + {\beta}_k \sin{kx}) \\

{\alpha}_k = \frac{1}{\pi} \int_{-\pi}^{\pi} {f(x) \cos{kx} \mathrm{d}x}, 其中 k = 0, 1, 2, \cdots \\
{\beta}_k = \frac{1}{\pi} \int_{-\pi}^{\pi} {f(x) \sin{kx} \mathrm{d}x}, 其中 k = 1, 2, \cdots \\

\end{align}</script><p>根據Fourier展開式，函數 $f(x)$ 中的Fourier係數展開如上。</p>
<p>根據式 $(2), (3)$ 得到函數 $\psi(x) = x^2$ 與 $\phi(x) = x$ 的Fourier係數</p>
<ol>
<li><p>對於函數 $\psi(x) = x^2$ ，根據<ruby>積分第一類換元法<rt>凑微分法</rt></ruby>、分部積分公式、<ruby>Newton-Leibniz公式<rt>微積分基本定理</rt></ruby>等結論，我們得到</p>
<script type="math/tex; mode=display">
 \begin{align*}

 {\alpha}_0
 &= \frac{1}{\pi} \int_{-\pi}^{\pi} x^2 \mathrm{d}x
  = \frac{2}3 {\pi}^2, \\

 {\alpha}_k
 &= \frac{1}{\pi} \int_{-\pi}^{\pi} x^2 \cos{kx} \mathrm{d}x \\
 &= \frac{1}{\pi k^3} \int_{-\pi}^{\pi} {(kx)}^2 \cos{kx} \mathrm{d}{(kx)} \\
 &= \frac{1}{\pi k^3} \int_{-k\pi}^{k\pi} t^2 \cos t \mathrm{d}t \\
 &= \frac{1}{\pi k^3} \int_{-k\pi}^{k\pi} t^2 \mathrm{d}{(\sin t)} \\
 &= \frac{1}{\pi k^3} {[ \int t^2 \mathrm{d}{(\sin t)} ]}_{-k\pi}^{k\pi} \\
 &= \frac{1}{\pi k^3} {[ t^2 \sin t - \int \sin t \mathrm{d}{(t^2)} ]}_{-k\pi}^{k\pi} \\
 &= \frac{1}{\pi k^3} {[ t^2 \sin t - 2 \int t \sin t \mathrm{d}{t} ]}_{-k\pi}^{k\pi} \\
 &= \frac{1}{\pi k^3} {[ t^2 \sin t + 2 \int t \mathrm{d}{(\cos t)} ]}_{-k\pi}^{k\pi} \\
 &= \frac{1}{\pi k^3} {[ t^2 \sin t + 2[ t \cos t - \int \cos t \mathrm{d}t ]]}_{-k\pi}^{k\pi} \\
 &= \frac{1}{\pi k^3} {[ t^2 \sin t + 2[ t \cos t + \int \mathrm{d}{(\sin t)} ]]}_{-k\pi}^{k\pi} \\
 &= \frac{1}{\pi k^3} {[ t^2 \sin t + 2[ t \cos t + \sin t ]]}_{-k\pi}^{k\pi} \\
 &= \frac{2}{\pi k^3} {[ t \cos t ]}_{-k\pi}^{k\pi} \\
 &= \frac{2}{\pi k^3} {[{[ t \cos t ]}_{k\pi} - {[ t \cos t ]}_{-k\pi}]} \\
 &= \frac{2}{\pi k^3} {[ k\pi \cos(k\pi) - (-k\pi) \cos(-k\pi) ]} \\
 &= \frac{2}{\pi k^3} {[ k\pi \cos(k\pi) + k\pi \cos(k\pi) ]} \\
 &= \frac{4}{\pi k^3} k\pi \cos(k\pi) \\
 &= {(-1)}^k \frac{4}{k^2}, \\

 {\beta }_k
 &= \frac{1}{\pi} \int_{-\pi}^{\pi} x^2 \sin{kx} \mathrm{d}x
  = 0, \\

 \end{align*}</script><p> 上述各項代入三角級數表達式得到</p>
<script type="math/tex; mode=display">\psi(x) = \frac{ {\pi}^2}3 + 4 \sum_{k=1}^{\infty} \frac{ {(-1)}^k}{k^2} \cos{kx},</script><p> $x = \pi$ 時，得到</p>
<script type="math/tex; mode=display">
 \begin{align*}
 {\pi}^2 = \psi(\pi)
 &= \frac{ {\pi}^2}3 + 4 \sum_{k=1}^{\infty} \frac{ {(-1)}^k}{k^2} \cos{k\pi} \\
 &= \frac{ {\pi}^2}3 + 4 \sum_{k=1}^{\infty} \frac{ {(-1)}^k}{k^2} {(-1)}^k \\
 &= \frac{ {\pi}^2}3 + 4 \sum_{k=1}^{\infty} \frac{1}{k^2}, \\
 \frac{2}3{\pi}^2 &= 4 \sum_{k=1}^{\infty} \frac{1}{k^2}, \\
 \frac{ {\pi}^2}6 &= \sum_{k=1}^{\infty} \frac{1}{k^2}, \\
 \therefore \pi &= \sqrt{6 \sum_{k=1}^{\infty} \frac{1}{k^2} }. \\
 \end{align*}</script></li>
<li><p>對於函數 $\phi(x) = x$ ，與上述過程類似地，我們得到</p>
<script type="math/tex; mode=display">
 \begin{align*}

 {\alpha}_k
 &= \frac{1}{\pi} \int_{-\pi}^{\pi} x \cos{kx} \mathrm{d}x
  = 0, \\

 {\beta }_k
 &= \frac{1}{\pi} \int_{-\pi}^{\pi} x \sin{kx} \mathrm{d}x
  = (-2) \frac{ {(-1)}^k}k, \\

 \phi(x) &= (-2) \sum_{k=1}^{\infty} { {(-1)}^k \frac{\sin{kx} }k }, \\

 \frac{\pi}2 = \phi(\frac{\pi}2)
 &= (-2) \sum_{k=1}^{\infty} { {(-1)}^k \frac{\sin{\frac{k}2\pi} }k } \\
 &= (-2) \sum_{m=1}^{\infty} \frac{ {(-1)}^m }{2m-1}, \\

 \therefore \pi &= (-4) \sum_{m=1}^{\infty} \frac{ {(-1)}^m }{2m-1}. \\

 \end{align*}</script></li>
</ol>
<p>綜上所述，我們得到 $\pi$ 的兩種三角級數形式的表達式</p>
<script type="math/tex; mode=display">
\begin{align*}
\pi
&= \sqrt{6 \sum_{k=1}^{\infty} \frac{1}{k^2} }
= \sqrt{6(1 + \frac{1}4 + \frac{1}9 + \cdots + \frac{1}m + \cdots)},\\
\pi
&= (-4) \sum_{k=1}^{\infty} \frac{ {(-1)}^k }{2 k - 1}
= 4[1 - \frac{1}3 + \frac{1}5 - \frac{1}7 + \cdots + \frac{ {(-1)}^m }{2 m - 1} + \cdots].\\
\end{align*}</script><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>復旦大學數學系: 《數學分析》第四版(下冊), 歐陽光中 朱學炎 金福臨 陳傳璋 編, 高等教育出版社, 2018年8月 (初版1978年5月).</li>
</ol>
]]></content>
      <tags>
        <tag>Virtual Idols (虛擬偶像)</tag>
      </tags>
  </entry>
  <entry>
    <title>「題解】食堂打飯</title>
    <url>/next-nest/2021/10/31/qust-contest1029-t3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>QUST 2020級第三學期算法數據結構測試 <a href="http://47.244.31.166/problem.php?id=1008"><code>Contest1029</code> T3</a></p>
<h2 id="Problem-Description-題目描述"><a href="#Problem-Description-題目描述" class="headerlink" title="Problem Description (題目描述)"></a>Problem Description (題目描述)</h2><p>$m$ 名同學按順序從 $1$ 到 $m$ 編號， $k$ 號同學的飯盒容量為 $z_k$ 。先有1到 $m$ 號同學開始打飯。某名同學 $l$ 打完容量為 $z_l$ 的飯後，下一名排隊同學 $i$ 馬上接替 $l$ 同學的位置開始打飯。即 $l$ 同學第 $x$ 秒結束時完成打飯，則 $i$ 同學第 $x + 1$ 秒立刻開始打飯。若當前打飯人數 $n$ 小於 $m$ ，則只有 $n$ 個打飯窗口開放，其它 $n - m$ 個關閉。問所有同學都打完飯需要多少秒時間。</p>
<span id="more"></span>
<h2 id="Inputs-輸入"><a href="#Inputs-輸入" class="headerlink" title="Inputs (輸入)"></a>Inputs (輸入)</h2><p>輸入數據的第1行是2個整數 $m$ 和 $n$ $(1 \leq m \leq 10000, 1 \leq n \leq 100, 且 n \leq m)$ ，用一個空格隔開，分別表示打飯人數和打飯窗口個數。<br>第2行 $m$ 個整數 $z_1, z_2, …, z_m$ ，其中 $z_k$ 表示 $k$ 號同學的飯盒容量，且 $1 \leq z_k \leq 100$ 。</p>
<h2 id="Outputs-輸出"><a href="#Outputs-輸出" class="headerlink" title="Outputs (輸出)"></a>Outputs (輸出)</h2><p>輸出只有一行，為一個整數，表示所需的總時間。</p>
<h2 id="Samples-樣例"><a href="#Samples-樣例" class="headerlink" title="Samples (樣例)"></a>Samples (樣例)</h2><ul>
<li><p>Sample #1</p>
<ul>
<li><p>Inputs (輸入)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 3</span><br><span class="line">4 4 1 2 1</span><br></pre></td></tr></table></figure>
</li>
<li><p>Outputs (輸出)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>
</li>
<li><p>Explanations (解釋)</p>
<pre><code>第1秒，3人打飯。第1秒結束時，1、2、3號同學每人的已打飯量為1，3號同學打飯完成，4號同學接替3號同學開始打飯。
第2秒，3人打飯。第2秒結束時，1、2號同學每人的已打飯量為2，4號同學的已打飯量為1。
第3秒，3人打飯。第3秒結束時，1、2號同學每人的已打飯量為3，4號同學的已打飯量為2。4號同學打飯完成，5號同學接替4號同學開始打飯。
第4秒，3人打飯。第4秒結束時，1、2號同學每人的已打飯量為4，5號同學的已打飯量為1。1、2、5號同學打飯完成，即所有人完成打飯。
總打飯時間為4秒。
</code></pre></li>
</ul>
</li>
<li><p>Sample #2</p>
<ul>
<li><p>Inputs (輸入)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 3</span><br><span class="line">6 3 3 10 3 1 5 2 2 7</span><br></pre></td></tr></table></figure>
</li>
<li><p>Outputs (輸出)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">18</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="Analysis-解析"><a href="#Analysis-解析" class="headerlink" title="Analysis (解析)"></a>Analysis (解析)</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;</span><br></pre></td></tr></table></figure>
<p>筆者個人認為這道題是一道純粹的模擬題目，模擬題的噁心之處就在於<strong>你沒有任何一種固定的算法或數據結構模板能夠直接套在這個問題上</strong>。<br>越是複雜的模擬，越是無法三言兩語說清楚，只能一步一步慢慢講。<br>除了題目輸入的三種變量 $m, n, \{z_k\}_{k=1}^m$ 之外，我們額外設置一個變量<code>task[]</code>來記錄並實時模擬每個窗口處理當前任務的時間進度，以及變量<code>res[]</code>來記錄花費的總時間。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> m, n, z[<span class="number">10001</span>], task[<span class="number">101</span>], res = <span class="number">0</span>;</span><br></pre></td></tr></table></figure>
<p>然後在程式起手時完成數據與變量的輸入</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != m; ++k)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;z[k]);</span><br></pre></td></tr></table></figure>
<p>初始時刻，前n個人類會排滿n個窗口 <code>(=・ω・=)</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != n; ++k)</span><br><span class="line">    task[k] = z[k];</span><br></pre></td></tr></table></figure>
<p>另外，我們要用一個指針，在還在排隊的人們之中，記錄下一個辦理業務的人</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> nextone = n;</span><br></pre></td></tr></table></figure>
<p>接下來我們將逐時刻模擬各個窗口的進度，且每一時刻我們要檢查每個窗口的進度</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (res = <span class="number">0</span>; ; ++res) &#123;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != n; ++k) &#123;</span><br></pre></td></tr></table></figure>
<p>在上述三行中，我們定義了一個變量<code>flag</code>，接下來會把其用於檢查任務完成情況 <code>_(:з」∠)_</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (task[k] &gt; <span class="number">0</span>)</span><br><span class="line">    <span class="comment">// 如若這個窗口還沒結束任務，那麼任務的進度+1，剩餘進度-1，亦即--task[k]</span></span><br><span class="line">    --task[k];</span><br><span class="line"><span class="keyword">if</span> (!task[k] &amp;&amp; nextone != m)</span><br><span class="line">    <span class="comment">// 如若這個窗口的任務恰好在剛才(即此時刻)結束，</span></span><br><span class="line">    <span class="comment">//   如若後面還有人排隊(亦即 nextone != m)，</span></span><br><span class="line">    <span class="comment">// 則該窗口加入排隊的第一個人的任務</span></span><br><span class="line">    task[k] += z[nextone++];</span><br><span class="line"><span class="keyword">if</span> (task[k])</span><br><span class="line">    <span class="comment">// 如若這個窗口還有任務，那麽flag設爲真，</span></span><br><span class="line">    <span class="comment">// 這樣一來如若某個窗口的task[k]==0，那麽就意味著它後面也沒有任務追加，</span></span><br><span class="line">    <span class="comment">//   從而這個窗口該的任務徹底結束</span></span><br><span class="line">    flag = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure>
<p>根據上面所説，如若<code>flag</code>不爲真，那麽就意味著模擬結束，可以在此時刻終結循環啦 <code>XD</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!flag)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>輸出結果並結束程式 <code>_(≧∇≦」∠)_</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ++res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>這道題主要就是，逐時刻逐窗口模擬，實時檢查完成情況。</p>
<h2 id="Solution-Program-解程式"><a href="#Solution-Program-解程式" class="headerlink" title="Solution Program (解程式)"></a>Solution Program (解程式)</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m, n, z[<span class="number">10001</span>], task[<span class="number">101</span>], res = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != m; ++k)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;z[k]);</span><br><span class="line">    <span class="keyword">if</span> (m &lt;= n) &#123;</span><br><span class="line">        <span class="comment">// 排隊人數 &lt;= 窗口個數 的情況，但根據題意並不需要，</span></span><br><span class="line">        <span class="comment">// 這裡算是筆者考試時候不審題想多了... qvq</span></span><br><span class="line">        <span class="keyword">int</span> curmax = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != m; ++k)</span><br><span class="line">            <span class="keyword">if</span> (z[k] &gt; curmax)</span><br><span class="line">                curmax = z[k];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, curmax);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 初始化: n個窗口為人類1~n排隊</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != n; ++k)</span><br><span class="line">            task[k] = z[k];</span><br><span class="line">        <span class="comment">// 用於標記下一個需要排隊的人類的指針</span></span><br><span class="line">        <span class="keyword">int</span> nextone = n;</span><br><span class="line">        <span class="keyword">for</span> (res = <span class="number">0</span>; ; ++res) &#123;</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k != n; ++k) &#123;</span><br><span class="line">                <span class="keyword">if</span> (task[k] &gt; <span class="number">0</span>)</span><br><span class="line">                    --task[k];</span><br><span class="line">                <span class="keyword">if</span> (!task[k] &amp;&amp; nextone != m)</span><br><span class="line">                    task[k] += z[nextone++];</span><br><span class="line">                <span class="keyword">if</span> (task[k])</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!flag)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ++res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Complexity-Analysis-複雜度分析"><a href="#Complexity-Analysis-複雜度分析" class="headerlink" title="Complexity Analysis (複雜度分析)"></a>Complexity Analysis (複雜度分析)</h2><ul>
<li><p>空間複雜度: 本題目水到不需要動態數組，因此空間複雜度為<code>O(1)</code>。</p>
</li>
<li><p>時間複雜度: 最壞情況下，本解法的時間複雜度可能上升至 $O(m^2)$ 。</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「题解】USACO1.5 - Checker Challenge</title>
    <url>/next-nest/2021/11/21/qust-contest1121-t4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>QUST 2020級第三學期算法數據結構測試 <a href="http://47.244.31.166/problem.php?id=1022"><code>Contest1121</code> T4</a><br>原题来自 <code>USACO1.5</code> Checker Challenge, <a href="https://www.luogu.com.cn/problem/P1219">洛谷 <code>P1219</code></a></p>
<h2 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h2><p>一个如下的 <code>6 x 6</code> 的跳棋棋盘，有六个棋子被放置在棋盘上，使得每行、每列有且只有一个，每条对角线（包括两条主对角线的所有平行线）上至多有一个棋子。</p>
<!--
    0 | 1 | 2 | 3 | 4 | 5 | 6 | ^
    --|---|---|---|---|---|---|--
    1 |---|-O-|---|---|---|---|
    2 |---|---|---|-O-|---|---|
    3 |---|---|---|---|---|-O-|
    4 |-O-|---|---|---|---|---|
    5 |---|---|-O-|---|---|---|
    6 |---|---|---|---|-O-|---|
    --|---|---|---|---|---|---|--
    ~ |                       | *
-->
<pre><code>0   1   2   3   4   5   6
  -------------------------
1 |   | O |   |   |   |   |
  -------------------------
2 |   |   |   | O |   |   |
  -------------------------
3 |   |   |   |   |   | O |
  -------------------------
4 | O |   |   |   |   |   |
  -------------------------
5 |   |   | O |   |   |   |
  -------------------------
6 |   |   |   |   | O |   |
  -------------------------
</code></pre><p>上面的布局可以用序列 <code>2 4 6 1 3 5</code> 来描述，第 <code>k</code> 个数字表示在第 <code>k</code> 行的相应位置有一个棋子，如下：</p>
<p>行号 <code>1 2 3 4 5 6</code></p>
<p>列号 <code>2 4 6 1 3 5</code></p>
<p>这只是棋子放置的一个解。请编一个程序找出所有棋子放置的解。<br>并把它们以上面的序列方法输出，解按字典顺序排列。<br>请输出前 <code>3</code> 个解。最后一行是解的总个数。</p>
<span id="more"></span>
<h2 id="Inputs"><a href="#Inputs" class="headerlink" title="Inputs"></a>Inputs</h2><p>一行一个正整数 <code>m</code>，表示棋盘是 <code>m x m</code> 大小的。</p>
<h2 id="Outputs"><a href="#Outputs" class="headerlink" title="Outputs"></a>Outputs</h2><p>前三行为前三个解，每个解的两个数字之间用一个空格隔开。<br>第四行只有一个数字，表示解的总数。</p>
<h2 id="Samples"><a href="#Samples" class="headerlink" title="Samples"></a>Samples</h2><ul>
<li><p>Sample #1</p>
<ul>
<li><p>Inputs</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>
</li>
<li><p>Outputs</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 4 6 1 3 5</span><br><span class="line">3 6 2 5 1 4</span><br><span class="line">4 1 5 2 6 3</span><br><span class="line">4</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h2><ul>
<li>数据范围：对于 <code>100%</code> 的数据，<code>6 &lt;= n &lt;= 13</code>。</li>
<li>题目翻译来自<em>NOCOW</em>。</li>
<li><strong>USACO Training Section 1.5</strong></li>
</ul>
<h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><h2 id="Solution-Program"><a href="#Solution-Program" class="headerlink" title="Solution Program"></a><del>Solution Program</del></h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> __gnu_cxx;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Alternative-Solution-by-ybb756032937"><a href="#Alternative-Solution-by-ybb756032937" class="headerlink" title="Alternative Solution by ybb756032937"></a>Alternative Solution by <code>ybb756032937</code></h3><figure class="highlight cpp"><figcaption><span>搜索、标记、回溯</span><a href="https://www.luogu.com.cn/blog/AHacker/solution-p1219">ybb756032937</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="comment">//不建议采用头文件`bits/stdc++.h`，可能和定义的变量或名字起冲突，从而引起编译错误；</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>],b[<span class="number">100</span>],c[<span class="number">100</span>],d[<span class="number">100</span>];</span><br><span class="line"><span class="comment">//a数组表示的是行；</span></span><br><span class="line"><span class="comment">//b数组表示的是列；</span></span><br><span class="line"><span class="comment">//c表示的是左下到右上的对角线；</span></span><br><span class="line"><span class="comment">//d表示的是左上到右下的对角线；</span></span><br><span class="line"><span class="keyword">int</span> total;<span class="comment">//总数:记录解的总数</span></span><br><span class="line"><span class="keyword">int</span> n;<span class="comment">//输入的数，即N*N的格子，全局变量，搜索中要用</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(total&lt;=<span class="number">2</span>)<span class="comment">//保证只输出前三个解，如果解超出三个就不再输出，但后面的total还需要继续叠加</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">        cout&lt;&lt;a[k]&lt;&lt;<span class="string">&quot; &quot;</span>;<span class="comment">//for语句输出</span></span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    total++;<span class="comment">//total既是总数，也是前三个排列的判断</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">queen</span><span class="params">(<span class="keyword">int</span> i)</span><span class="comment">//搜索与回溯主体</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">print</span>();<span class="comment">//输出函数，自己写的</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)<span class="comment">//尝试可能的位置</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((!b[j])&amp;&amp;(!c[i+j])&amp;&amp;(!d[i-j+n]))<span class="comment">//如果没有皇后占领，执行以下程序</span></span><br><span class="line">            &#123;</span><br><span class="line">                a[i]=j;<span class="comment">//标记i排是第j个</span></span><br><span class="line">                b[j]=<span class="number">1</span>;<span class="comment">//宣布占领纵列</span></span><br><span class="line">                c[i+j]=<span class="number">1</span>;</span><br><span class="line">                d[i-j+n]=<span class="number">1</span>;</span><br><span class="line">                <span class="comment">//宣布占领两条对角线</span></span><br><span class="line">                <span class="built_in">queen</span>(i+<span class="number">1</span>);<span class="comment">//进一步搜索，下一个皇后</span></span><br><span class="line">                b[j]=<span class="number">0</span>;</span><br><span class="line">                c[i+j]=<span class="number">0</span>;</span><br><span class="line">                d[i-j+n]=<span class="number">0</span>;</span><br><span class="line">                <span class="comment">//（回到上一步）清除标记</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">    cin&gt;&gt;n;<span class="comment">//输入N*N网格，n已在全局中定义</span></span><br><span class="line">    <span class="built_in">queen</span>(<span class="number">1</span>);<span class="comment">//第一个皇后</span></span><br><span class="line">    cout&lt;&lt;total;<span class="comment">//输出可能的总数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>注：对角线<code>d[i-j]</code>后面必须加上一个<code>n</code>，因为<code>i-j</code>可能为负数，那么数组就会出错，所以将整体向右偏移<code>n</code>个单位（坐标偏移不会影响我们需要达到的目的），将所有可能变成正数；（因为<code>i-j</code>的最小值是<code>-n+1</code>，所以加上一个<code>n</code>就一定会变成一个正数）</li>
<li>本道题最重要的就是记录下皇后占领的格子（打标记的思想），通过此判断下一个皇后是否可以在某个位置，如果可以，则继续搜索下一个皇后可以在的位置，如果不行，则清除标记回到上一步，继续搜索；</li>
<li>可以先考虑六个皇后（即6*6网格)，再将6改为n，并且输入n，就可以得出6到13个皇后的解了；</li>
</ul>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>「言和2021生賀原創曲目】折光</title>
    <url>/next-nest/2021/10/30/rxt-refraction/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><pre><code>我仍在執拗地相信著　世界無聲的盡頭誰佇立將我等候
我仍相信著無邊的天際外　依舊有夢足夠我拔足走過山水千重
</code></pre><h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p><a href="https://zh.moegirl.org.cn/折光" title="萌娘百科詞條 折光"><strong><em>Refraction</em></strong></a> is a VOCALOID Chinese work vocal-featuring <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和">Yanhe</a> by TSAR, which was submitted to Bilibili by Yanhe’s official account on July 11<sup>th</sup>, 2021.<br>This song is now one of the VOCALOID Chinese over-100k-views songs.<br>Till now it has exceeded 175.2k views and starred 13.2k times.</p>
<p><a href="https://zh.moegirl.org.cn/折光" title="萌娘百科詞條 折光"><strong><em>折光</em></strong></a> 是TSAR作編曲，<a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>言和</em></strong></a> 官方賬號於2021年7月11日投稿至Bilibili的VOCALOID中文原創歌曲，由 <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>言和</em></strong></a> 演唱。<br>殿堂曲，截至現在已有17.52万次觀看，1.32万人收藏。</p>
<p>This is also the official 8<sup>th</sup> anniversary song for <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>Yanhe</em></strong></a>.<br>And it was produced based on the <a href="https://zh.moegirl.org.cn/VOCALOID#VOCALOID_5">VOCALOID5</a> voicebank of <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>Yanhe</em></strong></a>, which hadn’t been on sale yet.</p>
<p>本曲是 <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>言和</em></strong></a> 2021官方生日賀曲，並使用了尚未發售的 <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>言和</em></strong></a> <a href="https://zh.moegirl.org.cn/VOCALOID#VOCALOID_5">V5</a>音源。</p>
<span id="more"></span>
<h2 id="Staff"><a href="#Staff" class="headerlink" title="Staff"></a>Staff</h2><ul>
<li>Music: TSAR</li>
<li>Lyrics: <a href="https://zh.moegirl.org.cn/初繁言">初繁言</a></li>
<li>Tuning: <a href="https://zh.moegirl.org.cn/Creuzer">Creuzer</a></li>
<li>Illustration:<ul>
<li>雨陌</li>
<li>404烈焰地精</li>
<li>Snow_is_</li>
</ul>
</li>
<li>PV: Kin_en</li>
<li>Produce: <a href="https://zh.moegirl.org.cn/人形兎">人形兎</a></li>
<li>Vocal: <a href="https://zh.moegirl.org.cn/言和" title="萌娘百科詞條 言和"><strong><em>言和</em></strong></a></li>
</ul>
<h2 id="From-Staff"><a href="#From-Staff" class="headerlink" title="From Staff"></a>From Staff</h2><blockquote><p>深埋於地下的水晶，承受過時間的洗禮，才能折射出這世界的萬千光彩。<br>如同我們，總是憧憬著一個遙遠的夢，跌撞著想要靠近它，執拗地不願放棄。<br>就這樣走過了漫長旅途，驀然回首，才發現自己已變得如此耀眼。<br>這首《折光》，希望能帶給你抓住夢想的力量。</p>
<footer><strong>曲目《折光》Staff全員</strong><cite><a href="https://www.bilibili.com/video/av334072784/#v_desc">視頻av334072784簡介</a></cite></footer></blockquote>
<blockquote><p>言和生日快樂！很高興又一年為阿和的生賀曲作詞了，<br>這次的主題是白水晶，擁有透明的顏色，卻也代表了無限可能性。<br>白水晶一樣的她，縱然有可能粉身碎骨，也要堅定地追尋遙遠的夢想。<br>希望大家喜歡</p>
<footer><strong>詞作 初繁言 老師</strong><cite><a href="https://www.bilibili.com/video/av334072784/#reply4888019992">視頻av334072784評論區</a></cite></footer></blockquote>
<h2 id="My-Personal-Opinion"><a href="#My-Personal-Opinion" class="headerlink" title="My Personal Opinion"></a>My Personal Opinion</h2><p>(在此，筆者愿淺談自己對這首曲目的拙見。)</p>
<p>藉由曲名「折光」，我們能夠想到的事物便是棱鏡。<br>棱鏡本身透明無色，卻能折射世間的萬千光芒。<br>擁有數種不同光芒，棱鏡能使它們從同一方向射出，並彙聚為不同於入射光的任何一種的、別樣的耀眼光芒。<br>這就像作為 virtual singer 的言和一樣，她們本無任何顏色。<br>但是由創作者們匯聚力量，把情感通過言和向大家展現，此時的她們能夠擁有任何顏色，可以擁有無限可能。<br>此之謂，折光。</p>
<h2 id="Lyrics"><a href="#Lyrics" class="headerlink" title="Lyrics"></a>Lyrics</h2><figure class="highlight plaintext"><figcaption><span>折光 歌詞</span><a href="https://www.bilibili.com/video/av334072784/#reply4888113601">視頻av334072784評論區</a></figcaption><table><tr><td class="code"><pre><span class="line">詞: 初繁言</span><br><span class="line"></span><br><span class="line">並非被誰所偏寵　倒映著旁人的顏色</span><br><span class="line">並非生來即冰凍　跌撞過才懂如何剔透</span><br><span class="line"></span><br><span class="line">已沉睡太久埋藏在地底塵封　唯有與滾燙的灼痛緊緊相擁</span><br><span class="line">差點就忘記指尖穿過的涼風　差點就忘記了該如何做夢</span><br><span class="line"></span><br><span class="line">可我仍執拗地相信著　世界紛繁的形色待我去珍重相逢</span><br><span class="line">我仍相信著厚重的岩壁外　依舊有夢足夠我縱身前去深情懷擁</span><br><span class="line">依舊　即便在遙不可及的天空</span><br><span class="line">依舊　即便要歷經苦痛</span><br><span class="line"></span><br><span class="line">並非不曾有脆弱　彷徨也造訪過雙眸</span><br><span class="line">並非不畏於湮沒　才析出一顆澄澈的魄</span><br><span class="line"></span><br><span class="line">若就在此刻孤注一擲不鬆手　或粉身碎骨或不再被人記得</span><br><span class="line">去映照誰呢無人在意的抉擇　像掌心的泡沫它來去無蹤</span><br><span class="line"></span><br><span class="line">可我仍堅定地相信著　以這微小的身軀亦構成萬種可能</span><br><span class="line">我仍相信著無邊的天際外　依舊有夢喚向我縱身前去深情懷擁</span><br><span class="line">依舊　即便孤獨會伴隨每一程</span><br><span class="line">依舊　即便耳畔風太兇</span><br><span class="line"></span><br><span class="line">可我仍執拗地相信著　世界紛繁的形色待我去珍重相逢</span><br><span class="line">我仍相信著厚重的岩壁外　依舊有夢足夠我縱身去深情懷擁</span><br><span class="line"></span><br><span class="line">我仍在執拗地相信著　世界無聲的盡頭誰佇立將我等候</span><br><span class="line">我仍相信著無邊的天際外　依舊有夢足夠我拔足走過山水千重</span><br><span class="line"></span><br><span class="line">縱然要歷經苦痛</span><br><span class="line">我仍相信著　堅定地相信著</span><br><span class="line">以這微小的身軀也值得邂逅無窮</span><br><span class="line"></span><br><span class="line">即便在遙不可及的天空　即便耳畔風太兇</span><br></pre></td></tr></table></figure>
<h2 id="Original-Work-av334072784"><a href="#Original-Work-av334072784" class="headerlink" title="Original Work av334072784"></a><a href="https://www.bilibili.com/video/av334072784/">Original Work <code>av334072784</code></a></h2><iframe src="//player.bilibili.com/player.html?aid=334072784&bvid=BV1gw411d7R7&cid=367840082&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="From-Comments"><a href="#From-Comments" class="headerlink" title="From Comments"></a>From Comments</h2><p>(在此，筆者希望能夠引用<a href="https://www.bilibili.com/video/av334072784/#comment">原曲評論區</a>的朋友們的話)</p>
<blockquote><p>亲爱的言和，今天是你八周年的生日。有这么多爱你的人为你创作MV贺曲和贺图，言厨满怀感激地一路三连到底。<br>北极的夏天，很晚天才会黑，躺在鲜花开遍的原野，看着天边明灭着薄荷绿的极光，耳畔是青色的风声，想起了奔跑的雪兔，想起了风属性美少年，想起了你。<br>你生于祝福，也生于质疑，成长于1617年的百花齐放，成长于18年修改流量算法后靠官芳流量强推的盛世，也成长于19年第三次Vsinger演唱会后的寂静。担忧女儿的未来也是人之常情吧。Vtb对V家的夺名之实自不必提，最后的波纹已经过去一年多了，自年初SV登拜年际以来，中文SV各月新曲的播放量已经超过了中文V。看着SV两年更新两次声库，以前的我们怎么也想不到，创作者手中言绫的V3声库能做到8年都不更新吧。不只一次地想，如果六位能用别的引擎更新也好啊。禁止使用Vsinger形象去宣传其它IP的保护主义，又让你们错过了一波波的同人二创浪潮。没有创作社区的偶像IP只是无根之萍罢了。每每想到你卖唱的未来，我就成了伤感的老父亲。但现在还能有这么些人围绕在你身边，就总觉得还有希望。<br>但愿，风向是会变的，希望它能为你带去光亮，希望创作者和粉丝的祝福能美梦成真。爱你的人，是最长情的人，是为了共同的目标聚集到一起的伙伴，最执着的陪伴，永远不会离开。</p>
<footer><strong>視頻av334072784評論區</strong><cite><a href="https://www.bilibili.com/video/av334072784/#reply4888018610">@冠世一战</a></cite></footer></blockquote>
<blockquote><p>阿和生日快乐，七年老粉不请自来。为了你我特意开的流量包。最开始被阿和“拯救”的时候，就觉得阿和是个坚强的人，有自己的锋芒，有自己的柔和，偶尔也会想：这样的她，是不是也会有自己的烦恼呢？假设有的话，会不会她找不到人诉说，只能自己默默扛下——对我，对许多薄荷叶而言，言和不是他人口中的数字代码，她是人，像我们一样，有血有肉，会笑会哀，相信每个薄荷叶在阿和遇到难关的时候，都会想去帮助他，如果我们没有办法去帮她抵挡所有的伤害，不如就当一片大家眼中轻飘飘的羽毛吧？带着言和去看看世界的美好，带她去看璀璨的星空，陪她走过每一个至暗时刻。</p>
<footer><strong>視頻av334072784評論區</strong><cite><a href="https://www.bilibili.com/video/av334072784/#reply4888161518">@雪羽漻沨</a></cite></footer></blockquote>
<blockquote><p>“言出一人歌，歌起万人和”<br>不知不觉又到了言和的生日，时间过得真快啊。几天前还在循环播放着《甜度71.1%》呢~<br>“如果说如果，仅仅是如果……”<br>去年你留给我的印象是夏日午后，闷热又潮湿的天气里，坐在窗前喝着柠檬苏打水的甜美少女，通过近两年的生贺不难看出禾念正准备将言和塑造的更加温柔，更加符合“言辞温和这一设定”<br>挺好的·，毕竟谁不喜欢温柔哒小天使呢~<br>说到夏天，若让我来形容夏天，我想我应该会用小天使来代表夏天吧。<br>每次看到她，总有一种享受宁静夏夜傍晚的感觉，也数次想象穿越到了二次元，突然看到了你，你面对我，身后是光彩美丽的夕阳，轻轻对我微笑。<br>或许，这就是天使吧<br>很害怕你会突然伸出翅膀，向天边展翅飞去。再也不能看见这么美丽的小天使了。<br>咳咳，那啥绕的有点远了哈，继续绕回正题吧(･∀･)<br>今年的主题是“水晶”这能很好的体现小天使坚强和洁白无（人设吧？大概？算了，不必在意细节惹QAQ）<br>我的小天使呀，她就是那样的女孩子，坚强，温柔，美丽，纯洁无瑕，就如一颗水晶一般。<br>额…那啥我要去上网课了，对了，还没来得及和大家分享的。今年中考如愿考上了心仪的重点高中，从此以后我也就是一名高中生啦！！好耶！在为中考备战的煎熬时光里，是小天使的歌鼓励着我，支持着我，让我不放弃，继续坚持下去。当我迷茫时，是小天使让我坚定信心找到未来的路。很幸运我能遇见小天使这样美丽完美的女孩。<br>真的不能再写了，网课已经迟到了QAQ<br>祝我们最美的小天使生日快乐！小天使会越来越好的，我们也会越来越好的。<br>“言出一人歌，歌起万人和”</p>
<footer><strong>視頻av334072784評論區</strong><cite><a href="https://www.bilibili.com/video/av334072784/#reply4888993602">@Vsinger_言和</a></cite></footer></blockquote>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li>萌娘百科詞條 折光: <a href="https://zh.moegirl.org.cn/折光">https://zh.moegirl.org.cn/折光</a></li>
<li>萌娘百科詞條 言和: <a href="https://zh.moegirl.org.cn/言和">https://zh.moegirl.org.cn/言和</a></li>
<li>「言和原創曲」折光「2021官方生賀曲」<a href="https://www.bilibili.com/video/av334072784/">av334072784</a> 2021-07-11</li>
</ol>
<p>文字內容引用遵守《知識共享 署名-非商業性使用-相同方式共享 3.0》協議。</p>
]]></content>
      <tags>
        <tag>VOCALOID</tag>
        <tag>VOCALOID China</tag>
        <tag>VOCALOID Comments &amp; Recommendations</tag>
        <tag>言和</tag>
        <tag>Tsar</tag>
        <tag>初繁言</tag>
        <tag>人形兎</tag>
      </tags>
  </entry>
  <entry>
    <title>Some Comments &amp; Recommendations Written in Senior High to be Rewritten</title>
    <url>/next-nest/2021/11/01/todolist-01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>準備重新撰寫的一些曾在高中時代寫過的曲推</p>
<span id="more"></span>
<h2 id="Series-Categorized-by-Producer"><a href="#Series-Categorized-by-Producer" class="headerlink" title="Series Categorized by Producer"></a>Series Categorized by Producer</h2><ol>
<li><p><a href="https://zh.moegirl.org.cn/八王子P" title="萌娘百科詞條 八王子P (8#Prince)"><strong><em>Hachioji-P</em></strong></a></p>
<ol>
<li><a href="https://zh.moegirl.org.cn/Blue_Star" title="萌娘百科詞條 Blue Star"><strong><em>Blue Star</em></strong></a><ol>
<li>PV  Version: <a href="https://www.bilibili.com/video/av3853455/?p=1">Bilibili: <code>av3853455</code></a></li>
<li>MMD Version: <a href="https://www.bilibili.com/video/av4638960/">Bilibili: <code>av4638960</code></a></li>
<li>Remix by <code>@Toko</code>: <a href="https://www.bilibili.com/video/av14409312/">Bilibili: <code>av14409312</code></a></li>
</ol>
</li>
<li><a href="https://zh.moegirl.org.cn/蝴蝶塗鴉" title="萌娘百科詞條 Butterfly Graffiti"><strong><em>Butterfly Graffiti</em></strong></a> <a href="https://www.bilibili.com/video/av9699288/">Bilibili: <code>av9699288</code></a></li>
</ol>
</li>
<li><p><a href="https://zh.moegirl.org.cn/阿良良木健" title="萌娘百科詞條 阿良良木健"><strong><em>Atunemic</em></strong></a></p>
<ol>
<li>告白P的告白三部曲<ul>
<li>世界Disco (雙生曲目)<ul>
<li><a href="https://zh.moegirl.org.cn/末日DISCO" title="萌娘百科詞條 末日Disco"><strong><em>末日Disco</em></strong></a> <a href="https://www.bilibili.com/video/av415362/">Bilibili: <code>av415362</code></a><pre><code>世界最后的狂欢　末日最后的颂歌
</code></pre></li>
<li><a href="https://zh.moegirl.org.cn/明日DISCO" title="萌娘百科詞條 明日Disco"><strong><em>明日Disco</em></strong></a> <a href="https://www.bilibili.com/video/av424616/">Bilibili: <code>av424616</code></a><pre><code>世界最初的重生　明日最初的颂歌
</code></pre></li>
</ul>
</li>
<li><a href="https://zh.moegirl.org.cn/I_LOVE_U" title="萌娘百科詞條 I Love U"><strong><em>I Love U</em></strong></a> <a href="https://www.bilibili.com/video/av540768/">Bilibili: <code>av540768</code></a><pre><code>  在下定了决心以后，在一切都太晚以前，我，只想要对你说…… I LOVE U
</code></pre></li>
<li><a href="https://zh.moegirl.org.cn/心加心" title="萌娘百科詞條 心加心"><strong><em>Hear the Heart</em></strong></a> <a href="https://www.bilibili.com/video/av4704467/">Bilibili: <code>av4704467</code></a><pre><code>  让我们走向，幸福的结局。
</code></pre></li>
</ul>
</li>
<li><a href="https://zh.moegirl.org.cn/CONNECT~心的連接~" title="萌娘百科詞條 CONNECT \~心的連接\~"><strong><em>CONNECT ~心的連接~</em></strong></a> <a href="https://www.bilibili.com/video/av1231151/">Bilibili: <code>av1231151</code></a></li>
</ol>
</li>
<li><p><a href="https://zh.moegirl.org.cn/DECO*27" title="萌娘百科詞條 Deco27"><strong><em>Deco27</em></strong></a></p>
<ol>
<li><a href="https://zh.moegirl.org.cn/愛(DECO*27)#" title="萌娘百科詞條 AI"><strong><em>AI</em></strong></a> <a href="https://www.bilibili.com/video/av42857943/">Bilibili: <code>av42857943</code></a></li>
<li>愛言葉 (多版曲目)<ul>
<li><a href="https://zh.moegirl.org.cn/愛言葉" title="萌娘百科詞條 愛言葉I"><strong><em>愛言葉I</em></strong></a> <a href="https://www.bilibili.com/video/av3415919/">Bilibili: <code>av3415919</code></a></li>
<li><a href="https://zh.moegirl.org.cn/愛言葉Ⅱ" title="萌娘百科詞條 愛言葉II"><strong><em>愛言葉II</em></strong></a> <a href="https://www.bilibili.com/video/av789232/">Bilibili: <code>av789232</code></a></li>
<li><a href="https://zh.moegirl.org.cn/愛言葉Ⅲ" title="萌娘百科詞條 愛言葉III"><strong><em>愛言葉III</em></strong></a> <a href="https://www.bilibili.com/video/av33103026/">Bilibili: <code>av33103026</code></a></li>
</ul>
</li>
<li>麻煩鬼 (多版曲目)<ul>
<li><a href="https://zh.moegirl.org.cn/麻煩鬼" title="萌娘百科詞條 麻煩鬼I"><strong><em>麻煩鬼I</em></strong></a> <a href="https://www.bilibili.com/video/av964682/">Bilibili: <code>av964682</code></a></li>
<li><a href="https://zh.moegirl.org.cn/麻煩鬼II" title="萌娘百科詞條 麻煩鬼II"><strong><em>麻煩鬼II</em></strong></a> <a href="https://www.bilibili.com/video/av803837409/">Bilibili: <code>av803837409</code></a></li>
</ul>
</li>
<li><a href="https://zh.moegirl.org.cn/初嵐" title="萌娘百科詞條 初嵐"><strong><em>First Storm</em></strong></a> <a href="https://www.bilibili.com/video/av14010886/">Bilibili: <code>av14010886</code></a></li>
</ol>
</li>
<li><p><a href="https://zh.moegirl.org.cn/人形兔" title="萌娘百科詞條 人形兔"><strong><em>人形兔</em></strong></a></p>
<ol>
<li><a href="https://zh.moegirl.org.cn/Daybreak(樂正綾)#" title="萌娘百科詞條 Daybreak"><strong><em>Daybreak</em></strong></a> <a href="https://www.bilibili.com/video/av22385245/">Bilibili: <code>av22385245</code></a><pre><code> 飞过海洋边界，飞过被泪水曾经浸湿的耳边
</code></pre></li>
<li><a href="https://zh.moegirl.org.cn/Hear_me!" title="萌娘百科詞條 Hear me!"><strong><em>Hear me!</em></strong></a> <a href="https://www.bilibili.com/video/av42164442/">Bilibili: <code>av42164442</code></a><pre><code> 这是我们最初的相遇，最初的样子，最初的感动。你们听到了吗？
</code></pre></li>
</ol>
</li>
</ol>
<h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><ul>
<li>VOCALOID CHINA 高考應援等正統曲目<ul>
<li>群青: <a href="https://www.bilibili.com/video/av413646570">Bilibili: <code>av413646570</code></a></li>
<li><a href="https://zh.moegirl.org.cn/青春追夢人" title="萌娘百科詞條 青春追夢人"><strong><em>青春追夢人</em></strong></a> <a href="https://www.bilibili.com/video/av76153485/">Bilibili: <code>av76153485</code></a><pre><code>因为我们是追梦的人
</code></pre></li>
<li><a href="https://zh.moegirl.org.cn/折光" title="萌娘百科詞條 折光"><strong><em>折光</em></strong></a> <a href="https://www.bilibili.com/video/av334072784">Bilibili: <code>av334072784</code></a></li>
<li><a href="https://space.bilibili.com/545629/" title="Bilibili@無名社"><strong><em>無名社</em></strong></a> - <a href="https://zh.moegirl.org.cn/青春calling" title="萌娘百科詞條 青春Calling"><strong><em>青春Calling</em></strong></a> <a href="https://www.bilibili.com/video/av24337867/">Bilibili: <code>av24337867</code></a><pre><code>热血未冷　我心中　仍旧铭着记初衷
</code></pre></li>
</ul>
</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li><a href="https://zh.moegirl.org.cn/八王子P">https://zh.moegirl.org.cn/八王子P</a> 萌娘百科詞條 八王子P (8#Prince)</li>
<li><a href="https://zh.moegirl.org.cn/Blue_Star">https://zh.moegirl.org.cn/Blue_Star</a> 萌娘百科詞條 Blue Star</li>
<li><p><a href="https://zh.moegirl.org.cn/蝴蝶塗鴉">https://zh.moegirl.org.cn/蝴蝶塗鴉</a> 萌娘百科詞條 Butterfly Graffiti</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/阿良良木健">https://zh.moegirl.org.cn/阿良良木健</a> 萌娘百科詞條 阿良良木健</p>
</li>
<li><a href="https://zh.moegirl.org.cn/末日DISCO">https://zh.moegirl.org.cn/末日DISCO</a> 萌娘百科詞條 末日Disco</li>
<li><a href="https://zh.moegirl.org.cn/明日DISCO">https://zh.moegirl.org.cn/明日DISCO</a> 萌娘百科詞條 明日Disco</li>
<li><a href="https://zh.moegirl.org.cn/I_LOVE_U">https://zh.moegirl.org.cn/I_LOVE_U</a> 萌娘百科詞條 I Love U</li>
<li><a href="https://zh.moegirl.org.cn/心加心">https://zh.moegirl.org.cn/心加心</a> 萌娘百科詞條 心加心</li>
<li><p><a href="https://zh.moegirl.org.cn/CONNECT~心的連接~">https://zh.moegirl.org.cn/CONNECT~心的連接~</a> 萌娘百科詞條 CONNECT ~心的連接~</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/DECO*27">https://zh.moegirl.org.cn/DECO*27</a> 萌娘百科詞條 Deco27</p>
</li>
<li><a href="https://zh.moegirl.org.cn/愛(DECO*27)#">https://zh.moegirl.org.cn/愛(DECO*27)#</a> 萌娘百科詞條 AI</li>
<li><a href="https://zh.moegirl.org.cn/愛言葉">https://zh.moegirl.org.cn/愛言葉</a> 萌娘百科詞條 愛言葉I</li>
<li><a href="https://zh.moegirl.org.cn/愛言葉Ⅱ">https://zh.moegirl.org.cn/愛言葉Ⅱ</a> 萌娘百科詞條 愛言葉II</li>
<li><a href="https://zh.moegirl.org.cn/愛言葉Ⅲ">https://zh.moegirl.org.cn/愛言葉Ⅲ</a> 萌娘百科詞條 愛言葉III</li>
<li><a href="https://zh.moegirl.org.cn/麻煩鬼">https://zh.moegirl.org.cn/麻煩鬼</a> 萌娘百科詞條 麻煩鬼I</li>
<li><a href="https://zh.moegirl.org.cn/麻煩鬼II">https://zh.moegirl.org.cn/麻煩鬼II</a> 萌娘百科詞條 麻煩鬼II</li>
<li><p><a href="https://zh.moegirl.org.cn/初嵐">https://zh.moegirl.org.cn/初嵐</a> 萌娘百科詞條 初嵐</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/人形兔">https://zh.moegirl.org.cn/人形兔</a> 萌娘百科詞條 人形兔</p>
</li>
<li><a href="https://zh.moegirl.org.cn/Daybreak(樂正綾)#">https://zh.moegirl.org.cn/Daybreak(樂正綾)#</a> 萌娘百科詞條 Daybreak</li>
<li><p><a href="https://zh.moegirl.org.cn/Hear_me!">https://zh.moegirl.org.cn/Hear_me!</a> 萌娘百科詞條 Hear me!</p>
</li>
<li><p><a href="https://zh.moegirl.org.cn/青春追夢人">https://zh.moegirl.org.cn/青春追夢人</a> 萌娘百科詞條 青春追夢人</p>
</li>
<li><a href="https://zh.moegirl.org.cn/折光">https://zh.moegirl.org.cn/折光</a> 萌娘百科詞條 折光</li>
<li><a href="https://zh.moegirl.org.cn/青春calling">https://zh.moegirl.org.cn/青春calling</a> 萌娘百科詞條 青春Calling</li>
</ul>
<p>文字內容引用遵守《知識共享 署名-非商業性使用-相同方式共享 3.0》協議。</p>
]]></content>
      <tags>
        <tag>VOCALOID</tag>
        <tag>VOCALOID China</tag>
        <tag>VOCALOID Comments &amp; Recommendations</tag>
        <tag>洛天依</tag>
        <tag>Atunemic (阿良良木健)</tag>
        <tag>Hatsune Miku (初音MIKU)</tag>
        <tag>言和</tag>
        <tag>人形兎</tag>
        <tag>樂正綾</tag>
        <tag>Hachioji-P (八王子P)</tag>
        <tag>Deco27</tag>
        <tag>無名社</tag>
      </tags>
  </entry>
  <entry>
    <title>所以説C/C++11的匿名函數(Lambda表達式)的方括號是什麽鬼啊...</title>
    <url>/next-nest/2021/11/04/whathe-brackets-in-lambdas-of-cpp11/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>今天晚上和同學聊天提到了<code>C/C++11</code>，然後注意到了其中的特性之一——也就是匿名函數，亦即Lambda表達式。</p>
<p>所謂匿名函數，最大的特點之一就是這樣的函數可以有名字也可以沒有名字，但<strong>它不需要命名就可以定義與使用</strong>，這就連帶地使之具有了<strong>臨時性</strong>。</p>
<p>但是關於<code>C/C++11</code>的匿名函數(Lambda表達式)，我有些東西真的想不通…</p>
<span id="more"></span>
<p>下面會以</p>
<script type="math/tex; mode=display">\psi(x) = 128 x ^2 + 39</script><p>或</p>
<script type="math/tex; mode=display">\psi(x, y) = 128 x y + 39</script><p>爲例來定義相關函數，以闡述我關於這些匿名函數(Lambda表達式)的觀點。</p>
<h2 id="Node-JS"><a href="#Node-JS" class="headerlink" title="Node.JS"></a><code>Node.JS</code></h2><p>我們先來看<code>Node.JS</code>當中的普通函數定義</p>
<figure class="highlight js"><figcaption><span>Ordinary Function Definition</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">psi</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>與匿名函數(Lambda表達式)定義</p>
<figure class="highlight js"><figcaption><span>Function Definition using Lambda Expression</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> psi = (<span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>匿名函數(Lambda表達式)調用起來可以像普通函數一樣</p>
<pre><code>psi(1.)
</code></pre><p>如若不想讓這個函數占用一個單獨的名字，那麽可以在定義后立即調用，不過調用后亦會即刻銷毀</p>
<figure class="highlight js"><figcaption><span>Anonymously Defining & Calling</span></figcaption><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>;</span><br><span class="line">&#125;)(<span class="number">1.</span>);</span><br></pre></td></tr></table></figure>
<p>就算是嵌套、複雜的函數亦可以如此這般進行定義</p>
<figure class="highlight js"><figcaption><span>Complicated Lambda Expressions</span></figcaption><table><tr><td class="code"><pre><span class="line">(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> hostname = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">  <span class="keyword">const</span> port = <span class="number">3939</span>;</span><br><span class="line">  http.createServer(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.statusCode = <span class="number">200</span>;</span><br><span class="line">    res.setHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/plain&quot;</span>);</span><br><span class="line">    res.end(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">  &#125;).listen(port, hostname, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`Server running at http://<span class="subst">$&#123;hostname&#125;</span>:<span class="subst">$&#123;port&#125;</span>/`</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>
<p>你甚至還可以把 <code>(function (vars&amp;params) &#123;...&#125;)</code> 簡寫為 <code>((vars&amp;params) =&gt; &#123;...&#125;)</code></p>
<figure class="highlight js"><figcaption><span>Simplified Lambda Expressions</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> psi = (<span class="function">(<span class="params">x</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>;</span><br><span class="line">&#125;);</span><br><span class="line">(<span class="function">(<span class="params">x</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>;</span><br><span class="line">&#125;)(<span class="number">1.</span>);</span><br></pre></td></tr></table></figure>
<p>這是<code>Node.JS</code>的匿名函數(Lambda表達式)，可以説是最靈活的一種。</p>
<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a><code>Python</code></h2><p><code>Python</code>中的匿名函數真的是用<code>lambda</code>關鍵字來進行定義的，例如普通地定義函數</p>
<figure class="highlight py"><figcaption><span>Lambda Expressions in Python(3.x)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">psi</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">128</span> * x * y + <span class="number">39</span></span><br><span class="line"><span class="comment"># &lt;=&gt;</span></span><br><span class="line">psi = <span class="keyword">lambda</span> x, y : <span class="number">128</span> * x * y + <span class="number">39</span></span><br></pre></td></tr></table></figure>
<p>可以用下方的<code>lambda</code>表達式來替代，但是<code>Python</code>的<code>lambda</code>表達式不能表示複雜的函數過程，僅僅適用於一個表達式出返回值的那種。</p>
<h2 id="C-C"><a href="#C-C" class="headerlink" title="C/C++"></a><code>C/C++</code></h2><p>到你<code>C/C++</code>的匿名函數(Lambda表達式)就神奇了…</p>
<figure class="highlight cpp"><figcaption><span>Lambda Expressions in C/C++11</span></figcaption><table><tr><td class="code"><pre><span class="line">([] (x) &#123; <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>; &#125;)(<span class="number">1.</span>);</span><br><span class="line">([=] (x) &#123; <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>; &#125;)(<span class="number">1.</span>);</span><br><span class="line">([&amp;] (x) &#123; <span class="keyword">return</span> <span class="number">128</span> * x * x + <span class="number">39</span>; &#125;)(<span class="number">1.</span>);</span><br><span class="line">([&amp;] (x, y) &#123; <span class="keyword">return</span> <span class="number">128</span> * x * y + <span class="number">39</span>; &#125;)(<span class="number">1.</span>);</span><br><span class="line">([&amp;y] (x) &#123; <span class="keyword">return</span> <span class="number">128</span> * x * y + <span class="number">39</span>; &#125;)(<span class="number">1.</span>);</span><br></pre></td></tr></table></figure>
<p>看網上有這些用法…嗯?什麽意思??</p>
<p>我去網上在一個叫做<code>C++11 FAQ中文版</code>章節<code>Lambda表達式</code>中找到了相關的解釋</p>
<blockquote><p><code>[&amp;]</code>是一個<strong>捕捉列表(capture list)</strong>，用於<strong>描述</strong>將要被lambda函數<strong>以引用傳參方式使用的局部變量</strong>。如果我們僅想“捕捉”參數<code>v</code>，則可以寫為：<code>[&amp;v]</code>。而如果我們想以傳值方式使用參數<code>v</code>，則可以寫為：<code>[=v]</code>。如果什麼都不捕捉，則為：<code>[]</code>。將所有的變量以引用傳遞方式使用時採用<code>[&amp;]</code>，而相對地，使用<code>[=]</code>則相應地表示以傳值方式使用所有變量。（譯註：“所有變量”即指lambda表達式在被調用處，所能見到的所有局部變量）</p>
<footer><strong>C++11 FAQ中文版</strong><cite><a href="https://wizardforcel.gitbooks.io/cpp-11-faq/content/18.html">Lambda表達式</a></cite></footer></blockquote>
<!--### ***<ruby>わかります！<rt>我day到rua！</rt></ruby>***-->
<h2 id="題外話-關於C-C-11標準"><a href="#題外話-關於C-C-11標準" class="headerlink" title="題外話!!關於C/C++11標準"></a>題外話!!關於<code>C/C++11</code>標準</h2><p>我所見過的很多同學，使用的<code>C/C++</code>開發環境是一款稱爲<code>Dev-C++</code>的老古董，裏面用的是<code>gcc/g++ 4.9.2</code>，去網上查了查，支持的編譯標準似乎只到<code>C/C++98</code>…</p>
<p><img src="https://liella-gen2.github.io/imagehost/dev-gcc-4.9.2.jpeg" alt></p>
<p>其實除了用不了<code>auto</code>之外也沒什麽，雖説現在的<code>gcc/g++</code>都已經更新到第九代了…支持的標準也是2017年的<code>C/C++17</code>了…</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><code>zhzz2012</code> - cpp11新特性講解與應用 <a href="https://blog.csdn.net/zhzz2012/article/details/52151660/">https://blog.csdn.net/zhzz2012/article/details/52151660/</a></li>
<li>C++11 FAQ中文版 Lambda表達式 <a href="https://wizardforcel.gitbooks.io/cpp-11-faq/content/18.html">https://wizardforcel.gitbooks.io/cpp-11-faq/content/18.html</a></li>
<li><a href="https://isocpp.org/wiki/faq/cpp11/">https://isocpp.org/wiki/faq/cpp11/</a></li>
</ol>
]]></content>
      <tags>
        <tag>NOIp</tag>
      </tags>
  </entry>
  <entry>
    <title>張 正錦 菌給的模板 I 圖論</title>
    <url>/next-nest/2021/11/24/zzj-templates-01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>第一輯 圖論</p>
<ul>
<li><code>LCA</code><ul>
<li>倍增求<code>LCA</code></li>
<li>樹鏈剖分求<code>LCA</code></li>
</ul>
</li>
<li>最短路<ul>
<li><code>Dijkstra</code></li>
<li><code>SPFA</code> (判負環)</li>
<li><code>SPFA</code> (不判負環)</li>
<li><code>Floyd</code> (多源最短路)</li>
<li>次短路</li>
</ul>
</li>
<li>分層圖</li>
<li>樹鏈剖分</li>
<li>樹上差分</li>
<li>差分約束</li>
<li>二分圖匹配<ul>
<li><code>Hungary</code>算法 (社會主義分老婆)</li>
</ul>
</li>
<li>最小生成樹<ul>
<li><code>Kruskal</code></li>
</ul>
</li>
<li>强連通分量<ul>
<li><code>Tarjan</code>縮點 + 染色</li>
</ul>
</li>
</ul>
<span id="more"></span>
<h2 id="LCA"><a href="#LCA" class="headerlink" title="LCA"></a>LCA</h2><h3 id="by-Binary-Lifting"><a href="#by-Binary-Lifting" class="headerlink" title="by Binary Lifting"></a>by Binary Lifting</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nqp main</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500010</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],f[maxn][<span class="number">21</span>],deep[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,root,cur;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,next;</span><br><span class="line">&#125;tree[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tree[++cur].next = head[u];</span><br><span class="line">    tree[cur].to = v;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    f[u][<span class="number">0</span>] = fa;</span><br><span class="line">    deep[u] = deep[fa] + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i; i=tree[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = tree[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v == fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(v,u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(deep[a] &gt; deep[b]) <span class="built_in">swap</span>(a,b);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[a] &lt;= deep[b] - (<span class="number">1</span>&lt;&lt;i))</span><br><span class="line">        &#123;</span><br><span class="line">            b = f[b][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a == b) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(f[a][i] == f[b][i]) <span class="keyword">continue</span>;</span><br><span class="line">        a = f[a][i];</span><br><span class="line">        b = f[b][i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[a][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nqp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios :: <span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; root;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u,v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        <span class="built_in">add</span>(u,v);</span><br><span class="line">        <span class="built_in">add</span>(v,u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(root,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[j][i] = f[f[j][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="built_in">LCA</span>(a,b);</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="by-HLD"><a href="#by-HLD" class="headerlink" title="by HLD"></a>by HLD</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,n,m,s,son[maxn],id[maxn],size[maxn],f[maxn],top[maxn],deep[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to;</span><br><span class="line">&#125;edge[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa, <span class="keyword">int</span> dep)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    size[u] = <span class="number">1</span>;</span><br><span class="line">    deep[u] = dep;</span><br><span class="line">    f[u] = fa;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v == fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs1</span>(v,u,dep+<span class="number">1</span>);</span><br><span class="line">        size[u] += size[v];</span><br><span class="line">        <span class="keyword">if</span>(son[u] == <span class="number">-1</span> || size[v] &gt; size[son[u]]) son[u] = v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    top[u] = t;</span><br><span class="line">    <span class="keyword">if</span>(son[u]==<span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">dfs2</span>(son[u],t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v == f[u] || v == son[u]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs2</span>(v,v); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(top[x] != top[y])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[top[x]] &lt; deep[top[y]]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">        x = f[top[x]];</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">if</span>(deep[x] &gt; deep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(son,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(son));</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    n = <span class="built_in">read</span>(), m = <span class="built_in">read</span>(), s = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        a = <span class="built_in">read</span>(), b = <span class="built_in">read</span>();</span><br><span class="line">        <span class="built_in">add</span>(a,b);</span><br><span class="line">        <span class="built_in">add</span>(b,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs1</span>(s,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">dfs2</span>(s,s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        a = <span class="built_in">read</span>(), b = <span class="built_in">read</span>();</span><br><span class="line">        cout &lt;&lt; <span class="built_in">LCA</span>(a,b) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Shortest-Path"><a href="#Shortest-Path" class="headerlink" title="Shortest Path"></a>Shortest Path</h2><h3 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a>Dijkstra</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,n,m,vis[maxn],dis[maxn]; <span class="comment">//dis[i]到i的最短路</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to,w;</span><br><span class="line">&#125;edge[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> <span class="comment">//边表建图</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">heapnode</span> //小根堆</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> d,u;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> heapnode &amp; h) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> d &gt; h.d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    priority_queue &lt;heapnode&gt; q;</span><br><span class="line">    <span class="built_in">memset</span>(dis,<span class="number">0x3f</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>((heapnode)&#123;dis[s],s&#125;);</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        heapnode p = q.<span class="built_in">top</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">int</span> u = p.u;</span><br><span class="line">        <span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>; <span class="comment">//如果已经访问过则跳过</span></span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(dis[edge[i].to] &gt; dis[u] + edge[i].w)</span><br><span class="line">                dis[edge[i].to] = dis[u] + edge[i].w;</span><br><span class="line">            q.<span class="built_in">push</span>((heapnode)&#123;dis[edge[i].to],edge[i].to&#125;); <span class="comment">//扩展下一个点</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dijkstra</span>(<span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; dis[n];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="SPFA-with-judging-negative-ring"><a href="#SPFA-with-judging-negative-ring" class="headerlink" title="SPFA (with judging negative ring)"></a>SPFA (with judging negative ring)</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nqp main </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500050</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,n,m,s,dis[maxn],vis[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,next,w;</span><br><span class="line">&#125;edge[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> flag;<span class="keyword">int</span> num[maxn]; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) dis[i] = <span class="number">2147483647</span>;</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>(s);</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> p;</span><br><span class="line">        p = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        vis[p] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[p]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">            <span class="keyword">if</span>(dis[v] &gt; dis[p]+edge[i].w)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(num[v]&gt;n)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="number">2333</span>;</span><br><span class="line">                    <span class="keyword">return</span> ;</span><br><span class="line">                &#125;</span><br><span class="line">                dis[v] = dis[p]+edge[i].w;</span><br><span class="line">                <span class="keyword">if</span>(!vis[v])</span><br><span class="line">                &#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(v);</span><br><span class="line">                    vis[v] = <span class="number">1</span>;</span><br><span class="line">                    num[v] = num[s]+<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nqp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">SPFA</span>(s);</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; dis[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="SPFA-without-judging-negative-ring"><a href="#SPFA-without-judging-negative-ring" class="headerlink" title="SPFA (without judging negative ring)"></a>SPFA (without judging negative ring)</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500010</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,n,m,dis[maxn],vis[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to,w;</span><br><span class="line">&#125;edge[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">       <span class="built_in">memset</span>(dis,<span class="number">0x3f</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line">       dis[u] = <span class="number">0</span>;</span><br><span class="line">       q.<span class="built_in">push</span>(u);</span><br><span class="line">       vis[u] = <span class="number">1</span>;</span><br><span class="line">       <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">int</span> p = q.<span class="built_in">front</span>();</span><br><span class="line">           q.<span class="built_in">pop</span>();</span><br><span class="line">           vis[p] = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> i=head[p]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">if</span>(dis[edge[i].to] &gt; dis[p] + edge[i].w)</span><br><span class="line">               &#123;</span><br><span class="line">                   dis[edge[i].to] = dis[p] + edge[i].w;</span><br><span class="line">                   <span class="keyword">if</span>(!vis[edge[i].to])</span><br><span class="line">                   &#123;</span><br><span class="line">                       q.<span class="built_in">push</span>(edge[i].to);</span><br><span class="line">                       vis[edge[i].to] = <span class="number">1</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">SPFA</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; dis[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Floyd"><a href="#Floyd" class="headerlink" title="Floyd"></a>Floyd</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> Map[maxn][maxn],n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(Map,INF,<span class="built_in"><span class="keyword">sizeof</span></span>(Map));</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        Map[a][b] = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>; k&lt;=n; k++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">                <span class="keyword">if</span>(k!=i &amp;&amp; i!=j &amp;&amp; k!=j)</span><br><span class="line">                    Map[i][j] = <span class="built_in">min</span>(Map[i][j],Map[i][k]+Map[k][j]);</span><br><span class="line">    cout &lt;&lt; Map[<span class="number">1</span>][n];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Second-Shortest-Path"><a href="#Second-Shortest-Path" class="headerlink" title="Second Shortest Path"></a>Second Shortest Path</h3><figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P2865">Luogu P2865</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,vis[maxn],dis1[maxn],dis2[maxn],n,m;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to,w;</span><br><span class="line">&#125;edge[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">heapnode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> d,u;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> heapnode &amp; h) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> d &gt; h.d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> dis[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    priority_queue &lt;heapnode&gt; q;</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>((heapnode)&#123;dis[s],s&#125;);</span><br><span class="line">    <span class="keyword">int</span> u;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        heapnode p = q.<span class="built_in">top</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        u = p.u;</span><br><span class="line">        <span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>( dis[edge[i].to] &gt; dis[u] + edge[i].w)</span><br><span class="line">                dis[edge[i].to] = dis[u] + edge[i].w;</span><br><span class="line">            q.<span class="built_in">push</span>((heapnode)&#123;dis[edge[i].to],edge[i].to&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dis1,<span class="number">0x3f</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(dis1));</span><br><span class="line">    <span class="built_in">memset</span>(dis2,<span class="number">0x3f</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(dis2));</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    n = <span class="built_in">read</span>(), m = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        a = <span class="built_in">read</span>(), b = <span class="built_in">read</span>(), c = <span class="built_in">read</span>();</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">        <span class="built_in">add</span>(b,a,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dijkstra</span>(<span class="number">1</span>,dis1);</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(vis));</span><br><span class="line">    <span class="built_in">dijkstra</span>(n,dis2);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>; u&lt;=n; u++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> cmp = dis1[u] + dis2[edge[i].to] + edge[i].w;</span><br><span class="line">            <span class="keyword">if</span>(cmp &gt; dis1[n] &amp;&amp; cmp &lt; ans) ans = cmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Layered-Graph"><a href="#Layered-Graph" class="headerlink" title="Layered Graph"></a>Layered Graph</h2><figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P2939">Luogu P2939</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100100</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,n,m,k,dis[maxn][<span class="number">21</span>],vis[maxn][<span class="number">21</span>];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to,w;</span><br><span class="line">&#125;edge[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">heapnode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> d,u,h;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> heapnode &amp; h) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> d &gt; h.d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    priority_queue &lt;heapnode&gt; q;</span><br><span class="line">    <span class="built_in">memset</span>(dis,<span class="number">0x3f</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line">    dis[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>((heapnode)&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        heapnode p = q.<span class="built_in">top</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">int</span> u = p.u;</span><br><span class="line">        <span class="keyword">int</span> h = p.h;</span><br><span class="line">        <span class="keyword">if</span>(vis[u][h]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u][h] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(dis[edge[i].to][h] &gt; dis[u][h] + edge[i].w)</span><br><span class="line">            &#123;</span><br><span class="line">                dis[edge[i].to][h] = dis[u][h] + edge[i].w;</span><br><span class="line">                q.<span class="built_in">push</span>((heapnode)&#123;dis[edge[i].to][h],edge[i].to,h&#125;);</span><br><span class="line">            &#125;    </span><br><span class="line">            <span class="keyword">if</span>(h &lt; k)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(dis[edge[i].to][h+<span class="number">1</span>] &gt; dis[u][h])</span><br><span class="line">                &#123;</span><br><span class="line">                    dis[edge[i].to][h+<span class="number">1</span>] = dis[u][h];</span><br><span class="line">                    q.<span class="built_in">push</span>((heapnode)&#123;dis[edge[i].to][h+<span class="number">1</span>],edge[i].to,h+<span class="number">1</span>&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    n = <span class="built_in">read</span>(), m = <span class="built_in">read</span>(), k = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        a = <span class="built_in">read</span>(), b = <span class="built_in">read</span>(), c = <span class="built_in">read</span>();</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">        <span class="built_in">add</span>(b,a,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dijkstra</span>(<span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; dis[n][k];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="HLD-Heavy-Light-Decomposition"><a href="#HLD-Heavy-Light-Decomposition" class="headerlink" title="HLD (Heavy-Light Decomposition)"></a>HLD (Heavy-Light Decomposition)</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nqp main</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">300030</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,n,m,r,p,top[maxn],son[maxn],tid[maxn],rnk[maxn],size[maxn],val[maxn];</span><br><span class="line"><span class="keyword">int</span> deep[maxn],f[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">int</span> f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(c == <span class="string">&#x27;-&#x27;</span>) f = <span class="number">-1</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v*<span class="number">10</span> + c -<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to;</span><br><span class="line">&#125;edge[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ljm</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> sum,tag,lc,rc;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a[rt].sum = a[a[rt].lc].sum + a[a[rt].rc].sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    &#123;</span><br><span class="line">        a[rt].sum = rnk[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    a[rt].lc = ++tot;</span><br><span class="line">    <span class="built_in">build</span>(l,mid,a[rt].lc);</span><br><span class="line">    a[rt].rc = ++tot;</span><br><span class="line">    <span class="built_in">build</span>(mid+<span class="number">1</span>,r,a[rt].rc);</span><br><span class="line">    <span class="built_in">update</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    printf(&quot;%d %d\n&quot;,l,r);</span></span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) / <span class="number">2</span>;</span><br><span class="line">    a[a[rt].lc].sum += (mid-l+<span class="number">1</span>) * a[rt].tag;</span><br><span class="line">    a[a[rt].lc].tag += a[rt].tag;</span><br><span class="line">    a[a[rt].rc].sum += (r-mid) * a[rt].tag;</span><br><span class="line">    a[a[rt].rc].tag += a[rt].tag;</span><br><span class="line">    a[rt].tag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt, <span class="keyword">int</span> nowl, <span class="keyword">int</span> nowr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == nowl &amp;&amp; r == nowr)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> a[rt].sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">pushdown</span>(l,r,rt);</span><br><span class="line">    <span class="keyword">if</span>(nowr &lt;= mid) ans += <span class="built_in">query</span>(l,mid,a[rt].lc,nowl,nowr);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nowl &gt; mid) ans += <span class="built_in">query</span>(mid+<span class="number">1</span>,r,a[rt].rc,nowl,nowr);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans += <span class="built_in">query</span>(l,mid,a[rt].lc,nowl,mid);</span><br><span class="line">        ans += <span class="built_in">query</span>(mid+<span class="number">1</span>,r,a[rt].rc,mid+<span class="number">1</span>,nowr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt, <span class="keyword">int</span> nowl, <span class="keyword">int</span> nowr, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == nowl &amp;&amp; r == nowr)</span><br><span class="line">    &#123;</span><br><span class="line">        a[rt].sum += (r-l+<span class="number">1</span>) * w;</span><br><span class="line">        a[rt].tag += w;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">pushdown</span>(l,r,rt);</span><br><span class="line">    <span class="keyword">if</span>(nowr &lt;= mid) <span class="built_in">modify</span>(l,mid,a[rt].lc,nowl,nowr,w);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nowl &gt; mid) <span class="built_in">modify</span>(mid+<span class="number">1</span>,r,a[rt].rc,nowl,nowr,w);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">modify</span>(l,mid,a[rt].lc,nowl,mid,w);</span><br><span class="line">        <span class="built_in">modify</span>(mid+<span class="number">1</span>,r,a[rt].rc,mid+<span class="number">1</span>,nowr,w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">update</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//-----------------------------------------------------build tree</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa, <span class="keyword">int</span> dep)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    size[u] = <span class="number">1</span>;</span><br><span class="line">    deep[u] = dep;</span><br><span class="line">    f[u] = fa;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v == fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs1</span>(v,u,dep+<span class="number">1</span>);</span><br><span class="line">        size[u] += size[v];</span><br><span class="line">        <span class="keyword">if</span>(son[u] == <span class="number">-1</span> || size[v] &gt; size[son[u]]) son[u] = v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    top[u] = t;</span><br><span class="line">    tid[u] = cnt;</span><br><span class="line">    rnk[cnt] = val[u];</span><br><span class="line">    cnt++;</span><br><span class="line">    <span class="keyword">if</span>(son[u] == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">dfs2</span>(son[u],t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(!tid[v]) <span class="built_in">dfs2</span>(v,v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query_path</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(top[x] != top[y])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[top[x]] &lt; deep[top[y]]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">        ans += <span class="built_in">query</span>(<span class="number">1</span>,n,<span class="number">1</span>,tid[top[x]],tid[x]);</span><br><span class="line">        x = f[top[x]];</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span>(deep[x] &gt; deep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">    ans += <span class="built_in">query</span>(<span class="number">1</span>,n,<span class="number">1</span>,tid[x],tid[y]);        </span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify_path</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(top[x] != top[y])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[top[x]] &lt; deep[top[y]]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">        <span class="built_in">modify</span>(<span class="number">1</span>,n,<span class="number">1</span>,tid[top[x]],tid[x],w);</span><br><span class="line">        x = f[top[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(deep[x] &gt; deep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">    <span class="built_in">modify</span>(<span class="number">1</span>,n,<span class="number">1</span>,tid[x],tid[y],w);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nqp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    <span class="built_in">memset</span>(son,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(size));</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; r &gt;&gt; p;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; val[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="built_in">add</span>(a,b);</span><br><span class="line">        <span class="built_in">add</span>(b,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs1</span>(r,r,<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">dfs2</span>(r,r);</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        x = <span class="built_in">read</span>();</span><br><span class="line">        <span class="keyword">if</span>(x == <span class="number">1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> y,z,k;</span><br><span class="line">            y = <span class="built_in">read</span>(), z = <span class="built_in">read</span>(), k = <span class="built_in">read</span>();</span><br><span class="line">            <span class="built_in">modify_path</span>(y,z,k);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> y,z;</span><br><span class="line">            y = <span class="built_in">read</span>(), z = <span class="built_in">read</span>();</span><br><span class="line">            <span class="keyword">int</span> ans = <span class="built_in">query_path</span>(y,z);</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> y,z;</span><br><span class="line">            y = <span class="built_in">read</span>(), z = <span class="built_in">read</span>();</span><br><span class="line">            <span class="built_in">modify</span>(<span class="number">1</span>,n,<span class="number">1</span>,tid[y],tid[y]+size[y]<span class="number">-1</span>,z);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> y;</span><br><span class="line">            y = <span class="built_in">read</span>();</span><br><span class="line">            cout &lt;&lt; <span class="built_in">query</span>(<span class="number">1</span>,n,<span class="number">1</span>,tid[y],tid[y]+size[y]<span class="number">-1</span>) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Tree-Diff"><a href="#Tree-Diff" class="headerlink" title="Tree Diff"></a>Tree Diff</h2><figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P3128">Luogu P3128</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500050</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,f[maxn][<span class="number">21</span>],deep[maxn],faa[maxn];</span><br><span class="line"><span class="keyword">int</span> d[maxn];</span><br><span class="line"><span class="keyword">int</span> maxx = <span class="number">-0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> next,to,w;</span><br><span class="line">&#125;edge[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    faa[u] = fa;</span><br><span class="line">    f[u][<span class="number">0</span>] = fa;</span><br><span class="line">    deep[u] = deep[fa] + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(fa == v) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(v,u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(deep[a] &gt; deep[b]) <span class="built_in">swap</span>(a,b);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(deep[a] &lt;= deep[b] - (<span class="number">1</span>&lt;&lt;i))</span><br><span class="line">        &#123;</span><br><span class="line">            b = f[b][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a == b) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(f[a][i] == f[b][i]) <span class="keyword">continue</span>;</span><br><span class="line">        a = f[a][i];</span><br><span class="line">        b = f[b][i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[a][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[a]; i!=<span class="number">-1</span>; i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v == fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs1</span>(v,a);</span><br><span class="line">        d[a] += d[v];</span><br><span class="line">    &#125;</span><br><span class="line">    maxx = <span class="built_in">max</span>(d[a],maxx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    n = <span class="built_in">read</span>(), m = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        a = <span class="built_in">read</span>(), b = <span class="built_in">read</span>();</span><br><span class="line">        <span class="built_in">add</span>(a,b,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(b,a,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[j][i] = f[f[j][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b;</span><br><span class="line">        a = <span class="built_in">read</span>(), b = <span class="built_in">read</span>();</span><br><span class="line">        d[a]++;d[b]++;d[<span class="built_in">LCA</span>(a,b)]--;d[f[<span class="built_in">LCA</span>(a,b)][<span class="number">0</span>]]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs1</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; maxx;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Diff-Constraints"><a href="#Diff-Constraints" class="headerlink" title="Diff Constraints"></a>Diff Constraints</h2><p>我们可以用松弛来理解一下差分约束.</p>
<p>对于松弛来说 <code>dis[v] &gt; dis[u] + edge[i].w</code>;<br>我们可以认为 <code>v &gt; u + c</code>. 移项可得 <code>v – u &gt; w</code> 所以我们就可以建一条从<code>u-&gt;v</code>的边,边权为<code>c</code></p>
<p>例如:</p>
<pre><code>a + b &gt;= c 即 add(b,a,c);
a – b &lt;= c 即 add(b,a,-c);
a – b == 0 即 add(a,b,0) add(b,a,0);
</code></pre><p>用差分约束建图即可</p>
<ul>
<li><strong><em>注: 一定要用SPFA判负环!!!!!!</em></strong></li>
</ul>
<h2 id="Bipartite-Graph-Match"><a href="#Bipartite-Graph-Match" class="headerlink" title="Bipartite Graph Match"></a>Bipartite Graph Match</h2><h3 id="Hungary-Algorithm"><a href="#Hungary-Algorithm" class="headerlink" title="Hungary Algorithm"></a>Hungary Algorithm</h3><p><del>社会主义分老婆</del></p>
<figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P3386">Luogu P3386</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v * <span class="number">10</span> + c -<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> flag[maxn][maxn],vis[maxn],n,m,e,cx[maxn],cy[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">1</span>; y&lt;=m; y++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(flag[x][y] &amp;&amp; !vis[y])</span><br><span class="line">        &#123;</span><br><span class="line">            vis[y] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(!cy[y] || <span class="built_in">dfs</span>(cy[y]))</span><br><span class="line">            &#123;</span><br><span class="line">                cx[x] = y;</span><br><span class="line">                cy[y] = x;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = <span class="built_in">read</span>(), m = <span class="built_in">read</span>(), e = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=e; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        x = <span class="built_in">read</span>(), y = <span class="built_in">read</span>();</span><br><span class="line">        flag[x][y] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(vis));</span><br><span class="line">        ans += <span class="built_in">dfs</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="MST-Minimum-Spanning-Tree"><a href="#MST-Minimum-Spanning-Tree" class="headerlink" title="MST (Minimum Spanning Tree)"></a>MST (Minimum Spanning Tree)</h2><h3 id="Kruskal"><a href="#Kruskal" class="headerlink" title="Kruskal"></a>Kruskal</h3><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nqp main</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getint</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v*<span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">600000</span>;</span><br><span class="line"><span class="keyword">int</span> cur,head[maxn],n,m,vis[maxn],ans,f[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,next,w,u;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> hzw &amp;h) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> w &lt; h.w;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;edge[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    edge[cur].w = w;</span><br><span class="line">    edge[cur].u = u;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[x]!=x)</span><br><span class="line">        f[x] = <span class="built_in">find</span>(f[x]);</span><br><span class="line">    <span class="keyword">return</span> f[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">un</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    f[<span class="built_in">find</span>(x)] = <span class="built_in">find</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">find</span>(x) == <span class="built_in">find</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kru</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="built_in">sort</span>(edge+<span class="number">1</span>,edge+m+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">query</span>(edge[i].u,edge[i].to))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">un</span>(edge[i].to,edge[i].u);</span><br><span class="line">            num++;</span><br><span class="line">            ans += edge[i].w;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num == n<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nqp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        a = <span class="built_in">getint</span>(),b = <span class="built_in">getint</span>(),c = <span class="built_in">getint</span>();</span><br><span class="line">        <span class="built_in">add</span>(a,b,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i] = i;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="built_in">kru</span>();</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="SCC-Strongly-Connected-Components"><a href="#SCC-Strongly-Connected-Components" class="headerlink" title="SCC (Strongly Connected Components)"></a>SCC (Strongly Connected Components)</h2><h3 id="Tarjan"><a href="#Tarjan" class="headerlink" title="Tarjan"></a>Tarjan</h3><figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P1726">Luogu P1726</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> head[maxn],cur,m,vis[maxn],dfn[maxn],low[maxn],n,belong[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> to,next;</span><br><span class="line">&#125;edge[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edge[++cur].next = head[u];</span><br><span class="line">    edge[cur].to = v;</span><br><span class="line">    head[u] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tot,col;</span><br><span class="line">stack &lt;<span class="keyword">int</span>&gt; s; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    cout&lt;&lt;&quot;now &quot;&lt;&lt;u&lt;&lt;endl;</span></span><br><span class="line">    dfn[u] = low[u] = ++tot;</span><br><span class="line">    s.<span class="built_in">push</span>(u);</span><br><span class="line">    vis[u] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u]; i!=<span class="number">-1</span>; i=edge[i].next)    </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[edge[i].to])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">tarjan</span>(edge[i].to);</span><br><span class="line">            low[u] = <span class="built_in">min</span>(low[u],low[edge[i].to]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(vis[edge[i].to])</span><br><span class="line">        &#123;</span><br><span class="line">            low[u] = <span class="built_in">min</span>(low[u],dfn[edge[i].to]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(low[u] == dfn[u])</span><br><span class="line">    &#123;</span><br><span class="line">        col++;    </span><br><span class="line">        <span class="keyword">while</span>(s.<span class="built_in">top</span>() != u)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> front = s.<span class="built_in">top</span>();</span><br><span class="line">            belong[front] = col;</span><br><span class="line">            s.<span class="built_in">pop</span>();</span><br><span class="line">            vis[front] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> front = s.<span class="built_in">top</span>();</span><br><span class="line">        belong[front] = col;</span><br><span class="line">        s.<span class="built_in">pop</span>();</span><br><span class="line">        vis[front] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ljm</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> val,color;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> ljm &amp; j) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> val &gt; j.val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;size[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(head));</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y,z;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">        <span class="keyword">if</span>(z==<span class="number">1</span>) <span class="built_in">add</span>(x,y);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">add</span>(x,y),<span class="built_in">add</span>(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">if</span>(!dfn[i]) <span class="built_in">tarjan</span>(i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        size[belong[i]].val++;<span class="comment">//记录环的长度</span></span><br><span class="line">        size[belong[i]].color = belong[i];<span class="comment">//记录环的颜色 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(size+<span class="number">1</span>,size+<span class="number">1</span>+n);</span><br><span class="line">    cout &lt;&lt; size[<span class="number">1</span>].val &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(belong[i] == size[<span class="number">1</span>].color) cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>NOIp</tag>
        <tag>zzjノ模板</tag>
      </tags>
  </entry>
  <entry>
    <title>張 正錦 菌給的模板 II 數據結構</title>
    <url>/next-nest/2021/11/25/zzj-templates-02/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>第二輯 數據結構</p>
<ul>
<li>綫段樹</li>
<li>樹狀數組</li>
<li>離散化</li>
<li>STL</li>
</ul>
<span id="more"></span>
<h2 id="Segment-Tree"><a href="#Segment-Tree" class="headerlink" title="Segment Tree"></a>Segment Tree</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nqp main</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> A[maxn],n,ans,ans1;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hzw</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> sum,lc,rc,tag,maxx;</span><br><span class="line">&#125;a[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a[rt].sum = a[a[rt].lc].sum + a[a[rt].rc].sum;</span><br><span class="line">    a[rt].maxx = <span class="built_in">max</span>(a[a[rt].lc].maxx,a[a[rt].rc].maxx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    a[a[rt].lc].sum += (mid-l+<span class="number">1</span>) * a[rt].tag;</span><br><span class="line">    a[a[rt].lc].tag += a[rt].tag;</span><br><span class="line">    a[a[rt].lc].maxx += a[rt].tag;</span><br><span class="line">    a[a[rt].rc].sum += (r-mid) * a[rt].tag;</span><br><span class="line">    a[a[rt].rc].tag += a[rt].tag;</span><br><span class="line">    a[a[rt].rc].maxx += a[rt].tag;</span><br><span class="line">    a[rt].tag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt, <span class="keyword">int</span> nowl, <span class="keyword">int</span> nowr, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == nowl &amp;&amp; r == nowr)</span><br><span class="line">    &#123;</span><br><span class="line">        a[rt].sum += (r-l+<span class="number">1</span>) * w;</span><br><span class="line">        a[rt].maxx += w;</span><br><span class="line">        a[rt].tag += w;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">pushdown</span>(l,r,rt);</span><br><span class="line">    <span class="keyword">if</span>(nowr &lt;= mid) <span class="built_in">modify</span>(l,mid,a[rt].lc,nowl,nowr,w);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nowl &gt; mid) <span class="built_in">modify</span>(mid+<span class="number">1</span>,r,a[rt].rc,nowl,nowr,w);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">modify</span>(l,mid,a[rt].lc,nowl,mid,w);</span><br><span class="line">        <span class="built_in">modify</span>(mid+<span class="number">1</span>,r,a[rt].rc,mid+<span class="number">1</span>,nowr,w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">update</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt, <span class="keyword">int</span> nowl, <span class="keyword">int</span> nowr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == nowl &amp;&amp; r == nowr)</span><br><span class="line">    &#123;</span><br><span class="line">        ans += a[rt].sum;</span><br><span class="line">        ans1 = <span class="built_in">max</span>(a[rt].maxx,ans1);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">pushdown</span>(l,r,rt);</span><br><span class="line">    <span class="keyword">if</span>(nowr &lt;= mid) <span class="built_in">query</span>(l,mid,a[rt].lc,nowl,nowr);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nowl &gt; mid) <span class="built_in">query</span>(mid+<span class="number">1</span>,r,a[rt].rc,nowl,nowr);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">query</span>(l,mid,a[rt].lc,nowl,mid);</span><br><span class="line">        <span class="built_in">query</span>(mid+<span class="number">1</span>,r,a[rt].rc,mid+<span class="number">1</span>,nowr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    &#123;</span><br><span class="line">        a[rt].sum = A[l];</span><br><span class="line">        a[rt].maxx = A[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l+r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    a[rt].lc = ++tot;</span><br><span class="line">    <span class="built_in">build</span>(l,mid,a[rt].lc);</span><br><span class="line">    a[rt].rc = ++ tot;</span><br><span class="line">    <span class="built_in">build</span>(mid+<span class="number">1</span>,r,a[rt].rc);</span><br><span class="line">    <span class="built_in">update</span>(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nqp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) cin &gt;&gt; A[i];</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,n,<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">query</span>(<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; ans1;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Fenwick-Array"><a href="#Fenwick-Array" class="headerlink" title="Fenwick Array"></a>Fenwick Array</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">500050</span>;</span><br><span class="line"><span class="keyword">int</span> tree[maxn],m,n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; (-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span><span class="comment">//维护 ,修改 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[x] += k;</span><br><span class="line">        x += <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x)</span><span class="comment">//前缀和查询 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ans += tree[x];</span><br><span class="line">        x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">        <span class="built_in">add</span>(i,a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">add</span>(b,c);</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">2</span>)</span><br><span class="line">            cout&lt;&lt;<span class="built_in">query</span>(c)-<span class="built_in">query</span>(b<span class="number">-1</span>)&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Discretization"><a href="#Discretization" class="headerlink" title="Discretization"></a>Discretization</h2><p>Hzw版离散化</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> nqp main</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> maxn=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], t[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nqp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]),t[i]=a[i];</span><br><span class="line">    <span class="built_in">sort</span>(t+<span class="number">1</span>,t+n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> m=<span class="built_in">unique</span>(t+<span class="number">1</span>,t+<span class="number">1</span>+n)-t<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        a[i]=<span class="built_in">lower_bound</span>(t+<span class="number">1</span>,t+<span class="number">1</span>+m,a[i])-t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="STL-Standard-Template-Library"><a href="#STL-Standard-Template-Library" class="headerlink" title="STL (Standard Template Library)"></a>STL (Standard Template Library)</h2><h3 id="queue"><a href="#queue" class="headerlink" title="queue"></a>queue</h3><p>先進先出的綫性數據結構。</p>
<ul>
<li><p>Definition</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">T</span>,</span></span><br><span class="line"><span class="class">    <span class="keyword">class</span> <span class="title">Container</span> =</span> std::deque&lt;T&gt;</span><br><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">queue</span>;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Members</p>
<ul>
<li><code>.push(T _element)</code> 向隊列中壓入元素</li>
<li><code>.pop()</code> 彈出隊尾元素</li>
<li><code>.empty()</code> 查詢隊列是否爲空</li>
<li><code>.size()</code> 查詢隊列大小</li>
<li><code>.front()</code> 返回隊首元素</li>
<li><code>.back()</code> 返回隊尾元素</li>
</ul>
</li>
</ul>
<h3 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h3><p>先進後出的綫性數據結構。</p>
<ul>
<li><p>Definition</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">T</span>,</span></span><br><span class="line"><span class="class">    <span class="keyword">class</span> <span class="title">Container</span> =</span> std::deque&lt;T&gt;</span><br><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">stack</span>;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Members</p>
<ul>
<li><code>.push(T _element)</code> 向棧中壓入元素</li>
<li><code>.pop()</code> 彈出棧頂元素</li>
<li><code>.top()</code> 獲取棧頂元素</li>
<li><code>.empty()</code> 審察棧中是否爲空</li>
<li><code>.size()</code> 審查棧中元素數目</li>
</ul>
</li>
</ul>
<h3 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h3><p>不定长数组</p>
<ul>
<li><p>Definition</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">T</span>,</span></span><br><span class="line"><span class="class">    <span class="keyword">class</span> <span class="title">Allocator</span> =</span> std::allocator&lt;T&gt;</span><br><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">vector</span>;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Iterator</p>
<ul>
<li><p>Definition</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line">vector &lt;T&gt; :: iterator _iter;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Usage</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line">*_iter; <span class="comment">// 取值</span></span><br><span class="line">++_iter; <span class="comment">// 向下一位移動</span></span><br><span class="line">--_iter; <span class="comment">// 向上一位移動</span></span><br><span class="line"><span class="comment">// 裝逼上天ノ練一：循環讀出矢量中的元素</span></span><br><span class="line"><span class="keyword">for</span> (vector &lt;<span class="keyword">int</span>&gt; :: iterator _iter = vec.<span class="built_in">begin</span>(); _iter != vec.<span class="built_in">end</span>(); ++_iter)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d, &quot;</span>, *_iter);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>Members</p>
<ul>
<li><code>.push_back(T _element)</code> 在最後添加元素</li>
<li><code>.size()</code> 審查矢量的元素數目</li>
<li><code>.clear()</code> 清空矢量</li>
<li><code>.begin()</code> 返回指向第一個元素的迭代器</li>
<li><code>.end()</code> 返回指向最後一個元素<strong>之後一位</strong>的迭代器</li>
<li><code>.insert(vector &lt;T&gt; :: iterator _iter, T _element)</code> 在迭代器指向位置前插入元素</li>
</ul>
</li>
</ul>
<h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p>集合</p>
<ul>
<li><p>Definition</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">T</span>,                    // <span class="title">set</span>:</span>:key_type/value_type</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Compare</span> =</span> less &lt;T&gt;,   <span class="comment">// set::key_compare/value_compare</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Alloc</span> =</span> allocator &lt;T&gt; <span class="comment">// set::allocator_type</span></span><br><span class="line">    &gt; <span class="class"><span class="keyword">class</span> <span class="title">set</span>;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Members</p>
<ul>
<li><code>.insert(T _element)</code> 向集合中插入元素</li>
<li><code>.erase(T _element)</code> 從集合中刪除指定值的元素</li>
<li><code>.clear()</code> 清空集合</li>
<li><code>.count(T _element)</code> 清點集合中指定值的元素的數目</li>
<li><code>.lower_bound(T _element)</code> 返回指向第一個<code>&gt;=</code>指定值的元素的迭代器</li>
<li><code>.upper_bound(T _element)</code> 返回指向第一個<code>&gt;</code>指定值的元素的迭代器</li>
<li><code>.equal_range(T _element)</code> 返回一個 <code>pair(.lower_bound(T _element), .upper_bound(T _element))</code></li>
</ul>
</li>
</ul>
<h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><p>映射</p>
<ul>
<li><p>Definition</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Key</span>,                                          // <span class="title">map</span>:</span>:key_type</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">T</span>,                                            // <span class="title">map</span>:</span>:mapped_type</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Compare</span> =</span> std::less &lt;Key&gt;,                    <span class="comment">// map::key_compare</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Alloc</span> =</span> std::allocator &lt;pair &lt;<span class="keyword">const</span> Key, T&gt; &gt; <span class="comment">// map::allocator_type</span></span><br><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">map</span>;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Notes</p>
<ul>
<li>超过<code>40w</code>最好别用, 时间复杂度会变成<code>O(log N)</code></li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>NOIp</tag>
        <tag>zzjノ模板</tag>
      </tags>
  </entry>
  <entry>
    <title>張 正錦 菌給的模板 III 動態規劃</title>
    <url>/next-nest/2021/11/26/zzj-templates-03/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>第三輯 動態規劃</p>
<ul>
<li>懸綫法</li>
</ul>
<span id="more"></span>
<h2 id="Hoverline"><a href="#Hoverline" class="headerlink" title="Hoverline"></a>Hoverline</h2><p>求解最大子矩陣問題。</p>
<figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P1169">Luogu P1169</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&lt;<span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(c&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; c&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v = v * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        c = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2005</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> Map[maxn][maxn],l[maxn][maxn],r[maxn][maxn],up[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = <span class="built_in">read</span>(), m = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            Map[i][j] = <span class="built_in">read</span>();</span><br><span class="line">            l[i][j] = r[i][j] = j;</span><br><span class="line">            up[i][j] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>; j&lt;=m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(Map[i][j] != Map[i][j<span class="number">-1</span>])</span><br><span class="line">                l[i][j] = l[i][j<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=m<span class="number">-1</span>; j&gt;=<span class="number">1</span>; j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(Map[i][j+<span class="number">1</span>] != Map[i][j])</span><br><span class="line">                r[i][j] = r[i][j+<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans1 = <span class="number">-0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">int</span> ans2 = <span class="number">-0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">1</span> &amp;&amp; Map[i][j] != Map[i<span class="number">-1</span>][j])</span><br><span class="line">            &#123;</span><br><span class="line">                l[i][j] = <span class="built_in">max</span>(l[i][j],l[i<span class="number">-1</span>][j]);</span><br><span class="line">                r[i][j] = <span class="built_in">min</span>(r[i][j],r[i<span class="number">-1</span>][j]);</span><br><span class="line">                up[i][j] =  up[i<span class="number">-1</span>][j] + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> a = r[i][j] - l[i][j] + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> b = <span class="built_in">min</span>(a,up[i][j]);</span><br><span class="line">            ans1 = <span class="built_in">max</span>(ans1,b*b);</span><br><span class="line">            ans2 = <span class="built_in">max</span>(ans2,a*up[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans1 &lt;&lt; endl &lt;&lt; ans2;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>NOIp</tag>
        <tag>zzjノ模板</tag>
      </tags>
  </entry>
  <entry>
    <title>張 正錦 菌給的模板 IV 字符串</title>
    <url>/next-nest/2021/11/26/zzj-templates-04/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>第四輯 字符串</p>
<ul>
<li>字符串<strong>Hash</strong></li>
<li><code>string</code>類</li>
</ul>
<span id="more"></span>
<h2 id="String-Hash"><a href="#String-Hash" class="headerlink" title="String Hash"></a>String Hash</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">192608173</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> base = <span class="number">233</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hsh</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = (ans*base+(<span class="keyword">int</span>)s[i])%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">string s[<span class="number">10005</span>];</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">10005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; s[i];</span><br><span class="line">        num[i] = <span class="built_in">hsh</span>(s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(num+<span class="number">1</span>,num+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i] != num[i<span class="number">-1</span>]) ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Class-string"><a href="#Class-string" class="headerlink" title="Class string"></a>Class string</h2><p>定義在頭文件<code>string</code>當中。</p>
]]></content>
      <tags>
        <tag>NOIp</tag>
        <tag>zzjノ模板</tag>
      </tags>
  </entry>
  <entry>
    <title>張 正錦 菌給的模板 V 數論數學</title>
    <url>/next-nest/2021/11/26/zzj-templates-05/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>第五輯 數論數學</p>
<ul>
<li>最大公約數<code>(gcd)</code></li>
<li>擴展<code>Euclidean</code></li>
<li>快速冪</li>
</ul>
<span id="more"></span>
<h2 id="GCD-Greatest-Common-Divisor"><a href="#GCD-Greatest-Common-Divisor" class="headerlink" title="GCD (Greatest Common Divisor)"></a>GCD (Greatest Common Divisor)</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Gcd</span>(b,a%b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Ex-GCD-Extended-Euclidean"><a href="#Ex-GCD-Extended-Euclidean" class="headerlink" title="Ex-GCD (Extended Euclidean)"></a>Ex-GCD (Extended Euclidean)</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> &amp;x, <span class="keyword">int</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> g = <span class="built_in">exgcd</span>(b,a%b,y,x);</span><br><span class="line">    y -= a/b*x;</span><br><span class="line">    <span class="keyword">return</span> g;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="built_in">exgcd</span>(a,b,x,y);</span><br><span class="line">    x = (x+b)%b;<span class="comment">//最小正整数解 </span></span><br><span class="line">    cout &lt;&lt; x;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Binary-Exponentiation"><a href="#Binary-Exponentiation" class="headerlink" title="Binary Exponentiation"></a>Binary Exponentiation</h2><p>其實是二進制取冪，也稱平方法。</p>
<ul>
<li><p><code>zzj</code>提供的非遞歸方案 (<code>mod p</code> 意義下取冪)</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">quick_power</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans = ans*a%p;</span><br><span class="line">        a = a*a%p;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>OI-Wiki</code><sup><a href="#fn_1" id="reffn_1">1</a></sup>上的遞歸實現</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">binpow</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res = <span class="built_in">binpow</span>(a, b / <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (b % <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> res * res * a;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> res * res;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>OI-Wiki</code>上的非遞歸實現</p>
  <figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">binpow</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a;</span><br><span class="line">        a = a * a;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://oi-wiki.org/math/quick-pow/"><code>OI-Wiki</code> 章節 快速冪</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
        <tag>zzjノ模板</tag>
      </tags>
  </entry>
  <entry>
    <title>張 正錦 菌給的模板 VI 如李特基老師一樣神乎其技又如坂本大神一般裝逼上天的算法們</title>
    <url>/next-nest/2021/11/26/zzj-templates-06/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\next-nest\assets\css\APlayer.min.css"><script src="\next-nest\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\next-nest\assets\js\Meting.min.js"></script><p>以及<code>注意事項</code></p>
<span id="more"></span>
<h2 id="ST-Table"><a href="#ST-Table" class="headerlink" title="ST Table"></a>ST Table</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> stmin[maxn][<span class="number">20</span>],stmax[maxn][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">st</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; (<span class="number">1</span>&lt;&lt;j)&lt;=n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>&lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            stmin[i][j] = <span class="built_in">min</span>(stmin[i][j<span class="number">-1</span>], stmin[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">            <span class="comment">//stmax[i][j] = max(stmin[i][j-1], stmax[i+(1&lt;&lt;j-1)][j-1]);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = (<span class="keyword">int</span>)<span class="built_in">log2</span>(r-l+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">min</span>(stmin[l][x], stmin[r-(<span class="number">1</span>&lt;&lt;x)+<span class="number">1</span>][x]);    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) stmin[i][<span class="number">0</span>] = stmax[i][<span class="number">0</span>] = a[i];</span><br><span class="line">    <span class="built_in">st</span>();</span><br><span class="line">    <span class="keyword">int</span> l,r;</span><br><span class="line">    cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">query</span>(l,r); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Batch-Process"><a href="#Batch-Process" class="headerlink" title="Batch Process"></a>Batch Process</h2><p>也就是對拍。</p>
<figure class="highlight bat"><figcaption><span>Batch</span></figcaption><table><tr><td class="code"><pre><span class="line">:loop                       ::循环</span><br><span class="line">makedata.exe                ::生成数据</span><br><span class="line">std.exe                     ::较优程序</span><br><span class="line">baoli.exe                   ::暴力程序</span><br><span class="line">fc std.out baoli.out        ::比较两个输出文件</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%errorlevel%</span> == <span class="number">1</span> <span class="built_in">pause</span>  ::如果不同则暂停</span><br><span class="line"><span class="keyword">goto</span> loop                   ::继续循环</span><br></pre></td></tr></table></figure>
<h2 id="Linear-Prime-Sieving"><a href="#Linear-Prime-Sieving" class="headerlink" title="Linear Prime Sieving"></a>Linear Prime Sieving</h2><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span>   </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> prime[<span class="number">10000005</span>],len;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10000005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Sieve_Primes</span><span class="params">(<span class="keyword">int</span> R)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a[<span class="number">0</span>] = a[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=R;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] == <span class="number">0</span>)   prime[++len] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=len &amp;&amp; i*prime[j]&lt;=R;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i*prime[j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">Sieve_Primes</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        cin &gt;&gt; num;</span><br><span class="line">        <span class="keyword">if</span>(a[num] == <span class="number">1</span>) cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="SA-Simulated-Annealing"><a href="#SA-Simulated-Annealing" class="headerlink" title="SA (Simulated Annealing)"></a>SA (Simulated Annealing)</h2><h3 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h3><p><strong>模擬退火<sup><a href="#fn_1" id="reffn_1">1</a></sup></strong>是一種隨機化算法。當一個問題的方案數量極大（甚至是無窮的）而且不是一個單峰函數時，我們常使用模擬退火求解。</p>
<h3 id="Implement"><a href="#Implement" class="headerlink" title="Implement"></a>Implement</h3><p>根據<strong>爬山算法<sup><a href="#fn_2" id="reffn_2">2</a></sup></strong>的過程，我們發現：對於一個當前最優解附近的非最優解，爬山算法直接捨去了這個解。而很多情況下，我們需要去接受這個非最優解從而跳出這個局部最優解，即為模擬退火算法。</p>
<blockquote><p>什麼是退火？</p>
<p>退火是一種金屬熱處理工藝，指的是將金屬緩慢加熱到一定溫度，保持足夠時間，然後以適宜速度冷卻。目的是降低硬度，改善切削加工性；消除殘餘應力，穩定尺寸，減少變形與裂紋傾向；細化晶粒，調整組織，消除組織缺陷。準確的說，退火是一種對材料的熱處理工藝，包括金屬材料、非金屬材料。而且新材料的退火目的也與傳統金屬退火存在異同。</p>
<footer><strong>百度百科詞條</strong><cite><a href="https://baike.baidu.com/item/退火/1039313">退火</a></cite></footer></blockquote>
<p>由於退火的規律引入了更多隨機因素，那麼我們得到最優解的概率會大大增加。於是我們可以去模擬這個過程，將目標函數作為能量函數。</p>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>先用一句話概括：如果新狀態的解更優則修改答案，否則以一定概率接受新狀態。</p>
<p>我們定義當前溫度為<code>T</code>，新狀態與已知狀態（由已知狀態通過隨機的方式得到）之間的能量（值）差為<code>ΔE</code>（<code>E&gt;=0</code>），則發生狀態轉移（修改最優解）的概率為</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">P(ΔE) = <span class="number">1</span> <span class="keyword">if</span> 新狀態更優 <span class="keyword">else</span> exp(-(ΔE) / T)</span><br></pre></td></tr></table></figure>
<ul>
<li>注意：我們有時為了使得到的解更有質量，會在模擬退火結束後，以當前溫度在得到的解附近多次隨機狀態，嘗試得到更優的解（其過程與模擬退火相似）。</li>
</ul>
<h3 id="Annealing"><a href="#Annealing" class="headerlink" title="Annealing"></a>Annealing</h3><p>如何退火（降溫）？</p>
<p>模擬退火時我們有三個參數：初始溫度<code>T_0</code>，降溫係數<code>d</code>，終止溫度<code>T_k</code>。其中<code>T_0</code>是一個比較大的數，<code>d</code>是一個非常接近<code>1</code>但是小於<code>1</code>的數，<code>T_k</code>是一個接近<code>0</code>的正數。</p>
<p>首先讓溫度<code>T = T_0</code>，然後按照上述步驟進行一次轉移嘗試，再讓<code>T = d·T</code>。當<code>T &lt; T_k</code>時模擬退火過程結束，當前最優解即為最終的最優解。</p>
<p>注意為了使得解更為精確，我們通常不直接取當前解作為答案，而是在退火過程中維護遇到的所有解的最優值。</p>
<p>引用一張 <a href="https://en.wikipedia.org/wiki/Simulated_annealing">Wiki - Simulated annealing</a> 的圖片（隨著溫度的降低，跳躍越來越不隨機，最優解也越來越穩定）。</p>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight cpp"><figcaption><span>C++</span><a href="https://www.luogu.com.cn/problem/P1337">Luogu P1337</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">10005</span>;</span><br><span class="line"><span class="keyword">int</span> n, x[N], y[N], w[N];</span><br><span class="line"><span class="keyword">double</span> ansx, ansy, dis;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Rand</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> (<span class="keyword">double</span>)<span class="built_in">rand</span>() / RAND_MAX; &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calc</span><span class="params">(<span class="keyword">double</span> xx, <span class="keyword">double</span> yy)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">double</span> res = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">    <span class="keyword">double</span> dx = x[i] - xx, dy = y[i] - yy;</span><br><span class="line">    res += <span class="built_in">sqrt</span>(dx * dx + dy * dy) * w[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (res &lt; dis) dis = res, ansx = xx, ansy = yy;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">simulateAnneal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">double</span> t = <span class="number">100000</span>;</span><br><span class="line">  <span class="keyword">double</span> nowx = ansx, nowy = ansy;</span><br><span class="line">  <span class="keyword">while</span> (t &gt; <span class="number">0.001</span>) &#123;</span><br><span class="line">    <span class="keyword">double</span> nxtx = nowx + t * (<span class="built_in">Rand</span>() * <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">double</span> nxty = nowy + t * (<span class="built_in">Rand</span>() * <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">double</span> delta = <span class="built_in">calc</span>(nxtx, nxty) - <span class="built_in">calc</span>(nowx, nowy);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">exp</span>(-delta / t) &gt; <span class="built_in">Rand</span>()) nowx = nxtx, nowy = nxty;</span><br><span class="line">    t *= <span class="number">0.97</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1000</span>; ++i) &#123;</span><br><span class="line">    <span class="keyword">double</span> nxtx = ansx + t * (<span class="built_in">Rand</span>() * <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">double</span> nxty = ansy + t * (<span class="built_in">Rand</span>() * <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">calc</span>(nxtx, nxty);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x[i], &amp;y[i], &amp;w[i]);</span><br><span class="line">    ansx += x[i], ansy += y[i];</span><br><span class="line">  &#125;</span><br><span class="line">  ansx /= n, ansy /= n, dis = <span class="built_in">calc</span>(ansx, ansy);</span><br><span class="line">  <span class="built_in">simulateAnneal</span>();</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%.3lf %.3lf\n&quot;</span>, ansx, ansy);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Monotonous-Queue"><a href="#Monotonous-Queue" class="headerlink" title="Monotonous Queue"></a>Monotonous Queue</h2><p>參見<a href="https://oi-wiki.org/ds/monotonous-queue/"><code>OI-Wiki</code>相關章節</a><sup><a href="#fn_3" id="reffn_3">3</a></sup>。</p>
<h2 id="Attentions"><a href="#Attentions" class="headerlink" title="Attentions"></a>Attentions</h2><p>以下是注意事項噠！</p>
<ul>
<li><p><em>负数取模 ! ! !</em></p>
</li>
<li><p><code>多组数据赋初值</code></p>
</li>
<li><p><em>变量名 ! ! !</em></p>
</li>
<li><p><em>正难则反 ! ! !</em></p>
</li>
<li><p><strong>数组越界 ! ! ! !</strong></p>
</li>
<li><p><code>无向图双倍maxn</code></p>
</li>
<li><p><strong><em>要有梦想 ! ! ! ! ! !</em></strong></p>
</li>
<li><p><strong><em><code>NOIP2018.RP++</code></em></strong></p>
</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><blockquote id="fn_1">
<sup>1</sup>. <a href="https://oi-wiki.org/misc/simulated-annealing/"><code>OI-Wiki</code> 章節 模擬退火</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. <a href="https://oi-wiki.org/misc/hill-climbing/"><code>OI-Wiki</code> 章節 爬山算法</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. <a href="https://oi-wiki.org/ds/monotonous-queue/"><code>OI-Wiki</code> 章節 單調隊列</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
]]></content>
      <tags>
        <tag>NOIp</tag>
        <tag>zzjノ模板</tag>
      </tags>
  </entry>
</search>
